@model List<DATN_GO.Models.Vouchers>
@using System.Globalization
@{
    Layout = "~/Areas/Seller/Views/Shared/_LayoutSeller.cshtml";
    var currentPage = ViewBag.CurrentPage ?? 1;
    var totalPages = ViewBag.TotalPages ?? 1;
    var vi = new CultureInfo("vi-VN");
}

@functions {
    public string ResolveProductImage(object prod, Microsoft.AspNetCore.Mvc.IUrlHelper url)
    {
        if (prod == null) return url.Content("~/images/no-image.png");
        var t = prod.GetType();
        string[] candidates = new[] {
            "ThumbnailUrl", "ImageUrl", "MainImage", "Avatar", "Image",
            "PictureUrl", "ImgUrl", "Url", "PhotoUrl", "ImagePath"
        };
        foreach (var name in candidates)
        {
            var prop = t.GetProperty(name);
            if (prop == null) continue;
            var val = prop.GetValue(prod) as string;
            if (string.IsNullOrWhiteSpace(val)) continue;
            val = val.Trim();
            if (val.StartsWith("http://", System.StringComparison.OrdinalIgnoreCase) ||
                val.StartsWith("https://", System.StringComparison.OrdinalIgnoreCase))
                return val;
            if (val.StartsWith("~")) return url.Content(val);
            return url.Content("~/" + val.TrimStart('/'));
        }
        return url.Content("~/images/no-image.png");
    }
}

<style>
    .thumb-grid {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        margin-top: 10px
    }

    .thumb {
        width: 44px;
        height: 44px;
        object-fit: cover;
        border-radius: 6px;
        border: 1px solid #eee
    }

    .pp-thumb {
        width: 36px;
        height: 36px;
        object-fit: cover;
        border-radius: 6px;
        margin-right: 8px;
        border: 1px solid #eee
    }

    .card.hover-shadow-lg {
        transition: .3s
    }

        .card.hover-shadow-lg:hover {
            transform: translateY(-5px);
            box-shadow: 0 1rem 3rem rgba(0,0,0,.175) !important
        }

    .form-select, .form-control {
        border-radius: 4px;
        height: 38px;
        font-size: .9rem;
        border: 1px solid #ced4da
    }

    .transition-all {
        transition: all .3s
    }

    .card .btn-outline-warning, .card .btn-outline-danger {
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: .2s
    }

    .card .btn-outline-warning {
        margin-right: 6px
    }

        .card .btn-outline-warning:hover, .card .btn-outline-danger:hover {
            transform: scale(1.1)
        }

    .badge {
        padding: .5rem .75rem;
        font-weight: 500
    }

    .card-title {
        font-weight: 700;
        font-size: 1.1rem;
        line-height: 1.2
    }



    #addVoucherModal .input-group-text, #editVoucherModal .input-group-text {
        border: none;
        background: transparent;
        min-width: 56px;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0 12px 0 18px;
        position: relative
    }

        #addVoucherModal .input-group-text:after, #editVoucherModal .input-group-text:after {
            content: '';
            position: absolute;
            right: 0;
            top: 10px;
            height: 28px;
            width: 1.5px;
            background: #e0e3e7;
            border-radius: 2px
        }

    #addVoucherModal .form-control, #editVoucherModal .form-control {
        border: none;
        background: transparent;
        box-shadow: none;
        height: 48px;
        padding-left: 14px;
        font-size: 1.05rem
    }

    #statusIcon, #editStatusIcon {
        transition: .3s;
        font-size: 1.4rem;
        color: #ff4d5d
    }

    #addVoucherModal .input-group-text i, #editVoucherModal .input-group-text i {
        font-size: 1.35rem;
        color: #ff4d5d;
        margin: 0;
    }
    .pagination {
        justify-content: flex-end !important
    }

    .scope-row {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 12px 14px;
        border: 1px solid #e9ecef;
        border-radius: 10px;
        background: #fff;
        cursor: pointer
    }

        .scope-row small {
            opacity: .7
        }

        .scope-row:hover {
            background: #fafafa
        }

    .result-box {
        background: #fff;
        border: 2px dashed #dc143c;
        border-radius: 8px;
        padding: 12px;
        min-height: 46px;
    }

    .crimson {
        color: #dc143c;
    }

    .bootstrap-select .dropdown-toggle:focus {
        border-color: #dc143c;
        box-shadow: 0 0 0 .2rem rgba(220,20,60,.25);
    }

    .bootstrap-select .dropdown-menu {
        border-radius: 8px;
        box-shadow: 0 4px 20px rgba(0,0,0,.15);
    }

    .bootstrap-select .dropdown-item.active {
        background-color: #dc143c;
    }
</style>

<div class="page-wrapper">
    <header class="main-header" id="header">
        <nav class="navbar navbar-expand-lg navbar-light" id="navbar">
            <button id="sidebar-toggler" class="sidebar-toggle"><span class="sr-only">Toggle navigation</span></button>
            <span class="page-title">MÃ ƯU ĐÃI</span>
            <div class="navbar-right">
                <ul class="nav navbar-nav">
                    <li class="custom-dropdown">
                        <a class="notify-toggler custom-dropdown-toggler" asp-controller="Notification" asp-action="Notification">
                            <i class="mdi mdi-bell-outline icon"></i>
                        </a>
                    </li>
                    <li class="dropdown user-menu">
                        <button class="dropdown-toggle nav-link" data-bs-toggle="dropdown">
                            <img src="~/images/avt-user.jpg" alt="User Profile" width="32" height="32" style="object-fit:cover" loading="lazy">
                            <span class="d-none d-lg-inline-block">@ViewBag.StoreName</span>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end">
                            <li>
                                <a class="dropdown-item d-flex align-items-center gap-2" asp-controller="Profile" asp-action="Index" asp-area="">
                                    <i class="mdi mdi-account-outline"></i><span class="nav-text">Hồ Sơ</span>
                                </a>
                            </li>
                            <li><hr class="dropdown-divider"></li>
                            <li class="dropdown-footer">
                                <a class="dropdown-item d-flex align-items-center gap-2" href="/Seller/Voucher/Logout">
                                    <i class="mdi mdi-logout"></i> <span>Đăng Xuất</span>
                                </a>
                            </li>
                        </ul>
                    </li>
                </ul>
            </div>
        </nav>
    </header>

    <!-- Toast -->
    <div style="position: fixed; top: 20px; right: 20px; z-index: 2000; width: 360px;">
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show shadow" role="alert">
                <i class="bi bi-check-circle-fill me-2"></i>@TempData["Success"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Đóng"></button>
            </div>
        }
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show shadow" role="alert">
                <i class="bi bi-exclamation-triangle-fill me-2"></i>@TempData["Error"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Đóng"></button>
            </div>
        }
    </div>

    <div class="content-wrapper">
        <div class="content">
            <div class="card card-default">
                <div class="card-header d-flex align-items-center justify-content-between">
                    <h2 class="mb-0">Danh sách giảm giá</h2>
                    <div class="btn-group">
                        <button class="btn btn-danger btn-add-voucher" data-bs-toggle="modal" data-bs-target="#addVoucherModal">
                            <i class="mdi mdi-plus"></i> Thêm voucher
                        </button>
                    </div>
                </div>

                <div class="card-body">
                    <!-- Search + Sort -->
                    <div class="d-flex flex-column flex-md-row gap-3 mb-4 align-items-md-center justify-content-between">
                        <div style="width:300px;">
                            <form id="searchForm" method="get" class="d-flex" style="width:300px;">
                                <input type="search" class="form-control" name="search" placeholder="Tìm kiếm voucher..."
                                       value="@(Context.Request.Query["search"])" oninput="submitSearch()" />
                            </form>
                        </div>
                        <div style="width:200px;">
                            <select id="sortSelect" class="form-select" style="width:200px;">
                                <option value="">Sắp xếp theo</option>
                                <option value="newest">Mới nhất</option>
                                <option value="oldest">Cũ nhất</option>
                                <option value="value-desc">Giá trị giảm dần</option>
                                <option value="value-asc">Giá trị tăng dần</option>
                            </select>
                        </div>
                    </div>

                    <!-- Voucher Items -->
                    <div class="row g-4">
                        @{
                            var nowUtc = DateTime.UtcNow;
                            var anyShown = false;
                        }
                        @foreach (var voucher in Model)
                        {
                            var used = voucher.UsedCount;
                            var isValidToShow =
                            voucher.StartDate <= nowUtc &&
                            voucher.EndDate >= nowUtc &&
                            voucher.Status == DATN_GO.Models.VoucherStatus.Valid &&
                            used < voucher.Quantity;

                            if (!isValidToShow) { continue; }
                            anyShown = true;

                            <div class="col-12 col-md-4 mb-4">
                                <div class="card shadow-sm hover-shadow-lg transition-all">
                                    <div class="card-body p-0">
                                        <div class="d-flex">
                                            <div class="bg-danger text-white p-4 d-flex align-items-center justify-content-center" style="width: 120px;">
                                                <i class="bi-ticket-perforated-fill" style="font-size: 2.5rem;"></i>
                                            </div>

                                            <div class="p-3 flex-grow-1">
                                                <div class="d-flex justify-content-between align-items-start mb-2">
                                                    <div>
                                                        <h5 class="card-title mb-1">
                                                            @(voucher.IsPercentage
                                                                ? $"Giảm {voucher.Reduce.ToString("N0", vi)}%"
                                                                : $"Giảm {voucher.Reduce.ToString("N0", vi)} VND")
                                                        </h5>
                                                        <p class="card-text text-muted mb-0">
                                                            Đơn tối thiểu @voucher.MinOrder.ToString("N0", vi)
                                                        </p>
                                                    </div>

                                                    <div class="voucher-action d-flex gap-2">
                                                        <button type="button"
                                                                class="btn btn-outline-warning btn-sm rounded-circle btn-edit-voucher"
                                                                data-bs-toggle="modal"
                                                                data-bs-target="#editVoucherModal"
                                                                data-id="@voucher.Id"
                                                                data-discount="@voucher.Reduce.ToString("G29", CultureInfo.InvariantCulture)"
                                                                data-minorder="@voucher.MinOrder.ToString("G29", CultureInfo.InvariantCulture)"
                                                                data-quantity="@voucher.Quantity.ToString("G29", CultureInfo.InvariantCulture)"
                                                                data-start="@voucher.StartDate.ToString("yyyy-MM-dd")"
                                                                data-end="@voucher.EndDate.ToString("yyyy-MM-dd")"
                                                                data-storeid="@voucher.StoreId"
                                                                data-status="@((int)voucher.Status)"
                                                                data-ispercentage="@voucher.IsPercentage.ToString().ToLower()"
                                                                data-maxdiscount="@(voucher.MaxDiscount.HasValue ? voucher.MaxDiscount.Value.ToString("G29", CultureInfo.InvariantCulture) : "")"
                                                                data-applyallproducts="@voucher.ApplyAllProducts.ToString().ToLower()"
                                                                data-applyallcategories="@voucher.ApplyAllCategories.ToString().ToLower()"
                                                                data-selectedproductids="@(voucher.SelectedProductIds != null ? string.Join(",", voucher.SelectedProductIds) : "")"
                                                                data-categoryid="@voucher.CategoryId"
                                                                data-categoryids="@((voucher.CategoryIds != null && voucher.CategoryIds.Any())
                               ? string.Join(",", voucher.CategoryIds)
                               : (voucher.CategoryId.HasValue ? voucher.CategoryId.Value.ToString() : ""))"
                                                                title="Chỉnh sửa">
                                                            <i class="bi-pencil"></i>
                                                        </button>




                                                        <button class="btn btn-outline-danger btn-sm rounded-circle btn-delete-voucher"
                                                                data-bs-toggle="modal"
                                                                data-bs-target="#deleteConfirmModal"
                                                                data-id="@voucher.Id"
                                                                title="Xóa">
                                                            <i class="bi bi-trash"></i>
                                                        </button>
                                                    </div>
                                                </div>

                                                <div class="d-flex flex-column gap-1">
                                                    <small class="text-success">
                                                        <i class="bi bi-calendar2-check me-1"></i>
                                                        Bắt đầu: @voucher.StartDate.ToString("dd/MM/yyyy")
                                                    </small>
                                                    <small class="text-danger">
                                                        <i class="bi bi-calendar2-x me-1"></i>
                                                        Hết hạn: @voucher.EndDate.ToString("dd/MM/yyyy")
                                                    </small>
                                                </div>

                                                <div class="mt-2 d-flex gap-2 flex-wrap">
                                                    <span class="badge bg-success text-white">
                                                        <i class="bi bi-box-seam me-1"></i>
                                                        Còn lại: @(voucher.Quantity - used)
                                                    </span>
                                                    <span class="badge bg-light text-dark border">
                                                        @(voucher.IsPercentage ? "Giảm %" : "Giảm VND")
                                                    </span>
                                                    @if (voucher.IsPercentage && voucher.MaxDiscount.HasValue && voucher.MaxDiscount.Value > 0)
                                                    {
                                                        <span class="badge bg-light text-dark border">
                                                            Tối đa @voucher.MaxDiscount.Value.ToString("N0", vi)
                                                        </span>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }

                        @if (!anyShown)
                        {
                            <div class="col-12">
                                <div class="text-center text-muted py-5">
                                    <i class="bi bi-card-text" style="font-size:2rem;"></i>
                                    <div class="mt-2">Không có voucher khả dụng.</div>
                                </div>
                            </div>
                        }

                        @if (ViewBag.TotalPages > 1)
                        {
                            <div class="w-100 d-flex justify-content-end mt-4">
                                <nav aria-label="Page navigation">
                                    <ul class="pagination mb-0">
                                        <li class="page-item @(ViewBag.CurrentPage <= 1 ? "disabled" : "")">
                                            <a class="page-link border-danger text-danger"
                                               href="?page=@(ViewBag.CurrentPage - 1)&search=@ViewBag.Search&sort=@ViewBag.Sort">Previous</a>
                                        </li>

                                        @for (int i = 1; i <= ViewBag.TotalPages; i++)
                                        {
                                            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                                <a class="page-link @(i == ViewBag.CurrentPage ? "bg-danger text-white border-danger" : "text-danger border-danger")"
                                                   href="?page=@i&search=@ViewBag.Search&sort=@ViewBag.Sort">@i</a>
                                            </li>
                                        }

                                        <li class="page-item @(ViewBag.CurrentPage >= ViewBag.TotalPages ? "disabled" : "")">
                                            <a class="page-link border-danger text-danger"
                                               href="?page=@(ViewBag.CurrentPage + 1)&search=@ViewBag.Search&sort=@ViewBag.Sort">Next</a>
                                        </li>
                                    </ul>
                                </nav>
                            </div>
                        }
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

<!-- ===================== MODALS ===================== -->
<!-- Modal Thêm Voucher -->
<div class="modal fade" id="addVoucherModal" tabindex="-1" aria-labelledby="addVoucherModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form id="voucherForm" asp-area="Seller" asp-controller="Voucher" asp-action="Create" method="post">
                @Html.AntiForgeryToken()

                <!-- Header -->
                <div class="modal-header bg-danger">
                    <h5 class="modal-title text-white" id="addVoucherModalLabel">Thêm Voucher</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Đóng"></button>
                </div>

                <!-- Body -->
                <div class="modal-body">
                    <!-- Type -->
                    <div class="mb-3">
                        <label class="form-label d-block">Kiểu giảm giá</label>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="IsPercentage" id="reduceTypeMoney" value="false" checked>
                            <label class="form-check-label" for="reduceTypeMoney">Giảm theo số tiền (VND)</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="IsPercentage" id="reduceTypePercent" value="true">
                            <label class="form-check-label" for="reduceTypePercent">Giảm theo phần trăm (%)</label>
                        </div>
                        <div class="form-text">Nếu chọn %, có thể thiết lập “Giảm tối đa”.</div>
                    </div>

                    <!-- Reduce -->
              <div class="mb-4" id="reduceWrapper">
                  <label class="form-label"><span id="reduceLabel">Mức Giảm Giá (VNĐ)</span></label>
                  <div class="input-group">
                    <span class="input-group-text"><i class="bi bi-cash-coin"></i></span>
                    <!-- Ô hiển thị -->
                    <input type="text" class="form-control" id="DiscountAmountDisplay"
                           inputmode="numeric" required
                           placeholder="Nhập số tiền giảm"
                           data-money-target="DiscountAmount" />
                    <!-- Ô ẩn (gửi về server) -->
                    <input type="hidden" id="DiscountAmount" name="Reduce" />
                    <span class="input-group-text" id="reduceSuffix">VND</span>
                  </div>
                  <div class="text-danger small mt-1" id="discountAmountError"></div>
                </div>


                    <div class="mb-4 d-none" id="maxDiscountGroup">
                        <label class="form-label" for="MaxDiscountDisplay">Giảm tối đa (VND) – tùy chọn</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-graph-down"></i></span>
                            <!-- Ô hiển thị -->
                            <input type="text" class="form-control" id="MaxDiscountDisplay"
                                   inputmode="numeric" placeholder="VD: 50.000"
                                   data-money-target="MaxDiscount" />
                            <!-- Ô ẩn -->
                            <input type="hidden" id="MaxDiscount" name="MaxDiscount" />
                            <span class="input-group-text">VND</span>
                        </div>
                    </div>


                    <!-- Min / Qty -->
                    <div class="mb-4">
                        <label class="form-label" for="MinOrderDisplay">Đơn Hàng Tối Thiểu (VNĐ)</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-bag-check"></i></span>
                            <!-- Ô hiển thị -->
                            <input type="text" class="form-control" id="MinOrderDisplay"
                                   inputmode="numeric" required placeholder="Nhập giá trị đơn tối thiểu"
                                   data-money-target="MinOrder" />
                            <!-- Ô ẩn -->
                            <input type="hidden" id="MinOrder" name="MinOrder" />
                        </div>
                        <div class="text-danger small mt-1" id="minOrderError"></div>
                    </div>

                    <div class="mb-4">
                        <label class="form-label" for="QuantityDisplay">Số Lượng</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-list-ol"></i></span>
                            <!-- Ô hiển thị -->
                            <input type="text" class="form-control" id="QuantityDisplay"
                                   inputmode="numeric" required placeholder="Nhập số lượng voucher"
                                   data-money-target="Quantity" />
                            <!-- Ô ẩn -->
                            <input type="hidden" id="Quantity" name="Quantity" />
                        </div>
                        <div class="text-danger small mt-1" id="quantityError"></div>
                    </div>

                    <!-- Time -->
                    <div class="row">
                        <div class="col-md-6 mb-4">
                            <label class="form-label" for="startDate">Ngày Bắt Đầu</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-calendar-event"></i></span>
                                <input type="date" class="form-control" id="startDate" name="StartDate" required>
                            </div>
                        </div>
                        <div class="col-md-6 mb-4">
                            <label class="form-label" for="endDate">Ngày Hết Hạn</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-calendar-x"></i></span>
                                <input type="date" class="form-control" id="endDate" name="EndDate" required>
                            </div>
                        </div>
                    </div>

                    <div class="mb-4">
                        <label class="form-label" for="status">Trạng Thái</label>
                        <div class="input-group status-toggle">
                            <span class="input-group-text"><i id="statusIcon" class="bi bi-toggle-on"></i></span>
                            <select class="form-control" id="status" name="Status" onchange="updateStatusIcon()" required>
                                <option value="0">Còn hạn</option>
                                <option value="1">Hết hạn</option>
                            </select>
                        </div>
                    </div>


                    <!-- Apply all -->
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="ApplyAllProducts" name="ApplyAllProducts" value="true">
                            <input type="hidden" name="ApplyAllProducts" value="false">
                            <label class="form-check-label fw-bold" for="ApplyAllProducts">
                                Áp dụng tất cả sản phẩm
                            </label>
                        </div>
                    </div>

                    <!-- Selector row -->
                    <div id="addProductGroupSummary" class="mb-3">
                        <div class="scope-row" onclick="showProductsTab('add'); openProductPicker('add')">
                            <div>
                                <div><strong>Áp dụng cho nhóm sản phẩm</strong></div>
                                <small>Nhấn để chọn sản phẩm</small>
                            </div>
                            <div id="addSelectedCount">0 đã chọn ▸</div>
                        </div>
                        <div id="addSelectedPreview" class="thumb-grid"></div>
                    </div>

                    <!-- Hidden inputs -->
                    <div id="addSelectedInputs"></div>

                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="ApplyAllCategories" name="ApplyAllCategories" value="true">
                            <input type="hidden" name="ApplyAllCategories" value="false" />
                            <label class="form-check-label fw-bold" for="ApplyAllCategories">
                                Áp dụng tất cả danh mục
                            </label>
                        </div>
                    </div>

                    <!-- Tabs phạm vi -->
                    <ul class="nav nav-tabs" id="addScopeTabs">
                        <li class="nav-item"><a class="nav-link active" data-bs-toggle="tab" href="#addTabCategory">Theo danh mục</a></li>
                    </ul>
                    <div class="tab-content border rounded-bottom p-3" id="addScopeTabsContent">
                        <div class="tab-pane fade show active" id="addTabCategory">
                            <div id="addCategoryBlock" class="mt-2">
                                <div class="demo-section">
                                    <label class="form-label fw-bold">Chọn nhiều danh mục sản phẩm:</label>

                                    <!-- MULTIPLE SELECT -->
                                    <select class="selectpicker form-control custom-select p-0"
                                            id="addCategoryIds"
                                            name="CategoryIds"
                                            multiple
                                            data-live-search="true"
                                            data-width="100%"
                                        @foreach (var cat in ViewBag.Categories)
                                        {
                                            <option value="@cat.Id" data-tokens="@cat.Name">@cat.Name</option>
                                        }
                                    </select>

                                    <!-- HỘP KẾT QUẢ -->
                                    <div class="result-box mt-2" id="addCategoryResult">
                                        <small class="text-muted">Kết quả sẽ hiển thị ở đây...</small>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="addTabProducts">
                            <!-- KHÔNG tạo addSelectedInputs lần 2 -->
                        </div>
                    </div>


                    <input type="hidden" name="Type" value="0" />
                    <input type="hidden" name="StoreId" value="@ViewBag.StoreId" />
                </div>

                <!-- Footer -->
                <div class="modal-footer">
                    <button type="button" class="btn btn-light btn-pill" data-bs-dismiss="modal">Đóng</button>
                    <button type="submit" class="btn btn-danger btn-pill">Thêm Voucher</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- ===================== MODAL: EDIT ===================== -->
<div class="modal fade" id="editVoucherModal" tabindex="-1" aria-labelledby="editVoucherModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form id="editVoucherForm" asp-area="Seller" asp-controller="Voucher" asp-action="Edit" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="Id" id="editVoucherId" />

                <div class="modal-header bg-danger">
                    <h5 class="modal-title text-white" id="editVoucherModalLabel">Sửa Voucher</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Đóng"></button>
                </div>

                <div class="modal-body">
                    <!-- Type -->
                    <div class="mb-3">
                        <label class="form-label d-block">Kiểu giảm giá</label>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="IsPercentage" id="editReduceTypeMoney" value="false">
                            <label class="form-check-label" for="editReduceTypeMoney">Giảm theo số tiền (VND)</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="IsPercentage" id="editReduceTypePercent" value="true">
                            <label class="form-check-label" for="editReduceTypePercent">Giảm theo phần trăm (%)</label>
                        </div>
                    </div>

                    <!-- Reduce -->
                    <div class="mb-4">
                        <label class="form-label">
                            <span id="editReduceLabel">Mức Giảm Giá (VNĐ)</span>
                            <i class="bi bi-question-circle text-muted" data-bs-toggle="tooltip" title="Nếu %, 1–100. Nếu VND, nhập số tiền."></i>
                        </label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-cash-coin"></i></span>
                            <input type="text" class="form-control" id="editDiscountAmountDisplay"
                                   placeholder="Nhập giá trị" inputmode="numeric"
                                   data-money-target="editDiscountAmount" />
                            <input type="hidden" name="Reduce" id="editDiscountAmount" />
                            <span class="input-group-text" id="editReduceSuffix">VND</span>
                        </div>
                        <div class="text-danger small mt-1" id="editDiscountAmountError"></div>
                    </div>

                    <!-- Max Discount -->
                    <div class="mb-4 d-none" id="editMaxDiscountGroup">
                        <label class="form-label" for="editMaxDiscountDisplay">Giảm tối đa (VND) – tùy chọn</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-graph-down"></i></span>
                            <input type="text" class="form-control" id="editMaxDiscountDisplay"
                                   placeholder="VD: 50.000" inputmode="numeric"
                                   data-money-target="editMaxDiscount" />
                            <input type="hidden" id="editMaxDiscount" name="MaxDiscount" />
                            <span class="input-group-text">VND</span>
                        </div>
                    </div>

                    <!-- Min / Qty -->
                    <div class="mb-4">
                        <label class="form-label" for="editMinOrderDisplay">Đơn Hàng Tối Thiểu (VNĐ)</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-bag-check"></i></span>
                            <input type="text" class="form-control" id="editMinOrderDisplay"
                                   placeholder="Nhập giá trị đơn tối thiểu" inputmode="numeric"
                                   data-money-target="editMinOrder" />
                            <input type="hidden" name="MinOrder" id="editMinOrder" />
                        </div>
                        <div class="text-danger small mt-1" id="editMinOrderError"></div>
                    </div>
                    <div class="mb-4">
                        <label class="form-label" for="editQuantityDisplay">Số Lượng</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-list-ol"></i></span>
                            <input type="text" class="form-control" id="editQuantityDisplay"
                                   placeholder="Nhập số lượng voucher" inputmode="numeric"
                                   data-money-target="editQuantity" />
                            <input type="hidden" name="Quantity" id="editQuantity" />
                        </div>
                        <div class="text-danger small mt-1" id="editQuantityError"></div>
                    </div>

                    <!-- Time -->
                    <div class="row">
                        <div class="col-md-6 mb-4">
                            <label class="form-label" for="editStartDate">Ngày Bắt Đầu</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-calendar-event"></i></span>
                                <input type="date" name="StartDate" class="form-control" id="editStartDate" required>
                            </div>
                        </div>
                        <div class="col-md-6 mb-4">
                            <label class="form-label" for="editEndDate">Ngày Hết Hạn</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-calendar-x"></i></span>
                                <input type="date" name="EndDate" class="form-control" id="editEndDate" required>
                            </div>
                        </div>
                    </div>

                    <!-- Scope (giống ADD) -->
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="editApplyAllProducts" name="ApplyAllProducts" value="true">
                            <input type="hidden" name="ApplyAllProducts" value="false" />
                            <label class="form-check-label fw-bold" for="editApplyAllProducts">
                                Áp dụng tất cả sản phẩm
                            </label>
                        </div>
                    </div>

                    <div id="editProductGroupSummary" class="mb-3">
                        <div class="scope-row" onclick="showProductsTab('edit'); openProductPicker('edit')">
                            <div>
                                <div><strong>Áp dụng cho nhóm sản phẩm</strong></div>
                                <small>Nhấn để chọn sản phẩm</small>
                            </div>
                            <div id="editSelectedCount">0 đã chọn ▸</div>
                        </div>
                        <div id="editSelectedPreview" class="thumb-grid"></div>
                    </div>
                    <div id="editSelectedInputs"></div>

                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="editApplyAllCategories" name="ApplyAllCategories" value="true">
                            <input type="hidden" name="ApplyAllCategories" value="false" />
                            <label class="form-check-label fw-bold" for="editApplyAllCategories">
                                Áp dụng tất cả danh mục
                            </label>
                        </div>
                    </div>

                    <!-- Tabs phạm vi -->
                    <ul class="nav nav-tabs" id="editScopeTabs">
                        <li class="nav-item"><a class="nav-link active" data-bs-toggle="tab" href="#editTabCategory">Theo danh mục</a></li>
                    </ul>
                    <div class="tab-content border rounded-bottom p-3" id="editScopeTabsContent">
                        <div class="tab-pane fade show active" id="editTabCategory">
                            <div id="editCategoryBlock" class="mt-2">
                                <div id="editCategoryBlock" class="mt-2">
                                    <div class="demo-section">
                                        <label class="form-label fw-bold">Chọn nhiều danh mục sản phẩm:</label>

                                        <select class="selectpicker form-control custom-select p-0"
                                                id="editCategoryIds"
                                                name="CategoryIds"
                                                multiple
                                                data-live-search="true"
                                                data-width="100%"
                                            @foreach (var cat in ViewBag.Categories)
                                            {
                                                <option value="@cat.Id" data-tokens="@cat.Name">@cat.Name</option>
                                            }
                                        </select>

                                        <div class="result-box mt-2" id="editCategoryResult">
                                            <small class="text-muted">Chưa chọn gì...</small>
                                        </div>
                                    </div>
                                </div>


                            </div>
                        </div>
                        <div class="tab-pane fade" id="editTabProducts"></div>
                    </div>

                    <input type="hidden" name="Type" value="0" />
                    <input type="hidden" name="StoreId" id="editStoreId" value="@ViewBag.StoreId" />
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-light btn-pill" data-bs-dismiss="modal">Đóng</button>
                    <button type="submit" class="btn btn-danger btn-pill">Lưu Thay Đổi</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- ===================== MODAL: DELETE ===================== -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="deleteVoucherForm" method="post" asp-area="Seller" asp-controller="Voucher" asp-action="DeleteVoucherConfirmed">
                @Html.AntiForgeryToken()
                <div class="modal-header bg-danger">
                    <h5 class="modal-title text-white" id="deleteConfirmModalLabel">Thông Báo Xóa</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Đóng"></button>
                </div>
                <div class="modal-body">
                    Bạn có chắc chắn muốn xóa không? Hành động này sẽ không thể hoàn tác.
                    <input type="hidden" name="id" id="deleteVoucherFormId" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-light btn-pill" data-bs-dismiss="modal">Đóng</button>
                    <button type="submit" class="btn btn-danger btn-pill">Xóa</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- ===================== MODAL: PRODUCT PICKER ===================== -->
<div class="modal fade" id="productPickerModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg">
        <div class="modal-content">

            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Chọn sản phẩm</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>

            <div class="modal-body">
                <div class="mb-3">
                    <input type="text" class="form-control" id="ppSearch" placeholder="Nhập từ khóa sản phẩm...">
                </div>

                <div id="ppList" class="list-group list-group-flush" style="max-height:60vh;overflow:auto;">
                    @foreach (var p in ViewBag.Products)
                    {
                        var img = ResolveProductImage(p, Url);
                        <label class="list-group-item d-flex align-items-center">
                            <input class="form-check-input me-3 pp-item" type="checkbox"
                                   value="@p.Id" data-name="@p.Name" data-img="@img" />
                            <img src="@img" class="pp-thumb me-2" alt="@p.Name" loading="lazy" style="width:40px;height:40px;object-fit:cover;" />
                            <span>@p.Name</span>
                        </label>
                    }
                </div>
            </div>

            <div class="modal-footer">
                <div class="me-auto">
                    <span id="ppSelectedCount">0 đã chọn</span>
                </div>
                <button type="button" class="btn btn-light" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-danger" id="ppAddBtn">Thêm</button>
            </div>
        </div>
    </div>
</div>

<script>
    /* ====================== Tiện ích ====================== */
    const $id = (s) => document.getElementById(s);

    /* Debounce search */
    let searchTimeout;
    function submitSearch(){ clearTimeout(searchTimeout); searchTimeout=setTimeout(()=>document.getElementById('searchForm')?.submit(),300); }

    /* Định dạng số VN (cho input hiển thị) */
    const vnGroup   = s => (s || '').replace(/\D/g, '').replace(/\B(?=(\d{3})+(?!\d))/g, '.');
    const vnUnGroup = s => (s || '').replace(/\./g, '');

    /* Gán formatter và đồng bộ hidden */
    function wireMoneyInput(display) {
      if (!display || display._wiredMoney) return;  // tránh gắn trùng
      display._wiredMoney = true;

      const hiddenId = display.dataset.moneyTarget;
      const hidden = document.getElementById(hiddenId);
      if (!hidden) return;

      if (hidden.value) display.value = vnGroup(hidden.value);

      const onInput = () => {
        const raw = vnUnGroup(display.value);
        display.value = vnGroup(display.value);
        hidden.value = raw;
      };
      const onKey = (e) => { if (!/[0-9]/.test(e.key)) e.preventDefault(); };

      display.addEventListener('input', onInput);
      display.addEventListener('keypress', onKey);

      // store để tháo ra khi đổi mode
      display._moneyHandlers = { onInput, onKey };
    }

    // ===== NEW: tháo toàn bộ listener tiền khi đổi mode =====
    function unwireMoneyInput(display) {
      if (!display || !display._wiredMoney) return display;
      const { onInput, onKey } = display._moneyHandlers || {};
      if (onInput)  display.removeEventListener('input', onInput);
      if (onKey)    display.removeEventListener('keypress', onKey);
      display._wiredMoney = false;
      display._moneyHandlers = null;
      return display;
    }

    // ===== PATCHED: hiển thị/ẩn đúng "Giảm tối đa" & quản lý listener đúng cách =====
    function configureReduceFormatting(isPercent, prefix) {
      let disp    = document.getElementById((prefix || '') + 'DiscountAmountDisplay');
      const hid   = document.getElementById((prefix || '') + 'DiscountAmount');
      const maxWrap = document.getElementById(prefix ? 'editMaxDiscountGroup' : 'maxDiscountGroup');
      const label = document.getElementById(prefix ? 'editReduceLabel' : 'reduceLabel');
      const suffix= document.getElementById(prefix ? 'editReduceSuffix' : 'reduceSuffix');
      if (!disp || !hid) return;

      // gỡ listener tiền trước khi chuyển mode để tránh double-format
      unwireMoneyInput(disp);

      if (isPercent) {
        // ===== % MODE =====
        if (label)  label.textContent  = 'Mức Giảm Giá (%)';
        if (suffix) suffix.textContent = '%';
        maxWrap?.classList.remove('d-none');   // <-- SHOW khi %

        disp.placeholder = 'Nhập phần trăm (1 - 100)';
        // Ở %: hiển thị số thô, không chấm ngàn
        disp.value = (hid.value || '').replace(/\D/g, '');
        disp.oninput = () => {
          disp.value = disp.value.replace(/\D/g, '').slice(0, 3);
          let v = parseInt(disp.value || '0', 10);
          if (isNaN(v)) v = 0;
          v = Math.max(1, Math.min(100, v));
          hid.value = v.toString();
          disp.value = hid.value; // đồng bộ lại UI
        };
      } else {
        // ===== VND MODE =====
        if (label)  label.textContent  = 'Mức Giảm Giá (VNĐ)';
        if (suffix) suffix.textContent = 'VND';
        maxWrap?.classList.add('d-none');      // <-- HIDE khi tiền mặt

        disp.placeholder = 'Nhập số tiền giảm (>= 1.000)';
        disp.oninput = null; // bỏ handler % nếu có
        // gắn formatter tiền (một lần)
        wireMoneyInput(disp);
        // hiển thị lại theo định dạng tiền
        disp.value = vnGroup(hid.value || '');
      }
    }

    /* Tabs helper */
    function setTabActive(anchorSelector){
      const el=document.querySelector(anchorSelector);
      if(!el) return;
      new bootstrap.Tab(el).show();
    }
    function showProductsTab(mode){
      if(mode==='add') setTabActive('#addScopeTabs a[href="#addTabProducts"]');
      else setTabActive('#editScopeTabs a[href="#editTabProducts"]');
    }

    /* Toggle "Áp dụng tất cả sản phẩm" */
    function wireAllProductsToggle(prefix){
      const chk     = $id(prefix==='edit'?'editApplyAllProducts':'ApplyAllProducts');
      const summary = $id(prefix==='edit'?'editProductGroupSummary':'addProductGroupSummary');
      const inputs  = $id(prefix==='edit'?'editSelectedInputs':'addSelectedInputs');
      const preview = $id(prefix==='edit'?'editSelectedPreview':'addSelectedPreview');
      const counter = $id(`${prefix||'add'}SelectedCount`);
      const sync=()=>{
        const all=chk?.checked??false;
        if(summary) summary.style.display=all?'none':'block';
        if(all){ if(inputs) inputs.innerHTML=''; if(preview) preview.innerHTML=''; if(counter) counter.textContent='0 đã chọn ▸'; }
      };
      chk?.addEventListener('change', sync);
      sync();
    }

    /* Toggle "Áp dụng tất cả danh mục" */
    function wireAllCategoriesToggle(prefix){
      const chk  = $id(prefix==='edit' ? 'editApplyAllCategories' : 'ApplyAllCategories');
      const block= $id(prefix==='edit' ? 'editCategoryBlock'     : 'addCategoryBlock');
      const selId= prefix==='edit' ? '#editCategoryIds' : '#addCategoryIds';
      const resId= prefix==='edit' ? '#editCategoryResult' : '#addCategoryResult';

      const sync = () => {
        const all = chk?.checked ?? false;
        if (block) block.style.display = all ? 'none' : 'block';
        if (all && window.jQuery) {
          $(selId).selectpicker('deselectAll').selectpicker('refresh');
          $(resId).html('<small class="text-muted">Chưa chọn gì...</small>');
        }
      };
      chk?.addEventListener('change', sync);
      sync();
    }

    /* Status icons (an toàn nếu không có phần tử) */
    function updateStatusIcon(){
      const v=$id("status")?.value, icon=$id("statusIcon");
      if(!icon) return;
      if(v==="0"){ icon.classList.remove("bi-toggle-off"); icon.classList.add("bi-toggle-on"); }
      else { icon.classList.remove("bi-toggle-on"); icon.classList.add("bi-toggle-off"); }
    }
    function updateEditStatusIcon(){
      const v=$id("editStatus")?.value, icon=$id("editStatusIcon");
      if(!icon) return;
      if(v==="0"){ icon.classList.remove("bi-toggle-off"); icon.classList.add("bi-toggle-on"); }
      else { icon.classList.remove("bi-toggle-on"); icon.classList.add("bi-toggle-off"); }
    }

    /* ======= Product Picker ======= */
    let ppMode='add';
    function openProductPicker(mode){
      ppMode = mode;
      const pickerEl = $id('productPickerModal');
      if (!pickerEl) return;

      // Prefill checkbox từ hidden inputs hiện có
      const selected = new Set(
        [...document.querySelectorAll(`#${ppMode}SelectedInputs input[name="SelectedProductIds"]`)]
          .map(i => i.value)
      );
      document.querySelectorAll('#ppList .pp-item').forEach(cb => cb.checked = selected.has(cb.value));
      updatePPSelectedCount();

      // Modal lồng
      const parentModalEl = document.querySelector('#addVoucherModal.show, #editVoucherModal.show');
      const parentModalInstance = parentModalEl ? bootstrap.Modal.getInstance(parentModalEl) : null;

      const showPickerNow = () => {
        const picker = bootstrap.Modal.getOrCreateInstance(pickerEl);
        picker.show();
        pickerEl.addEventListener('hidden.bs.modal', function handler(){
          pickerEl.removeEventListener('hidden.bs.modal', handler);
          parentModalInstance?.show();
        }, { once: true });
      };

      if (!parentModalInstance) showPickerNow();
      else {
        const onceHidden = function(){
          parentModalEl.removeEventListener('hidden.bs.modal', onceHidden);
          setTimeout(showPickerNow, 0);
        };
        parentModalEl.addEventListener('hidden.bs.modal', onceHidden);
        parentModalInstance.hide();
      }
    }

    function updatePPSelectedCount(){
      const n = document.querySelectorAll('#ppList .pp-item:checked').length;
      const label = $id('ppSelectedCount');
      if (label) label.textContent = `${n} đã chọn`;
      buildPreviewFromPicker(ppMode);
    }

    function buildPreviewFromPicker(prefix){
      const container = $id(`${prefix}SelectedPreview`);
      if (!container) return;
      container.innerHTML = '';
      document.querySelectorAll('#ppList .pp-item:checked').forEach(cb => {
        const img = cb.dataset.img || '/images/no-image.png';
        const alt = cb.dataset.name || '';
        const el = document.createElement('img');
        el.src = img; el.alt = alt; el.className = 'thumb';
        el.onerror = function(){ this.src = '/images/no-image.png'; };
        container.appendChild(el);
      });
    }

    function buildPreviewFromIds(prefix, ids){
      const container = $id(`${prefix}SelectedPreview`);
      if (!container) return;
      container.innerHTML = '';
      const map = new Map();
      document.querySelectorAll('#ppList .pp-item').forEach(cb => {
        map.set(cb.value, { img: cb.dataset.img, name: cb.dataset.name });
      });
      ids.forEach(id => {
        const m = map.get(id) || {};
        const el = document.createElement('img');
        el.src = m.img || '/images/no-image.png';
        el.alt = m.name || '';
        el.className = 'thumb';
        el.onerror = function(){ this.src = '/images/no-image.png'; };
        container.appendChild(el);
      });
    }

    /* ====================== INIT ====================== */
    document.addEventListener("DOMContentLoaded", function(){
      /* selectpicker */
      if (window.jQuery) { $('.selectpicker').selectpicker(); }

      /* Sort persist */
      const sortSelect=$id("sortSelect");
      const currentSort=new URLSearchParams(window.location.search).get("sort");
      if(currentSort) sortSelect.value=currentSort;
      sortSelect?.addEventListener("change", function(){
        const url=new URL(window.location.href);
        const selectedSort=sortSelect.value;
        if(selectedSort) url.searchParams.set("sort", selectedSort); else url.searchParams.delete("sort");
        const searchValue=document.querySelector('input[name="search"]')?.value;
        if(searchValue) url.searchParams.set("search", searchValue);
        window.location.href=url.toString();
      });

      /* Auto-dismiss alerts */
      const autoCloseAlerts=()=>{ document.querySelectorAll('.alert').forEach(a=>{ setTimeout(()=>{ a.style.transition='opacity .5s'; a.style.opacity='0'; setTimeout(()=>a.remove(),500); },2000); }); };
      autoCloseAlerts();
      const alertContainer=document.querySelector('div[style*="position: fixed"]');
      if(alertContainer){ new MutationObserver(m=>{ if(m.some(x=>x.addedNodes.length)) autoCloseAlerts(); }).observe(alertContainer,{childList:true}); }

      /* ========== ADD modal ========== */
      (function initAdd(){
        const rPercent=$id("reduceTypePercent");
        const rMoney  =$id("reduceTypeMoney");
        const applyAddMode=()=>configureReduceFormatting(rPercent?.checked, '');
        rPercent?.addEventListener("change", applyAddMode);
        rMoney  ?.addEventListener("change", applyAddMode);
        applyAddMode();

        const today=new Date().toISOString().split("T")[0];
        const startInput=$id("startDate"), endInput=$id("endDate");
        if(startInput){
          startInput.setAttribute("min",today);
          startInput.addEventListener("change",function(){
            if(endInput){
              endInput.setAttribute("min",this.value);
              if(endInput.value && endInput.value < this.value) endInput.value=this.value;
            }
          });
        }
        endInput?.setAttribute("min",today);

        updateStatusIcon();

        wireAllProductsToggle('');
        wireAllCategoriesToggle('');

        document.querySelectorAll('#addVoucherModal [data-money-target]').forEach(wireMoneyInput);

        $id('voucherForm')?.addEventListener('submit', () => {
          document.querySelectorAll('#addVoucherModal [data-money-target]').forEach(el => {
            const hid=$id(el.dataset.moneyTarget);
            if(hid) hid.value = vnUnGroup(el.value);
          });
        });

        if (window.jQuery) {
          $('#addCategoryIds').on('changed.bs.select', function () {
            const selectedTexts = $(this).find('option:selected').map(function () { return $(this).text(); }).get();
            $('#addCategoryResult').html(
              selectedTexts.length
                ? `<strong>Đã chọn:</strong> ${selectedTexts.join(', ')}`
                : '<small class="text-muted">Chưa chọn gì...</small>'
            );
          });

          $id('addVoucherModal')?.addEventListener('shown.bs.modal', function () {
            $('#addCategoryIds').selectpicker('render').selectpicker('refresh');
          });
        }
      })();

      /* ========== EDIT modal ========== */
      (function initEdit(){
        document.querySelectorAll('.btn-edit-voucher').forEach(function(btn){
          btn.addEventListener('click', function(){
            const norm = s => (s ?? '').toString().replace(',', '.');

            // id & date
            $id('editVoucherId').value = btn.dataset.id || '';
            $id('editStartDate').value = btn.dataset.start || '';
            $id('editEndDate').value   = btn.dataset.end || '';

            // numbers
            $id('editDiscountAmount').value = norm(btn.dataset.discount);
            $id('editMinOrder').value       = norm(btn.dataset.minorder);
            $id('editQuantity').value       = norm(btn.dataset.quantity);
            $id('editMaxDiscount').value    = norm(btn.dataset.maxdiscount);

            $id('editDiscountAmountDisplay').value = vnGroup($id('editDiscountAmount').value);
            $id('editMinOrderDisplay').value       = vnGroup($id('editMinOrder').value);
            $id('editQuantityDisplay').value       = vnGroup($id('editQuantity').value);
            $id('editMaxDiscountDisplay').value    = vnGroup($id('editMaxDiscount').value);

            // % / VND
            const isPercent = (btn.dataset.ispercentage === 'true');
            $id('editReduceTypePercent').checked = isPercent;
            $id('editReduceTypeMoney').checked   = !isPercent;
            configureReduceFormatting(isPercent, 'edit');

            // set flags (chưa toggle)
            const chkProd = $id('editApplyAllProducts');
            const chkCat  = $id('editApplyAllCategories');
            if (chkProd) chkProd.checked = (btn.dataset.applyallproducts === 'true');
            if (chkCat)  chkCat.checked  = (btn.dataset.applyallcategories === 'true');

            // === PREFILL CATEGORY (fallback CategoryId) ===
            const rawCats = (
              (btn.dataset.categoryids && btn.dataset.categoryids.trim().length)
                ? btn.dataset.categoryids
                : (btn.dataset.categoryid || '')
            ).trim();
            const catIds  = rawCats ? rawCats.split(',').map(s => s.trim()).filter(Boolean) : [];
            if (window.jQuery) {
              const $sel = $('#editCategoryIds');
              $sel.find('option').prop('selected', false);
              if (catIds.length) {
                // cách set nhanh
                $sel.selectpicker('val', catIds);
              } else {
                $sel.selectpicker('val', []);
              }
              // render trước rồi refresh
              $sel.selectpicker('render').selectpicker('refresh');

              const texts = $sel.find('option:selected').map(function(){ return $(this).text(); }).get();
              $('#editCategoryResult').html(
                texts.length ? `<strong>Đã chọn:</strong> ${texts.join(', ')}` : '<small class="text-muted">Chưa chọn gì...</small>'
              );
            }

            // === PREFILL PRODUCTS ===
            const ids=(btn.dataset.selectedproductids||'').split(',').map(s=>s.trim()).filter(Boolean);
            const cont=$id('editSelectedInputs');
            cont.innerHTML='';
            ids.forEach(id=>{
              const i=document.createElement('input');
              i.type='hidden'; i.name='SelectedProductIds'; i.value=id;
              cont.appendChild(i);
            });
            const cnt=$id('editSelectedCount');
            if(cnt) cnt.textContent=`${ids.length} đã chọn ▸`;
            buildPreviewFromIds('edit', ids);

            // SAU CÙNG mới toggle (ẩn/hiện theo flag)
            wireAllProductsToggle('edit');
            wireAllCategoriesToggle('edit');

            // formatter (chỉ gắn 1 lần)
            ['editDiscountAmountDisplay','editMinOrderDisplay','editQuantityDisplay','editMaxDiscountDisplay'].forEach(id=>{
              const el=$id(id);
              if(el && !el._wired){ wireMoneyInput(el); el._wired=true; }
            });
          });
        });

        // ensure selectpicker refresh khi modal show
        $id('editVoucherModal')?.addEventListener('shown.bs.modal', function () {
          if (window.jQuery) $('#editCategoryIds').selectpicker('render').selectpicker('refresh');
        });

        // Date min cho EDIT
        const today=new Date().toISOString().split("T")[0];
        const es=$id('editStartDate'), ee=$id('editEndDate');
        if(es){ es.setAttribute('min', today); es.addEventListener('change', function(){ if(ee){ ee.setAttribute('min', this.value); if(ee.value && ee.value < this.value) ee.value=this.value; } }); }
        ee?.setAttribute('min', today);

        // Hộp kết quả khi đổi chọn
        if (window.jQuery) {
          const renderEditCategoryResult = () => {
            const $sel = $('#editCategoryIds');
            const texts = $sel.find('option:selected').map(function(){ return $(this).text(); }).get();
            $('#editCategoryResult').html(
              texts.length ? `<strong>Đã chọn:</strong> ${texts.join(', ')}` : '<small class="text-muted">Chưa chọn gì...</small>'
            );
          };
          $('#editCategoryIds').on('changed.bs.select', renderEditCategoryResult);
          window.renderEditCategoryResult = renderEditCategoryResult;
        }

        // Đồng bộ hidden trước submit
        $id('editVoucherForm')?.addEventListener('submit', () => {
          document.querySelectorAll('#editVoucherModal [data-money-target]').forEach(el => {
            const hid=$id(el.dataset.moneyTarget);
            if(hid) hid.value = vnUnGroup(el.value);
          });
        });
      })();

      /* ====================== Picker Events ====================== */
      $id('ppSearch')?.addEventListener('input', function(){
        const q = this.value.trim().toLowerCase();
        document.querySelectorAll('#ppList .list-group-item').forEach(li => {
          const name = li.querySelector('.pp-item')?.dataset.name?.toLowerCase() ?? '';
          li.style.display = name.includes(q) ? '' : 'none';
        });
      });

      $id('ppList')?.addEventListener('change', e => {
        if (e.target.classList.contains('pp-item')) updatePPSelectedCount();
      });

      $id('ppAddBtn')?.addEventListener('click', function(){
        const ids = [...document.querySelectorAll('#ppList .pp-item:checked')].map(cb => cb.value);

        // Gắn hidden inputs vào form
        const container = $id(`${ppMode}SelectedInputs`);
        if (container) {
          container.innerHTML = '';
          ids.forEach(id => {
            const i = document.createElement('input');
            i.type = 'hidden';
            i.name = 'SelectedProductIds';
            i.value = id;
            container.appendChild(i);
          });
        }

        // Counter + Preview
        const cnt = $id(`${ppMode}SelectedCount`);
        if (cnt) cnt.textContent = `${ids.length} đã chọn ▸`;
        buildPreviewFromIds(ppMode, ids);

        // Đóng picker
        const pickerEl = $id('productPickerModal');
        const picker = bootstrap.Modal.getInstance(pickerEl);
        if (picker) picker.hide();
      });
    });
</script>
@model List<DATN_GO.ViewModels.OrderViewModel>
@using DATN_GO.Models
@{
    var userIdStr = Context.Session.GetString("Id");
    if (string.IsNullOrEmpty(userIdStr))
    {
        Context.Response.Redirect("https://localhost:7180/Login");
    }
    else
    {
        var userId = int.Parse(userIdStr);
        <script>
            const userId = @userId; // inject sang JS
        </script>
    }
}

@functions {
    public string MapStatusToText(string status)
    {
        if (!Enum.TryParse<OrderStatus>(status, out var s))
            return "Không xác định";

        return s switch
        {
            OrderStatus.ChoXuLy => "Chờ xử lý",
            OrderStatus.ChoLayHang => "Chờ lấy hàng",
            OrderStatus.DangGiao => "Đang giao",
            OrderStatus.DaHoanThanh => "Hoàn thành",
            OrderStatus.DaHuy => "Đã hủy",
            _ => "Không xác định"
        };
    }

    public string MapStatusToBadgeClass(string status)
    {
        if (!Enum.TryParse<OrderStatus>(status, out var s))
            return "bg-secondary text-white";

        return s switch
        {
            OrderStatus.ChoXuLy => "bg-warning text-dark",
            OrderStatus.ChoLayHang => "bg-info text-white",
            OrderStatus.DangGiao => "bg-success text-white",
            OrderStatus.DaHoanThanh => "bg-primary text-white",
            OrderStatus.DaHuy => "bg-danger text-white",
            _ => "bg-secondary text-white"
        };
    }

    public string FormatCurrency(decimal amount)
    {
        return string.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:C0}", amount);
    }

}

<style>
    /* Khung scroll cho phần danh sách đơn */
    .orders-scroll {
        max-height: calc(100vh - 220px); /* chỉnh tùy header/top padding của bạn */
        overflow: auto;
    }

        /* Cố định thead khi cuộn */
        .orders-scroll .table thead th {
            position: sticky;
            top: 0;
            z-index: 2;
            background: #fff; /* hoặc bg-light tùy theme */
        }

    /* Sidebar "Phân Tích Doanh Số" dính trên cùng khi cuộn */
/* chỉ sticky trên desktop */
        .analytics-sticky

    {
        position: sticky;
        top: 1rem; /* cách mép trên 16px cho đẹp */
    }

    

    /* Giảm kích thước chữ tiêu đề tab và padding để các tab nằm trên 1 hàng, không wrap chữ trong tab */
    .nav-pills .nav-link {
        font-size: 0.75rem;
        padding: 0.1rem 0.3rem;
        margin: 0 0.02rem;
        white-space: normal;
        display: inline-flex;
        align-items: center;
        gap: 0.15em;
        min-width: unset;
    }

        /* Giảm kích thước icon trong tab */
        .nav-pills .nav-link i {
            font-size: 1em;
        }

    /* Cho phép các tab tự động xuống dòng nếu không đủ chỗ, không có thanh cuộn ngang */
    #orderTabs {
        flex-wrap: wrap;
        gap: 0.02rem !important;
        overflow-x: unset;
    }

    /* Giảm kích thước chữ và padding của bảng để các tr cùng nằm trên 1 hàng */
    .table th,
    .table td {
        font-size: 0.8rem;
        padding-top: 0.1rem;
        padding-bottom: 0.1rem;
        vertical-align: middle;
        white-space: nowrap;
    }

    /* Badge và button nhỏ lại trong bảng */
    .table .badge,
    .table .btn {
        font-size: 0.75rem;
        padding: 0.2em 0.7em;
        line-height: 1.1;
        text-transform: none !important;
    }

    /* Đảm bảo các badge không bị xuống dòng */
    .table .badge {
        white-space: nowrap;
    }

    /* Nếu cần, giảm margin/padding của ul.nav */
    .nav-pills.mb-3 {
        margin-bottom: 0.2rem !important;
    }

    .btn, th, a {
        text-transform: none !important;
    }
</style>
<div class="page-wrapper">

    <!-- Header -->
    <header class="main-header" id="header">
        <nav class="navbar navbar-expand-lg navbar-light" id="navbar">
            <!-- Sidebar toggle button -->
            <button id="sidebar-toggler" class="sidebar-toggle">
                <span class="sr-only">Toggle navigation</span>
            </button>

            <span class="page-title">ĐƠN HÀNG</span>

            <div class="navbar-right ">

                <ul class="nav navbar-nav">
@*                     <li class="custom-dropdown">
                        <a asp-area="Seller" asp-controller="Notification" asp-action="Notification" class="notify-toggler custom-dropdown-toggler">
                            <i class="mdi mdi-bell-outline icon"></i>
                        </a>
                    </li> *@
                    <!-- User Account -->
                    <li class="dropdown user-menu">
                        <button class="dropdown-toggle nav-link" data-bs-toggle="dropdown">
                            <img src="~/images/avt-user.jpg" alt="User Profile" width="32" height="32" style="object-fit:cover" loading="lazy">
                            <span class="d-none d-lg-inline-block">@ViewBag.StoreName</span>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end">
                            <li>
                                <a class="dropdown-item d-flex align-items-center" asp-controller="Profile" asp-action="Index" asp-area="">
                                    <i class="mdi mdi-account-outline"></i><span>Hồ sơ</span>
                                </a>
                            </li>
                            <li class="dropdown-footer">
                                <a class="dropdown-item d-flex align-items-center" href="/Seller/Order/Logout">
                                    <i class="mdi mdi-logout"></i><span>Đăng xuất</span>
                                </a>
                            </li>
                        </ul>
                    </li>
                </ul>
            </div>
        </nav>


    </header>

    <!-- ====================================
    ——— CONTENT WRAPPER
    ===================================== -->
    <div class="content-wrapper">
        <main class="py-5">
            <div class="container-fluid">

                <div class="modal fade" id="orderDetailsModal" tabindex="-1" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered modal-lg">
                        <div class="modal-content border-0 rounded-4 shadow-lg">

                            <!-- Header -->
                            <div class="modal-header bg-danger text-white border-bottom-0 rounded-top-4 py-3">
                                <h5 class="modal-title fw-bold" id="orderDetailsModalLabel">Chi tiết đơn hàng</h5>
                                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Đóng"></button>
                            </div>

                            <!-- Body -->
                            <div class="modal-body p-4">
                                <div class="row g-4">
                                    <!-- Cột trái: thông tin KH -->
                                    <div class="col-md-6">
                                        <div class="p-3 rounded-3 border bg-light">
                                            <div class="d-flex align-items-center mb-2">
                                                <span class="badge bg-danger me-2 text-light">Mã đơn</span>
                                                <span id="modalOrderId" class="fw-bold text-danger"></span>
                                            </div>
                                            <div class="mb-2">
                                                <small class="text-muted d-block">Khách hàng</small>
                                                <span id="modalCustomerName" class="fw-semibold"></span>
                                            </div>
                                            <div class="mb-2">
                                                <small class="text-muted d-block">SĐT</small>
                                                <span id="modalCustomerPhone" class="fw-semibold"></span>
                                            </div>
                                            <div class="mb-0">
                                                <small class="text-muted d-block">Ngày đặt</small>
                                                <span id="modalOrderDate" class="fw-semibold"></span>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Cột phải: tổng quan đơn -->
                                    <div class="col-md-6">
                                        <div class="p-3 rounded-3 border">
                                            <div class="d-flex justify-content-between align-items-center mb-2">
                                                <span class="text-muted">Số lượng</span>
                                                <span id="modalQuantity" class="fw-bold"></span>
                                            </div>
                                            <div class="d-flex justify-content-between align-items-center mb-2">
                                                <span class="text-muted">Tổng tiền</span>
                                                <span id="modalTotalAmount" class="fw-bold text-danger"></span>
                                            </div>
                                            <div class="d-flex justify-content-between align-items-center mb-2">
                                                <span class="text-muted">Phí hoa hồng sàn (5%)</span>
                                                <span id="modalCommission" class="fw-bold text-danger"></span>
                                            </div>
                                            <div class="d-flex justify-content-between align-items-center">
                                                <span class="text-muted">Trạng thái</span>
                                                <span id="modalStatus" class="badge bg-danger text-white rounded-pill px-3 py-2">—</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Bảng sản phẩm -->
                                <div class="mt-4 border rounded-3 p-2 bg-white">
                                    <div class="d-flex justify-content-between align-items-center px-2 py-2">
                                        <h6 class="mb-0 fw-bold">Sản phẩm</h6>
                                    </div>
                                    <div class="table-responsive">
                                        <table class="table table-hover mb-0">
                                            <thead class="bg-light">
                                                <tr>
                                                    <th scope="col">Sản phẩm</th>
                                                    <th scope="col" class="text-center">Số lượng</th>
                                                    <th scope="col" class="text-end">Đơn giá</th>
                                                </tr>
                                            </thead>
                                            <tbody id="modalOrderItems">
                                                <!-- JS render -->
                                            </tbody>
                                        </table>
                                    </div>
                                </div>

                                <!-- Label GHTK -->
                                <div id="modalLabelRow" class="mt-4 p-3 border rounded-3 bg-light d-flex align-items-center flex-wrap gap-2">
                                    <div class="me-auto">
                                        <strong>Mã đơn hàng:</strong>
                                        <code id="modalLabelId" class="ms-1"></code>
                                    </div>
                                    <button type="button" class="btn btn-sm btn-outline-secondary rounded-pill" style="margin-right: 5px" id="btnCopyLabel">Copy</button>
                                    <a class="btn btn-sm btn-outline-primary rounded-pill"
                                       href="https://khachhang-staging.ghtklab.com/web/don-hang"
                                       target="_blank" rel="noopener">
                                        Tra cứu GHTK
                                    </a>
                                </div>
                            </div>

                            <!-- Footer -->
                            <div class="modal-footer border-top-0 pt-0 pb-4 px-4">
                                <button type="button" class="btn btn-outline-dark rounded-pill fw-semibold px-4" data-bs-dismiss="modal">Đóng</button>
                                <div class="d-flex gap-2">
                                    <button type="button" class="btn btn-danger rounded-pill fw-semibold px-4 " style="margin-right: 5px" id="btnCancelOrder">Hủy đơn</button>
                                    <button type="button" class="btn btn-success rounded-pill fw-semibold px-4" id="btnUpdateStatus">Cập nhật trạng thái</button>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>

                <div class="row g-4">
                    <div class="col-lg-8">
                        <div class="card shadow-lg rounded-4">
                            <div class="card-header bg-white p-4 border-bottom-0">
                                <h4 class="mb-0 fw-bold">Quản lý đơn hàng</h4>
                            </div>
                            <div class="card-body pt-0">
                                <ul class="nav nav-pills mb-3 px-2" id="orderTabs" role="tablist" style="gap: 0.5rem;">
                                    <li class="nav-item flex-fill text-center" role="presentation">
                                        <a class="nav-link active fw-bold py-2 px-2 text-black" id="allOrdersTab" data-bs-toggle="pill" href="#allOrders" role="tab" aria-controls="allOrders" aria-selected="true">
                                            <i class="mdi mdi-format-list-bulleted"></i> Tất cả
                                        </a>
                                    </li>
                                    <li class="nav-item flex-fill text-center" role="presentation">
                                        <a class="nav-link fw-bold text-black py-2 px-2" id="pendingTab" data-bs-toggle="pill" href="#pendingOrders" role="tab" aria-controls="pendingOrders" aria-selected="false">
                                            <i class="mdi mdi-clock-outline"></i> Chờ xử lý
                                        </a>
                                    </li>
                                    <li class="nav-item flex-fill text-center" role="presentation">
                                        <a class="nav-link fw-bold text-black py-2 px-2" id="readyTab" data-bs-toggle="pill" href="#readyOrders" role="tab" aria-controls="readyOrders" aria-selected="false">
                                            <i class="mdi mdi-package-variant"></i> Chờ lấy hàng
                                        </a>
                                    </li>
                                    <li class="nav-item flex-fill text-center" role="presentation">
                                        <a class="nav-link fw-bold text-black py-2 px-2" id="shippingTab" data-bs-toggle="pill" href="#shippingOrders" role="tab" aria-controls="shippingOrders" aria-selected="false">
                                            <i class="mdi mdi-truck-delivery"></i> Đang giao
                                        </a>
                                    </li>
                                    <li class="nav-item flex-fill text-center" role="presentation">
                                        <a class="nav-link fw-bold text-black py-2 px-2" id="completedTab" data-bs-toggle="pill" href="#completedOrders" role="tab" aria-controls="completedOrders" aria-selected="false">
                                            <i class="mdi mdi-check-circle-outline"></i> Đã hoàn thành
                                        </a>
                                    </li>
                                    <li class="nav-item flex-fill text-center" role="presentation">
                                        <a class="nav-link fw-bold text-black py-2 px-2" id="cancelledTab" data-bs-toggle="pill" href="#cancelledOrders" role="tab" aria-controls="cancelledOrders" aria-selected="false">
                                            <i class="mdi mdi-close-circle-outline"></i> Đã hủy
                                        </a>
                                    </li>
                                </ul>

                                <div class="orders-scroll tab-content pt-3" id="orderTabsContent">
                                    <!-- TẤT CẢ -->
                                    <div class="tab-pane fade show active" id="allOrders" role="tabpanel" aria-labelledby="allOrdersTab">
                                        <div class="table-responsive">
                                            <table class="table table-hover align-middle mb-0">
                                                <thead class="bg-danger text-dark">
                                                    <tr>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Mã đơn</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Khách hàng</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Số lượng</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Tổng tiền</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Ngày đặt</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Trạng thái</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model?.Any() == true)
                                                    {
                                                        foreach (var order in Model)
                                                        {
                                                            <tr data-bs-toggle="modal" data-bs-target="#orderDetailsModal" data-order-id="@order.Id">
                                                                <td>#@order.Id</td>
                                                                <td>@order.CustomerName</td>
                                                                <td>@order.TotalQuantity món</td>
                                                                <td class="fw-semibold">@FormatCurrency(order.GrandTotal)</td>
                                                                <td>@order.CreatedAt.ToString("dd/MM/yyyy")</td>
                                                                <td>
                                                                    <span class="badge @MapStatusToBadgeClass(order.Status) px-3 py-2 rounded-pill">
                                                                        @MapStatusToText(order.Status)
                                                                    </span>
                                                                </td>
                                                            </tr>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <tr><td colspan="6" class="text-center">Không có đơn hàng</td></tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                    <!-- CHỜ XỬ LÝ -->
                                    <div class="tab-pane fade" id="pendingOrders" role="tabpanel" aria-labelledby="pendingTab">
                                        <div class="table-responsive">
                                            <table class="table table-hover align-middle mb-0">
                                                <thead class="bg-danger text-dark">
                                                    <tr>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Mã đơn</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Khách hàng</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Số lượng</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Tổng tiền</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Ngày đặt</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Trạng thái</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model != null && Model.Any(o => o.Status == OrderStatus.ChoXuLy.ToString()))
                                                    {
                                                        foreach (var order in Model.Where(o => o.Status == OrderStatus.ChoXuLy.ToString()))
                                                        {
                                                            <tr data-order-id="@order.Id">

                                                                <td>#@order.Id</td>
                                                                <td>@order.CustomerName</td>
                                                                <td>@order.TotalQuantity món</td>
                                                                <td class="fw-semibold">@FormatCurrency(order.TotalPrice)</td>
                                                                <td>@order.CreatedAt.ToString("dd/MM/yyyy")</td>
                                                                <td>
                                                                    <button class="btn btn-sm btn-success rounded-pill me-2 js-accept-order" type="button">
                                                                        Xác nhận
                                                                    </button>
                                                                    <button class="btn btn-sm btn-danger rounded-pill js-reject-order" type="button" data-bs-toggle="modal" data-bs-target="#rejectOrderModal">
                                                                        Từ chối
                                                                    </button>

                                                                </td>
                                                            </tr>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <tr><td colspan="6" class="text-center">Không có đơn hàng</td></tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                    <!-- CHỜ LẤY HÀNG -->
                                    <div class="tab-pane fade" id="readyOrders" role="tabpanel" aria-labelledby="readyTab">
                                        <div class="table-responsive">
                                            <table class="table table-hover align-middle mb-0">
                                                <thead class="bg-danger text-dark">
                                                    <tr>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Mã đơn</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Khách hàng</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Số lượng</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Tổng tiền</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Ngày đặt</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Trạng thái</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model != null && Model.Any(o => o.Status == OrderStatus.ChoLayHang.ToString()))
                                                    {
                                                        foreach (var order in Model.Where(o => o.Status == OrderStatus.ChoLayHang.ToString()))
                                                        {
                                                            <tr data-bs-toggle="modal" data-bs-target="#orderDetailsModal" data-order-id="@order.Id">
                                                                <td>#@order.Id</td>
                                                                <td>@order.CustomerName</td>
                                                                <td>@order.TotalQuantity món</td>
                                                                <td class="fw-semibold">@FormatCurrency(order.TotalPrice)</td>
                                                                <td>@order.CreatedAt.ToString("dd/MM/yyyy")</td>
                                                                <td>
                                                                    <span class="badge @MapStatusToBadgeClass(order.Status) px-3 py-2 rounded-pill">@MapStatusToText(order.Status)</span>
                                                                </td>
                                                            </tr>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <tr><td colspan="6" class="text-center">Không có đơn hàng</td></tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                    <!-- ĐANG GIAO -->
                                    <div class="tab-pane fade" id="shippingOrders" role="tabpanel" aria-labelledby="shippingTab">
                                        <div class="table-responsive">
                                            <table class="table table-hover align-middle mb-0">
                                                <thead class="bg-danger text-dark">
                                                    <tr>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Mã đơn</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Khách hàng</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Số lượng</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Tổng tiền</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Ngày đặt</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Trạng thái</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model != null && Model.Any(o => o.Status == OrderStatus.DangGiao.ToString()))
                                                    {
                                                        foreach (var order in Model.Where(o => o.Status == OrderStatus.DangGiao.ToString()))
                                                        {
                                                            <tr data-bs-toggle="modal" data-bs-target="#orderDetailsModal" data-order-id="@order.Id">
                                                                <td>#@order.Id</td>
                                                                <td>@order.CustomerName</td>
                                                                <td>@order.TotalQuantity món</td>
                                                                <td class="fw-semibold">@FormatCurrency(order.TotalPrice)</td>
                                                                <td>@order.CreatedAt.ToString("dd/MM/yyyy")</td>
                                                                <td>
                                                                    <span class="badge @MapStatusToBadgeClass(order.Status) px-3 py-2 rounded-pill">@MapStatusToText(order.Status)</span>
                                                                </td>
                                                            </tr>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <tr><td colspan="6" class="text-center">Không có đơn hàng</td></tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                    <!-- ĐÃ HOÀN THÀNH -->
                                    <div class="tab-pane fade" id="completedOrders" role="tabpanel" aria-labelledby="completedTab">
                                        <div class="table-responsive">
                                            <table class="table table-hover align-middle mb-0">
                                                <thead class="bg-danger text-dark">
                                                    <tr>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Mã đơn</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Khách hàng</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Số lượng</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Tổng tiền</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Ngày đặt</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Trạng thái</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model != null && Model.Any(o => o.Status == OrderStatus.DaHoanThanh.ToString()))
                                                    {
                                                        foreach (var order in Model.Where(o => o.Status == OrderStatus.DaHoanThanh.ToString()))
                                                        {
                                                            <tr data-bs-toggle="modal" data-bs-target="#orderDetailsModal" data-order-id="@order.Id">
                                                                <td>#@order.Id</td>
                                                                <td>@order.CustomerName</td>
                                                                <td>@order.TotalQuantity món</td>
                                                                <td class="fw-semibold">@FormatCurrency(order.TotalPrice)</td>
                                                                <td>@order.CreatedAt.ToString("dd/MM/yyyy")</td>
                                                                <td>
                                                                    <span class="badge @MapStatusToBadgeClass(order.Status) px-3 py-2 rounded-pill">@MapStatusToText(order.Status)</span>
                                                                </td>
                                                            </tr>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <tr><td colspan="6" class="text-center">Không có đơn hàng</td></tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                    <!-- ĐÃ HỦY -->
                                    <div class="tab-pane fade" id="cancelledOrders" role="tabpanel" aria-labelledby="cancelledTab">
                                        <div class="table-responsive">
                                            <table class="table table-hover align-middle mb-0">
                                                <thead class="bg-danger text-dark">
                                                    <tr>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Mã đơn</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Khách hàng</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Số lượng</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Tổng tiền</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Ngày đặt</th>
                                                        <th scope="col" class="fw-bold bg-danger text-white">Trạng thái</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model != null && Model.Any(o => o.Status == OrderStatus.DaHuy.ToString()))
                                                    {
                                                        foreach (var order in Model.Where(o => o.Status == OrderStatus.DaHuy.ToString()))
                                                        {
                                                            <tr data-bs-toggle="modal" data-bs-target="#orderDetailsModal" data-order-id="@order.Id">
                                                                <td>#@order.Id</td>
                                                                <td>@order.CustomerName</td>
                                                                <td>@order.TotalQuantity món</td>
                                                                <td class="fw-semibold">@FormatCurrency(order.TotalPrice)</td>
                                                                <td>@order.CreatedAt.ToString("dd/MM/yyyy")</td>
                                                                <td>
                                                                    <span class="badge @MapStatusToBadgeClass(order.Status) px-3 py-2 rounded-pill">
                                                                        @MapStatusToText(order.Status)
                                                                    </span>
                                                                </td>
                                                            </tr>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <tr><td colspan="6" class="text-center">Không có đơn hàng</td></tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="col-lg-4 analytics-sticky">
                        <div class="card shadow-lg rounded-4">
                            <!-- bỏ h-100 để sticky fit-content -->
                            <div class="card-header bg-white p-4 border-bottom-0">
                                <h4 class="mb-0 fw-bold">Phân tích doanh số</h4>
                            </div>
                            <div class="card-body d-flex flex-column p-4">
                                <div class="mb-5">
                                    <label class="form-label small fw-semibold text-muted">Thời gian</label>
                                    <div class="row g-2">
                                        <div class="col-6">
                                            <div class="input-group input-group-sm rounded-pill overflow-hidden shadow-sm d-flex align-items-center">
                                                <span class="input-group-text bg-danger text-white border-0 px-3 d-flex align-items-center">Từ</span>
                                                <input type="datetime-local"
                                                       class="form-control border-0 form-control-sm py-0"
                                                       style="height: 31px;" id="startDate" />
                                            </div>
                                        </div>
                                        <div class="col-6">
                                            <div class="input-group input-group-sm rounded-pill overflow-hidden shadow-sm d-flex align-items-center">
                                                <span class="input-group-text bg-danger text-white border-0 px-3 d-flex align-items-center">Đến</span>
                                                <input type="datetime-local"
                                                       class="form-control border-0 form-control-sm py-0"
                                                       style="height: 31px;" id="endDate" />
                                            </div>
                                        </div>
                                        <div class="col-12 mt-3">
                                            <div class="dropdown">
                                                <button class="btn btn-outline-danger rounded-pill dropdown-toggle w-100 text-start"
                                                        type="button" id="quickDateSelectButton"
                                                        data-bs-toggle="dropdown" aria-expanded="false" style="text-transform: capitalize;">
                                                    Chọn nhanh
                                                </button>
                                                <ul class="dropdown-menu w-100"
                                                    aria-labelledby="quickDateSelectButton">
                                                    <li>
                                                        <a class="dropdown-item" href="#" data-value="today">
                                                            Hôm
                                                            nay
                                                        </a>
                                                    </li>
                                                    <li>
                                                        <a class="dropdown-item" href="#"
                                                           data-value="yesterday">Hôm qua</a>
                                                    </li>
                                                    <li>
                                                        <a class="dropdown-item" href="#"
                                                           data-value="thisWeek">Tuần này</a>
                                                    </li>
                                                    <li>
                                                        <a class="dropdown-item" href="#"
                                                           data-value="lastWeek">Tuần trước</a>
                                                    </li>
                                                    <li>
                                                        <a class="dropdown-item" href="#"
                                                           data-value="thisMonth">Tháng này</a>
                                                    </li>
                                                    <li>
                                                        <a class="dropdown-item" href="#"
                                                           data-value="lastMonth">Tháng trước</a>
                                                    </li>
                                                </ul>
                                            </div>
                                        </div>

                                    </div>
                                </div>

                                <div class="row g-4 flex-grow-1" style="row-gap: 1rem;">
                                    <div class="col-md-6">
                                        <div class="card bg-danger text-white h-100 rounded-3 shadow-sm">
                                            <div class="d-flex flex-column justify-content-between align-items-center h-100 p-4">
                                                <div class="bg-white rounded-circle mb-3 d-flex justify-content-center align-items-center"
                                                     style="width: 56px; height: 56px;">
                                                    <i class="bi bi-cart-check text-danger fs-3"></i>
                                                </div>
                                                <div class="text-center">
                                                    <h3 class="display-6 fw-bold mb-1" id="totalOrders">0</h3>
                                                    <p class="mb-2 fw-light">Tổng đơn hàng</p>
                                                    <div class="progress bg-white"
                                                         style="height: 8px; border-radius: 5px;">
                                                        <div class="progress-bar bg-white" role="progressbar"
                                                             style="width: 60%;" aria-valuenow="60"
                                                             aria-valuemin="0" aria-valuemax="100"></div>
                                                    </div>
                                                    <small id="totalOrdersChange" class="mt-2 d-block fw-light">0% so với kỳ trước</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="card bg-warning text-white h-100 rounded-3 shadow-sm">
                                            <div class="d-flex flex-column justify-content-between align-items-center h-100 p-4">
                                                <div class="bg-white rounded-circle mb-3 d-flex justify-content-center align-items-center"
                                                     style="width: 56px; height: 56px;">
                                                    <i class="bi bi-hourglass-split text-warning fs-3"></i>
                                                </div>
                                                <div class="text-center">
                                                    <h3 class="display-6 fw-bold mb-1" id="pendingOrders">0</h3>
                                                    <p class="mb-2 fw-light">Chờ xử lý hàng</p>
                                                    <div class="progress bg-white"
                                                         style="height: 8px; border-radius: 5px;">
                                                        <div class="progress-bar bg-white" role="progressbar"
                                                             style="width: 45%;" aria-valuenow="45"
                                                             aria-valuemin="0" aria-valuemax="100"></div>
                                                    </div>
                                                    <small id="pendingOrdersChange" class="mt-2 d-block fw-light">0% so với kỳ trước</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="card bg-success text-white h-100 rounded-3 shadow-sm">
                                            <div class="d-flex flex-column justify-content-between align-items-center h-100 p-4">
                                                <div class="bg-white rounded-circle mb-3 d-flex justify-content-center align-items-center"
                                                     style="width: 56px; height: 56px;">
                                                    <i class="bi bi-truck text-success fs-3"></i>
                                                </div>
                                                <div class="text-center">
                                                    <h3 class="display-6 fw-bold mb-1" id="shippingOrders">0</h3>
                                                    <p class="mb-2 fw-light">Đang giao hàng</p>
                                                    <div class="progress bg-white"
                                                         style="height: 8px; border-radius: 5px;">
                                                        <div class="progress-bar bg-white" role="progressbar"
                                                             style="width: 75%;" aria-valuenow="75"
                                                             aria-valuemin="0" aria-valuemax="100"></div>
                                                    </div>
                                                    <small id="shippingOrdersChange" class="mt-2 d-block fw-light">0% so với kỳ trước</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="card bg-primary text-white h-100 rounded-3 shadow-sm">
                                            <div class="d-flex flex-column justify-content-between align-items-center h-100 p-4">
                                                <div class="bg-white rounded-circle mb-3 d-flex justify-content-center align-items-center"
                                                     style="width: 56px; height: 56px;">
                                                    <i class="bi bi-check-circle text-primary fs-3"></i>
                                                </div>
                                                <div class="text-center">
                                                    <h3 class="display-6 fw-bold mb-1" id="completedOrders">0</h3>
                                                    <p class="mb-2 fw-light">Đã hoàn thành</p>
                                                    <div class="progress bg-white"
                                                         style="height: 8px; border-radius: 5px;">
                                                        <div class="progress-bar bg-white" role="progressbar"
                                                             style="width: 85%;" aria-valuenow="85"
                                                             aria-valuemin="0" aria-valuemax="100"></div>
                                                    </div>
                                                    <small id="completedOrdersChange" class="mt-2 d-block fw-light">0% so với kỳ trước</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </main>
    </div>
</div>
<!-- Modal Xác nhận hủy đơn (ở CHI TIẾT) -->
<div class="modal fade" id="cancelOrderConfirmModal" tabindex="-1" aria-labelledby="cancelOrderConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger">
                <h5 class="modal-title text-white" id="cancelOrderConfirmModalLabel">Xác nhận hủy đơn</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn hủy đơn hàng này không?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light btn-pill" data-bs-dismiss="modal">Đóng</button>
                <button type="button" id="btnConfirmCancelInDetails" class="btn btn-danger btn-pill">Xác nhận hủy</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Xác nhận đơn hàng -->
<div class="modal fade" id="confirmOrderModal" tabindex="-1" role="dialog" aria-labelledby="confirmOrderModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-success">
                <h5 class="modal-title text-white" id="confirmOrderModalLabel">Xác nhận đơn hàng</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn xác nhận đơn hàng này không?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light btn-pill" data-bs-dismiss="modal">Đóng</button>
                <button type="button" id="btnConfirmAccept" class="btn btn-success btn-pill">Xác nhận</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Từ chối đơn hàng -->
<div class="modal fade" id="rejectOrderModal" tabindex="-1" role="dialog" aria-labelledby="rejectOrderModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger">
                <h5 class="modal-title text-white" id="rejectOrderModalLabel">Từ chối đơn hàng</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn từ chối đơn hàng này không?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light btn-pill" data-bs-dismiss="modal">Đóng</button>
                <button type="button" id="btnConfirmReject" class="btn btn-danger btn-pill">Xác nhận từ chối</button>
            </div>
        </div>
    </div>
</div>
<script>
    const API_BASE_URL = 'https://localhost:7096/api'; // Khai báo duy nhất 1 lần
    let productTotal = 0;

    document.addEventListener('DOMContentLoaded', function () {
        // --- Xử lý style tab ---
        const originalColors = {};
        document.querySelectorAll('#orderTabs .nav-link').forEach(tab => {
            originalColors[tab.id] = Array.from(tab.classList).find(cls => cls.startsWith('text-'));
        });
        document.querySelectorAll('#orderTabs .nav-link').forEach(tab => {
            tab.addEventListener('shown.bs.tab', function () {
                document.querySelectorAll('#orderTabs .nav-link').forEach(t => {
                    t.classList.remove('bg-danger', 'text-white');
                    if (originalColors[t.id]) t.classList.add(originalColors[t.id]);
                });
                this.classList.remove(originalColors[this.id]);
                this.classList.add('bg-danger', 'bg-opacity-25', 'text-white');
            });
        });
        const activeTab = document.querySelector('#orderTabs .nav-link.active');
        if (activeTab) {
            activeTab.classList.remove(originalColors[activeTab.id]);
            activeTab.classList.add('bg-danger', 'bg-opacity-25', 'text-white');
        }

        // --- Modal chi tiết đơn hàng ---
        const orderDetailsModal = new bootstrap.Modal(document.getElementById('orderDetailsModal'));

        function formatCurrency(value) {
            if (typeof value !== 'number') return value;
            return value.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
        }
        function mapStatus(status) {
            const map = {
                'ChoXuLy': ['Chờ xử lý', 'bg-warning text-dark'],
                'ChoLayHang': ['Chờ lấy hàng', 'bg-info text-white'],
                'DangGiao': ['Đang giao', 'bg-success text-white'],
                'DaHoanThanh': ['Hoàn thành', 'bg-primary text-white'],
                'DaHuy': ['Đã hủy', 'bg-danger text-white']
            };
            return map[status] || ['Không xác định', 'bg-secondary text-white'];
        }

        document.querySelectorAll('tr[data-order-id]').forEach(row => {
            row.addEventListener('click', async (event) => {
                if (event.target.closest('td:last-child')) return;
                const orderId = row.getAttribute('data-order-id');
                if (!orderId) return;

                try {
                    const resp = await fetch(`${API_BASE_URL}/orders/${orderId}/detail`);
                    if (!resp.ok) throw new Error('Không lấy được thông tin đơn hàng');
                    const order = await resp.json();

                    document.getElementById('modalOrderId').textContent = `#${order.id}`;
                    document.getElementById('modalCustomerName').textContent = order.customerName || 'N/A';
                    document.getElementById('modalCustomerPhone').textContent = order.customerPhone || '—';

                    const createdAt = new Date(order.createdAt);
                    document.getElementById('modalOrderDate').textContent = createdAt.toLocaleDateString('vi-VN');
                    document.getElementById('modalQuantity').textContent = `${order.totalQuantity} món`;
                    document.getElementById('modalTotalAmount').textContent = formatCurrency(order.grandTotal);

                    // Tính 5% phí sàn từ GrandTotal
                    const commission = Math.max(0, Number(order.grandTotal || 0) * 0.05);
                    document.getElementById('modalCommission').textContent = formatCurrency(commission);

                    // Trạng thái
                    const [statusText, statusClass] = mapStatus(order.status);
                    const modalStatus = document.getElementById('modalStatus');
                    modalStatus.textContent = statusText;
                    modalStatus.className = '';
                    modalStatus.classList.add('badge', ...statusClass.split(' '), 'rounded-pill', 'px-3', 'py-2');

                    // Ẩn/hiện nút Hủy theo trạng thái (Đang giao/Hoàn thành -> ẩn)
                    const cancelBtn = document.getElementById('btnCancelOrder');
                    const hideCancel = order.status === 'DangGiao' || order.status === 'DaHoanThanh';
                    cancelBtn.classList.toggle('d-none', hideCancel);
                    cancelBtn.disabled = hideCancel;
                    cancelBtn.title = hideCancel ? 'Đơn đang giao/đã hoàn thành, không thể hủy' : '';

                    // Label/GHTK
                    const labelRow = document.getElementById('modalLabelRow');
                    const labelIdEl = document.getElementById('modalLabelId');
                    const copyBtn = document.getElementById('btnCopyLabel');
                    if (order.labelId) {
                        labelRow.classList.remove('d-none');
                        labelIdEl.textContent = order.labelId;
                        copyBtn.onclick = async () => {
                            try {
                                await navigator.clipboard.writeText(order.labelId);
                                copyBtn.textContent = 'Đã copy';
                                setTimeout(() => (copyBtn.textContent = 'Copy'), 1500);
                            } catch {
                                alert('Không copy được. Vui lòng copy tay: ' + order.labelId);
                            }
                        };
                    } else {
                        labelRow.classList.add('d-none');
                        labelIdEl.textContent = '';
                        copyBtn.onclick = null;
                    }

                    // Items
                    const tbody = document.getElementById('modalOrderItems');
                    tbody.innerHTML = '';
                    if (order.orderDetails && order.orderDetails.length > 0) {
                        order.orderDetails.forEach(item => {
                            const tr2 = document.createElement('tr');
                            tr2.classList.add('bg-light');
                            tr2.innerHTML = `
                                <td>${item.productName || ''}</td>
                                <td class="text-center">${item.quantity}</td>
                                <td class="text-end">${formatCurrency(item.unitPrice)}</td>
                            `;
                            tbody.appendChild(tr2);
                        });
                    } else {
                        tbody.innerHTML = `<tr><td colspan="3" class="text-center">Không có sản phẩm</td></tr>`;
                    }

                    orderDetailsModal.show();
                } catch (error) {
                    showCustomToast(error.message, false);
                }
            });
        });

        // --- Modal Xác nhận đơn hàng ---
        const confirmOrderModalEl = document.getElementById('confirmOrderModal');
        const confirmOrderModal = new bootstrap.Modal(confirmOrderModalEl);

        // --- Modal Từ chối đơn hàng ---
        const rejectOrderModalEl = document.getElementById('rejectOrderModal');
        const rejectOrderModal = new bootstrap.Modal(rejectOrderModalEl);

        // Hàm cập nhật trạng thái chung
        async function updateOrderStatus(orderId, newStatus) {
            try {
                const response = await fetch(`${API_BASE_URL}/orders/updatestatus/${orderId}?status=${newStatus}`, {
                    method: 'PATCH'
                });
                if (!response.ok) {
                    const text = await response.text();
                    throw new Error(text || 'Cập nhật trạng thái thất bại');
                }
                showCustomToast('Cập nhật trạng thái thành công!', true);
                location.reload();
            } catch (error) {
                showCustomToast('Lỗi: ' + error.message, false);
            }
        }

        // Gán sự kiện mở modal xác nhận khi bấm nút xác nhận (btn-success) trên bảng
        document.querySelectorAll('.btn-success').forEach(button => {
            button.addEventListener('click', function (e) {
                e.stopPropagation();
                const tr = this.closest('tr');
                if (!tr) return;
                const orderId = tr.getAttribute('data-order-id');
                if (!orderId) return;
                confirmOrderModalEl.dataset.orderId = orderId;
                confirmOrderModal.show();
            });
        });

        // Xử lý nút xác nhận trong modal xác nhận đơn hàng
        document.getElementById('btnConfirmAccept').addEventListener('click', function () {
            const orderId = confirmOrderModalEl.dataset.orderId;
            if (!orderId) {
                showCustomToast('Không xác định được đơn hàng', false);
                return;
            }
            updateOrderStatus(orderId, 'ChoLayHang');
            confirmOrderModal.hide();
        });

        // Bind cho nút "Xác nhận" trong bảng Chờ xử lý
        document.querySelectorAll('.js-accept-order').forEach(button => {
            button.addEventListener('click', function (e) {
                e.stopPropagation();
                const tr = this.closest('tr');
                if (!tr) return;
                const orderId = tr.getAttribute('data-order-id');
                if (!orderId) return;
                confirmOrderModalEl.dataset.orderId = orderId;
                confirmOrderModal.show();
            });
        });

        // Bind cho nút "Từ chối" trong bảng Chờ xử lý
        document.querySelectorAll('.js-reject-order').forEach(button => {
            button.addEventListener('click', function (e) {
                e.stopPropagation();
                const tr = this.closest('tr');
                if (!tr) return;
                const orderId = tr.getAttribute('data-order-id');
                if (!orderId) return;
                rejectOrderModalEl.dataset.orderId = orderId;
                rejectOrderModal.show();
            });
        });

        document.getElementById('btnConfirmReject').addEventListener('click', function () {
            const orderId = rejectOrderModalEl.dataset.orderId;
            if (!orderId) {
                showCustomToast('Không xác định được đơn hàng', false);
                return;
            }
            updateOrderStatus(orderId, 'DaHuy');
            rejectOrderModal.hide();
        });

        // --- Nút cập nhật trạng thái trong Modal chi tiết ---
        document.getElementById("btnUpdateStatus").addEventListener("click", async function () {
            const orderIdText = document.getElementById("modalOrderId").textContent;
            const orderId = orderIdText.replace("#", "").trim();
            if (!orderId) {
                showCustomToast("Không tìm thấy mã đơn", false);
                return;
            }
            try {
                const resp = await fetch(`${API_BASE_URL}/orders/${orderId}/nextstatus`, {
                    method: "PATCH"
                });
                if (!resp.ok) {
                    const err = await resp.json();
                    throw new Error(err.message || "Cập nhật trạng thái thất bại");
                }
                const data = await resp.json();
                showCustomToast(data.message || "Cập nhật thành công!", true);

                // Cập nhật badge trạng thái trong modal
                const [statusText, statusClass] = mapStatus(data.status);
                const modalStatus = document.getElementById("modalStatus");
                modalStatus.textContent = statusText;
                modalStatus.className = "";
                modalStatus.classList.add("badge", ...statusClass.split(" "), "rounded-pill", "px-3", "py-2");

                // Ẩn/hiện nút Hủy theo trạng thái mới
                const cancelBtn = document.getElementById('btnCancelOrder');
                const hideCancel = data.status === 'DangGiao' || data.status === 'DaHoanThanh';
                cancelBtn.classList.toggle('d-none', hideCancel);
                cancelBtn.disabled = hideCancel;
                cancelBtn.title = hideCancel ? 'Đơn đang giao/đã hoàn thành, không thể hủy' : '';

                // Cập nhật badge ở ngoài bảng (nếu có)
                const row = document.querySelector(`tr[data-order-id="${orderId}"]`);
                if (row) {
                    const statusCell = row.querySelector(".order-status");
                    if (statusCell) {
                        statusCell.textContent = statusText;
                        statusCell.className = "";
                        statusCell.classList.add("badge", ...statusClass.split(" "), "rounded-pill", "px-3", "py-2");
                    }
                }
            } catch (error) {
                showCustomToast("❌ Lỗi: " + error.message, false);
            }
        });

        // --- Nút Hủy đơn trong Modal chi tiết ---
        const cancelOrderConfirmModalEl = document.getElementById('cancelOrderConfirmModal');
        const cancelOrderConfirmModal = new bootstrap.Modal(cancelOrderConfirmModalEl);

        document.getElementById("btnCancelOrder").addEventListener("click", function () {
            // Chặn mở modal nếu trạng thái hiện tại là Đang giao / Hoàn thành
            const statusText = (document.getElementById('modalStatus').textContent || '').trim();
            if (statusText.includes('Đang giao') || statusText.includes('Hoàn thành')) {
                return;
            }
            cancelOrderConfirmModal.show();
        });

        document.getElementById("btnConfirmCancelInDetails").addEventListener("click", async function () {
            const orderIdText = document.getElementById("modalOrderId").textContent;
            const orderId = orderIdText.replace("#", "").trim();
            if (!orderId) {
                showCustomToast("Không tìm thấy mã đơn", false);
                return;
            }

            const btn = this;
            const oldHtml = btn.innerHTML;
            btn.disabled = true;
            btn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Đang hủy...';

            try {
                const resp = await fetch(`${API_BASE_URL}/orders/${orderId}/cancel/seller/${userId}`, {
                    method: "POST"
                });

                if (!resp.ok) {
                    let message = "Hủy đơn thất bại";
                    const ct = resp.headers.get('content-type') || '';
                    if (ct.includes('application/json')) {
                        const j = await resp.json().catch(() => ({}));
                        if (j && j.message) message = j.message;
                    } else {
                        const t = await resp.text().catch(() => '');
                        if (t) message = t;
                    }
                    throw new Error(message);
                }

                let data = { message: "Đã hủy đơn hàng!", status: "DaHuy" };
                const ct = resp.headers.get('content-type') || '';
                if (ct.includes('application/json')) {
                    const j = await resp.json().catch(() => null);
                    if (j) data = { ...data, ...j };
                }
                location.reload();
                showCustomToast(data.message || "Đã hủy đơn hàng!", true);

                const [statusText, statusClass] = mapStatus("DaHuy");
                const modalStatus = document.getElementById("modalStatus");
                modalStatus.textContent = statusText;
                modalStatus.className = "";
                modalStatus.classList.add("badge", ...statusClass.split(" "), "rounded-pill", "px-3", "py-2");

                const row = document.querySelector(`tr[data-order-id="${orderId}"]`);
                if (row) {
                    const statusBadge =
                        row.querySelector(".order-status") ||
                        row.querySelector("td:last-child .badge") ||
                        row.querySelector(".badge");

                    if (statusBadge) {
                        statusBadge.textContent = statusText;
                        statusBadge.className = "";
                        statusBadge.classList.add("badge", ...statusClass.split(" "), "rounded-pill", "px-3", "py-2");
                    }
                }
                location.reload();
            } catch (error) {
                showCustomToast("❌ Lỗi: " + error.message, false);
                location.reload();
            } finally {
                btn.disabled = false;
                btn.innerHTML = oldHtml;
            }
        });

        // --- PHẦN QUẢN LÝ THỐNG KÊ ---
        const userId = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(userIdStr));
        const startDateInput = document.getElementById('startDate');
        const endDateInput = document.getElementById('endDate');
        const quickDateSelectButton = document.getElementById('quickDateSelectButton');
        const dropdownItems = document.querySelectorAll('#quickDateSelectButton + .dropdown-menu .dropdown-item');

        function formatNumber(num) {
            return num.toLocaleString('vi-VN');
        }
        function formatPercentChange(value) {
            const sign = value > 0 ? '+' : value < 0 ? '-' : '';
            return `${sign}${Math.abs(value).toFixed(1)}%`;
        }
        async function fetchStatistics(start, end) {
            try {
                let url = `${API_BASE_URL}/orders/statistics-by-user/${userId}`;
                const params = [];
                if (start) params.push(`start=${encodeURIComponent(start.toISOString())}`);
                if (end) params.push(`end=${encodeURIComponent(end.toISOString())}`);
                if (params.length > 0) url += "?" + params.join("&");
                const response = await fetch(url);
                if (!response.ok) throw new Error(await response.text() || 'Lỗi lấy dữ liệu thống kê');
                const json = await response.json();
                return json;
            } catch (error) {
                showCustomToast('Không tải được số liệu: ' + error.message, false);
                return null;
            }
        }
        function updateStatisticsUI(data) {
            if (!data) return;
            const cardMap = {
                totalOrders: '.card.bg-danger',
                pendingOrders: '.card.bg-warning',
                shippingOrders: '.card.bg-success',
                completedOrders: '.card.bg-primary'
            };
            for (const key in cardMap) {
                if (typeof data[key] !== 'undefined') {
                    const card = document.querySelector(cardMap[key]);
                    if (!card) continue;
                    const h3 = card.querySelector('h3.display-6');
                    if (h3) h3.textContent = formatNumber(data[key] || 0);
                    const small = card.querySelector('small');
                    const percentKey = key + 'PercentChange';
                    if (small) {
                        if (typeof data[percentKey] !== 'undefined') {
                            let color = 'text-muted';
                            if (data[percentKey] > 0) color = 'text-success';
                            else if (data[percentKey] < 0) color = 'text-danger';
                            small.innerHTML = `<span class="${color}">${formatPercentChange(data[percentKey])}</span> so với kỳ trước`;
                        } else {
                            small.textContent = '';
                        }
                    }
                }
            }
        }
        function handleQuickDateSelect(value) {
            const today = new Date();
            today.setHours(0, 0, 0, 0);
            let start, end;
            switch (value) {
                case 'today':
                    start = today; end = new Date(today.getTime() + 24 * 60 * 60 * 1000); break;
                case 'yesterday':
                    start = new Date(today.getTime() - 24 * 60 * 60 * 1000); end = today; break;
                case 'thisWeek':
                    start = new Date(today); start.setDate(today.getDate() - today.getDay());
                    end = new Date(today.getTime() + 24 * 60 * 60 * 1000); break;
                case 'lastWeek':
                    start = new Date(today); start.setDate(today.getDate() - today.getDay() - 7);
                    end = new Date(start); end.setDate(start.getDate() + 7); break;
                case 'thisMonth':
                    start = new Date(today.getFullYear(), today.getMonth(), 1);
                    end = new Date(today.getFullYear(), today.getMonth() + 1, 1); break;
                case 'lastMonth':
                    start = new Date(today.getFullYear(), today.getMonth() - 1, 1);
                    end = new Date(today.getFullYear(), today.getMonth(), 1); break;
                default:
                    start = null; end = null;
            }
            const toInput = d =>
                d.getFullYear() + '-' +
                String(d.getMonth() + 1).padStart(2, '0') + '-' +
                String(d.getDate()).padStart(2, '0') + 'T' +
                String(d.getHours()).padStart(2, '0') + ':' +
                String(d.getMinutes()).padStart(2, '0');
            if (start && end) {
                startDateInput.value = toInput(start);
                endDateInput.value = toInput(end);
            } else {
                startDateInput.value = '';
                endDateInput.value = '';
            }
            const label = document.querySelector(`[data-value="${value}"]`);
            if (label) quickDateSelectButton.textContent = label.textContent.trim();
            loadStatistics();
        }
        async function loadStatistics() {
            const start = startDateInput.value ? new Date(startDateInput.value) : null;
            const end = endDateInput.value ? new Date(endDateInput.value) : null;
            const data = await fetchStatistics(start, end);
            updateStatisticsUI(data);
        }
        startDateInput.addEventListener('change', loadStatistics);
        endDateInput.addEventListener('change', loadStatistics);
        dropdownItems.forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();
                handleQuickDateSelect(this.getAttribute('data-value'));
            });
        });
        loadStatistics();
    });

    function showCustomToast(message, isSuccess = false) {
        const container = document.getElementById('custom-toast-container');
        if (!container) return;

        const toastId = `toast-${Date.now()}`;
        const toastHTML = `
            <div id="${toastId}" class="toast custom-toast shadow-lg" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="3000">
                <div class="toast-header ${isSuccess ? "bg-success" : "bg-danger"} text-white">
                    <img src="${isSuccess ? "/icons/happy.gif" : "/icons/sad.gif"}" class="rounded me-2" alt="${isSuccess ? "Success" : "Error"}" width="24" height="24">
                    <strong class="me-auto">${isSuccess ? "Thành công" : "Lỗi"}</strong>
                    <small>Vừa xong</small>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"
                            style="width: 26.4px; height: 26.4px;"></button>
                </div>
                <div class="toast-body">
                    ${message}
                </div>
            </div>
        `;

        container.insertAdjacentHTML('beforeend', toastHTML);
        const toastEl = document.getElementById(toastId);
        const bsToast = new bootstrap.Toast(toastEl, { autohide: true, delay: 3000 });
        bsToast.show();
        toastEl.addEventListener('hidden.bs.toast', () => {
            toastEl.remove();
        });
    }
</script>

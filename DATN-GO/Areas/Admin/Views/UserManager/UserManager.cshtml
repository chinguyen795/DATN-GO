@model List<DATN_GO.Models.Users>
@{
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

@functions {
    string GetGenderText(string gender)
    {
        return gender switch
        {
            "Male" => "Nam",
            "Female" => "Nữ",
            "Other" => "Khác",
            _ => gender
        };
    }

    string GetStatusText(string status)
    {
        return status switch
        {
            "Active" => "Đang Hoạt động",
            "Inactive" => "Ngừng hoạt động",
            _ => status
        };
    }
}


<div class="page-wrapper">
    <header class="main-header" id="header">
        <nav class="navbar navbar-expand-lg navbar-light" id="navbar">
            <button id="sidebar-toggler" class="sidebar-toggle">
                <span class="sr-only">Toggle navigation</span>
            </button>

            <span class="page-title">Quản lý Người dùng</span>
            <div class="navbar-right">
                <ul class="nav navbar-nav">
                    <li class="custom-dropdown">
                        <a class="notify-toggler custom-dropdown-toggler" asp-controller="Notification" asp-action="Index">
                            <i class="mdi mdi-bell-outline icon"></i>
                        </a>
                    </li>
                    <li class="dropdown user-menu">
                        <button class="dropdown-toggle nav-link" data-toggle="dropdown">
                            <img src="@(!string.IsNullOrEmpty(ViewBag.UserInfo?.Avatar) ? ViewBag.UserInfo.Avatar : "/images/avt-user.jpg")"
                                 width="32" height="32" style="object-fit: cover;" loading="lazy" />
                            <span class="d-none d-lg-inline-block">@ViewBag.UserInfo?.FullName</span>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-right">
                            <li>
                                <a class="dropdown-link-item" asp-controller="Profile" asp-action="Index" asp-area="">
                                    <i class="mdi mdi-account-outline"></i>
                                    <span class="nav-text">Hồ Sơ</span>
                                </a>
                            </li>
                            <li class="dropdown-footer">
                                <a class="dropdown-link-item" href="/Admin/Decorates/Logout">
                                    <i class="mdi mdi-logout"></i> Đăng Xuất
                                </a>
                            </li>
                        </ul>
                    </li>
                </ul>
            </div>
        </nav>
    </header>

    <div class="content-wrapper">
        <div class="content">
            <div class="card card-default">
                <div class="card-header">
                    <h2 class="text-danger">Danh sách Người dùng</h2>
                </div>
                <div class="card-body">
                    <table id="productsTable"
                           class="table table-hover table-product"
                           style="width: 100%">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Ảnh</th>
                                <th>Tên người dùng</th>
                                <th>Email</th>
                                <th>SĐT</th>
                                <th>Giới tính</th>
                                <th>Trạng thái</th>
                                <th>Ngày tạo</th>

                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model)
                            {
                                <tr>
                                    <td>@user.Id</td>
                                    @{
                                        // Base của API nơi lưu file ảnh (đúng với chỗ bạn đang dùng HttpClient)
                                        var apiBase = "https://localhost:7096";

                                        string ResolveAvatarUrl(string? avatar)
                                        {
                                            if (string.IsNullOrWhiteSpace(avatar))
                                            {
                                                return Url.Content("~/images/default-avatar.png");
                                            }

                                            // Nếu đã là absolute URL thì dùng luôn
                                            if (avatar.StartsWith("http://", StringComparison.OrdinalIgnoreCase) ||
                                            avatar.StartsWith("https://", StringComparison.OrdinalIgnoreCase))
                                            {
                                                return avatar;
                                            }

                                            // Nếu API trả về đường dẫn tương đối, ghép vào apiBase
                                            var path = avatar.StartsWith("/") ? avatar : ("/" + avatar);
                                            return apiBase + path;
                                        }
                                    }
                                    <td class="py-0">
                                        @{
                                            var avatarUrl = ResolveAvatarUrl(user.Avatar);
                                            var defaultUrl = "https://i.pinimg.com/736x/bc/43/98/bc439871417621836a0eeea768d60944.jpg";
                                        }
                                        <img src="@avatarUrl"
                                             data-src="@avatarUrl"
                                             alt="Avatar"
                                             class="clickable-image"
                                             style="width:50px; height:50px; object-fit:cover; cursor:pointer;"
                                             onerror="this.onerror=null; this.src='@defaultUrl';" />
                                    </td>

                                    <td>@user.FullName</td>
                                    <td>@user.Email</td>
                                    <td>@user.Phone</td>

                                    <td>@GetGenderText(user.Gender.ToString())</td>
                                    <td>
                                        @if (user.Status.ToString() == "Active")
                                        {
                                            <span class="badge rounded-pill bg-success text-white" style="font-size: 0.7rem; padding: 4px 10px;">
                                                @GetStatusText(user.Status.ToString())
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge rounded-pill bg-warning text-dark" style="font-size: 0.7rem; padding: 4px 10px;">
                                                @GetStatusText(user.Status.ToString())
                                            </span>
                                        }

                                    </td>
                                    <td>@user.CreateAt.ToString("yyyy-MM-dd")</td>

                                </tr>
                            }
                        </tbody>

                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
    </div>


<div class="modal fade" id="imageModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content text-center p-4 rounded shadow"
             style="background-color: #fff; border: 1px solid #ddd;">
            <!-- Close button -->
            <button type="button" class="close ml-auto mb-2 mr-1 mt-1" data-dismiss="modal" aria-label="Đóng"
                    style="position: absolute; top: 10px; right: 15px; z-index: 10;">
                <span aria-hidden="true" style="font-size: 2rem;">&times;</span>
            </button>

            <!-- Image content -->
            <img id="modalImage" src="" class="img-fluid rounded"
                 style="max-height: 75vh; max-width: 100%; object-fit: contain; border: 4px solid #f1f1f1; padding: 10px; background: #fafafa;"
                 alt="Zoom ảnh">
        </div>
    </div>
</div>

<div class="modal fade"
     id="exampleModal"
     tabindex="-1"
     role="dialog"
     aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger">
                <h5 class="modal-title text-white" id="exampleModalLabel">
                    Thông báo xóa
                </h5>
                <button type="button"
                        class="close"
                        data-bs-dismiss="modal"
                        aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn xóa không? Hành động này sẽ không thể hoàn
                tác.
            </div>
            <div class="modal-footer">
                <button type="button"
                        class="btn btn-light btn-pill"
                        data-bs-dismiss="modal">
                    Close
                </button>
                <button type="button" class="btn btn-danger btn-pill">Xóa</button>
            </div>
        </div>
    </div>
</div>

<script>

        document.querySelectorAll('.btn-detail').forEach(btn => {
            btn.addEventListener('click', function () {
                document.getElementById('detail-userId').textContent = this.dataset.id;
                document.getElementById('detail-userName').textContent = this.dataset.fullname;
                document.getElementById('detail-userEmail').textContent = this.dataset.email;
                document.getElementById('detail-userPhone').textContent = this.dataset.phone;
                document.getElementById('detail-userGender').textContent = this.dataset.gender;
                document.getElementById('detail-userStatus').textContent = this.dataset.status;
                document.getElementById('detail-userCreatedAt').textContent = this.dataset.created;
                const avatarUrl = this.dataset.avatar || "/images/default-avatar.png";
        document.getElementById('detail-userAvatar').src = avatarUrl;

                const modal = new bootstrap.Modal(document.getElementById('exampleModallarge'));
                modal.show();
            });
        });

    document.querySelectorAll('.clickable-image').forEach(img => {
        img.addEventListener('click', function () {
            document.getElementById('modalImage').src = this.dataset.src;
            $('#imageModal').modal('show');
        });
    });
            $('.close').on('click', function () {
            $('#imageModal').modal('hide'); // Dùng Bootstrap API
        });

    document.querySelectorAll('.btn[data-bs-dismiss="modal"]').forEach(btn => {
        btn.addEventListener('click', function () {
            const modalEl = btn.closest('.modal');
            const modalInstance = bootstrap.Modal.getInstance(modalEl);
            if (modalInstance) {
                modalInstance.hide();
            }
        });
    });

</script>
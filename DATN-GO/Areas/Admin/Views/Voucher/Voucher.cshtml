@model List<DATN_GO.Models.Vouchers>
@{
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    var currentPage = ViewBag.CurrentPage ?? 1;
    var totalPages = ViewBag.TotalPages ?? 1;
}

@functions {
    public string ResolveProductImage(object prod, Microsoft.AspNetCore.Mvc.IUrlHelper url)
    {
        if (prod == null) return url.Content("~/images/no-image.png");

        var t = prod.GetType();
        // Các tên field ảnh “thường gặp” — thêm/bớt tùy codebase của bạn
        string[] candidates = new[] {
            "ThumbnailUrl", "ImageUrl", "MainImage", "Avatar", "Image",
            "PictureUrl", "ImgUrl", "Url", "PhotoUrl", "ImagePath"
        };

        foreach (var name in candidates)
        {
            var prop = t.GetProperty(name);
            if (prop == null) continue;

            var val = prop.GetValue(prod) as string;
            if (string.IsNullOrWhiteSpace(val)) continue;

            val = val.Trim();

            // Nếu là absolute URL thì trả luôn
            if (val.StartsWith("http://", System.StringComparison.OrdinalIgnoreCase) ||
                val.StartsWith("https://", System.StringComparison.OrdinalIgnoreCase))
            {
                return val;
            }

            // Nếu bắt đầu bằng "~" thì dùng Url.Content thẳng
            if (val.StartsWith("~"))
            {
                return url.Content(val);
            }

            // Nếu là path tương đối, chuẩn hoá về ~/...
            return url.Content("~/" + val.TrimStart('/'));
        }

        // fallback
        return url.Content("~/images/no-image.png");
    }
}

<!-- ===================== STYLES ===================== -->
<style>
    .card.hover-shadow-lg {
        transition: all 0.3s ease;
    }

        .card.hover-shadow-lg:hover {
            transform: translateY(-5px);
            box-shadow: 0 1rem 3rem rgba(0,0,0,.175) !important;
        }

    .form-select, .form-control {
        border-radius: 4px;
        height: 38px;
        font-size: .9rem;
        border: 1px solid #ced4da;
    }

    .search-input {
        padding: 6px 12px;
    }

        .search-input:focus {
            border-color: #ced4da;
            box-shadow: none;
            outline: none;
        }

    .transition-all {
        transition: all .3s ease;
    }

    .card .btn-outline-warning, .card .btn-outline-danger {
        width: 32px;
        height: 32px;
        padding: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: .2s;
    }

    .card .btn-outline-warning {
        margin-right: 6px;
    }

        .card .btn-outline-warning:hover, .card .btn-outline-danger:hover {
            transform: scale(1.1);
        }

    .badge {
        padding: .5rem .75rem;
        font-weight: 500;
    }

        .badge i {
            font-size: .875rem;
        }

    .card-title {
        font-weight: 600;
        font-size: 1.25rem;
    }

    .text-muted {
        font-size: .9rem;
    }

    small {
        font-size: .85rem;
    }

        small i {
            font-size: .875rem;
        }

    /* Input group đẹp trong modal add/edit */
    #addVoucherModal .input-group, #editVoucherModal .input-group {
        width: 100%;
        flex-wrap: nowrap;
        background: #f8f9fa;
        border-radius: 15px;
        border: 1px solid #e9ecef;
        align-items: stretch;
        margin-bottom: 0;
        position: relative;
        overflow: hidden;
    }

    #addVoucherModal .input-group-text, #editVoucherModal .input-group-text {
        border: none;
        background: transparent;
        min-width: 56px;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0 12px 0 18px;
        border-radius: 15px 0 0 15px !important;
        position: relative;
    }

        #addVoucherModal .input-group-text:after, #editVoucherModal .input-group-text:after {
            content: '';
            position: absolute;
            right: 0;
            top: 10px;
            height: 28px;
            width: 1.5px;
            background: #e0e3e7;
            border-radius: 2px;
        }

        #addVoucherModal .input-group-text i, #editVoucherModal .input-group-text i {
            font-size: 1.35rem;
            color: #ff4d5d;
            margin: 0;
        }

    #addVoucherModal .form-control, #editVoucherModal .form-control {
        border: none;
        border-radius: 0 15px 15px 0 !important;
        background: transparent;
        box-shadow: none;
        height: 48px;
        padding-left: 14px;
        font-size: 1.05rem;
    }

    #statusIcon, #editStatusIcon {
        transition: all 0.3s ease;
        font-size: 1.4rem;
        color: #ff4d5d;
    }

    .pagination {
        justify-content: flex-end !important;
    }

    .form-check.form-switch .form-check-input {
        cursor: pointer;
    }

    .scope-select .list-group-item {
        border: 1px solid var(--bs-border-color);
        border-radius: .75rem; /* ~rounded-3 */
        background-color: #fff;
    }

        .scope-select .list-group-item:hover {
            box-shadow: 0 2px 8px rgba(0,0,0,.05);
        }

    #addSelectedPreview img,
    #editSelectedPreview img {
        width: 32px;
        height: 32px;
        object-fit: cover;
        border-radius: .5rem;
        margin-right: 6px; /* khoảng cách ngang */
        margin-bottom: 6px; /* khoảng cách dọc nếu xuống hàng */
    }

    .demo-section {
        background: #f8f9fa;
        padding: 1rem 1.25rem;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0,0,0,.06);
    }

    .custom-select {
        border-radius: 8px !important;
    }

    .bootstrap-select .dropdown-toggle {
        border: 2px solid #e9ecef;
        border-radius: 8px;
        padding: 12px 16px;
        font-size: 14px;
    }

        .bootstrap-select .dropdown-toggle:focus {
            border-color: #dc143c;
            box-shadow: 0 0 0 .2rem rgba(220,20,60,.25);
        }

    .bootstrap-select .dropdown-menu {
        border-radius: 8px;
        box-shadow: 0 4px 20px rgba(0,0,0,.15);
    }

    .bootstrap-select .dropdown-item.active {
        background-color: #dc143c;
    }

    .result-box {
        background: #fff;
        border: 2px dashed #dc143c;
        border-radius: 8px;
        padding: 12px;
        min-height: 46px;
    }

    .crimson {
        color: #dc143c;
    }


</style>

<div class="page-wrapper">
    <!-- ===================== HEADER ===================== -->
    <header class="main-header" id="header">
        <nav class="navbar navbar-expand-lg navbar-light" id="navbar">
            <button id="sidebar-toggler" class="sidebar-toggle"><span class="sr-only">Toggle navigation</span></button>
            <span class="page-title">MÃ ƯU ĐÃI</span>
            <div class="navbar-right ">
                <ul class="nav navbar-nav">
                    <li class="custom-dropdown">
                        <a class="notify-toggler custom-dropdown-toggler" href="Notification.html">
                            <i class="mdi mdi-bell-outline icon"></i>
                        </a>
                    </li>
                    <li class="dropdown user-menu">
                        <button class="dropdown-toggle nav-link" data-toggle="dropdown">
                            <img src="@(!string.IsNullOrEmpty(ViewBag.UserInfo?.Avatar) ? ViewBag.UserInfo.Avatar : "/images/avt-user.jpg")"
                                 width="32" height="32" style="object-fit: cover;" loading="lazy" />
                            <span class="d-none d-lg-inline-block">@ViewBag.UserInfo?.FullName</span>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-right">
                            <li>
                                <a class="dropdown-link-item" asp-controller="Profile" asp-action="Index" asp-area="">
                                    <i class="mdi mdi-account-outline"></i>
                                    <span class="nav-text">Hồ Sơ</span>
                                </a>
                            </li>
                            <li class="dropdown-footer">
                                <a class="dropdown-link-item" href="/Admin/Decorates/Logout">
                                    <i class="mdi mdi-logout"></i> Đăng Xuất
                                </a>
                            </li>
                        </ul>
                    </li>
                </ul>
            </div>
        </nav>
    </header>

    <!-- Toast: TempData -->
    <div style="position: fixed; top: 20px; right: 20px; z-index: 2000; width: 360px;">
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show shadow" role="alert">
                <i class="bi bi-check-circle-fill me-2"></i>@TempData["Success"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Đóng"></button>
            </div>
        }
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show shadow" role="alert">
                <i class="bi bi-exclamation-triangle-fill me-2"></i>@TempData["Error"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Đóng"></button>
            </div>
        }
    </div>

    <!-- ===================== CONTENT ===================== -->
    <div class="content-wrapper">
        <div class="content">
            <div class="card card-default">
                <div class="card-header d-flex align-items-center justify-content-between">
                    <h2 class="mb-0">Danh sách giảm giá</h2>
                    <div class="btn-group">
                        <button class="btn btn-danger btn-add-voucher" data-bs-toggle="modal" data-bs-target="#addVoucherModal" style="text-transform: capitalize;">
                            <i class="mdi mdi-plus"></i> Thêm voucher
                        </button>
                    </div>
                </div>

                <div class="card-body">
                    <!-- Search + Sort -->
                    <div class="d-flex flex-column flex-md-row gap-3 mb-4 align-items-md-center justify-content-between">
                        <div style="width:300px;">
                            <form id="searchForm" method="get" class="d-flex" style="width:300px;">
                                <input type="search" class="form-control" name="search" placeholder="Tìm kiếm voucher..."
                                       aria-label="Tìm kiếm" value="@(Context.Request.Query["search"])" oninput="submitSearch()" />
                            </form>
                        </div>
                        <div style="width:200px;">
                            <select id="sortSelect" class="form-select" style="width:200px;">
                                <option value="">Sắp xếp theo</option>
                                <option value="newest">Mới nhất</option>
                                <option value="oldest">Cũ nhất</option>
                                <option value="value-desc">Giá trị giảm dần</option>
                                <option value="value-asc">Giá trị tăng dần</option>
                            </select>
                        </div>
                    </div>

                    <!-- Voucher Items -->
                    <div class="row g-4">
                        @foreach (var voucher in Model)
                        {
                            <div class="col-12 col-md-4 mb-4">
                                <div class="card shadow-sm hover-shadow-lg transition-all">
                                    <div class="card-body p-0">
                                        <div class="d-flex">
                                            <div class="bg-danger text-white p-4 d-flex align-items-center justify-content-center" style="width: 120px;">
                                                <i class="bi-ticket-perforated-fill" style="font-size: 2.5rem;"></i>
                                            </div>
                                            <div class="p-3 flex-grow-1">
                                                <div class="d-flex justify-content-between align-items-start mb-2">
                                                    <div>
                                                        <h5 class="card-title mb-1">
                                                            @if (voucher.IsPercentage)
                                                            {
                                                                @:Giảm @voucher.Reduce.ToString("N0")%
                                                            }
                                                            else
                                                            {
                                                                @:Giảm @voucher.Reduce.ToString("N0") VND
                                                            }
                                                        </h5>
                                                        <p class="card-text text-muted mb-0">Đơn tối thiểu @voucher.MinOrder.ToString("N0")</p>
                                                    </div>
                                                    <div class="voucher-action d-flex gap-2">
                                                        <button type="button"
                                                                class="btn btn-outline-warning btn-sm rounded-circle btn-edit-voucher"
                                                                data-bs-toggle="modal"
                                                                data-bs-target="#editVoucherModal"
                                                                data-id="@voucher.Id"
                                                                data-discount="@voucher.Reduce.ToString(System.Globalization.CultureInfo.InvariantCulture)"
                                                                data-minorder="@voucher.MinOrder.ToString(System.Globalization.CultureInfo.InvariantCulture)"

                                                                data-quantity="@voucher.Quantity"
                                                                data-start="@voucher.StartDate.ToString("yyyy-MM-dd")"
                                                                data-end="@voucher.EndDate.ToString("yyyy-MM-dd")"
                                                                data-categoryid="@voucher.CategoryId"
                                                                data-storeid="@voucher.StoreId"
                                                                data-status="@((int)voucher.Status)"
                                                                data-ispercentage="@voucher.IsPercentage.ToString().ToLower()"
                                                                data-maxdiscount="@(voucher.MaxDiscount?.ToString() ?? "")"
                                                                data-applyallcategories="@voucher.ApplyAllCategories.ToString().ToLower()"
                                                                data-applyallproducts="@voucher.ApplyAllProducts.ToString().ToLower()"
                                                                data-selectedproductids="@(voucher.SelectedProductIds != null ? string.Join(",", voucher.SelectedProductIds) : "")"
                                                                title="Chỉnh sửa">
                                                            <i class="bi-pencil"></i>
                                                        </button>
                                                        <button class="btn btn-outline-danger btn-sm rounded-circle btn-delete-voucher"
                                                                data-bs-toggle="modal"
                                                                data-bs-target="#deleteConfirmModal"
                                                                data-id="@voucher.Id"
                                                                title="Xóa">
                                                            <i class="bi bi-trash"></i>
                                                        </button>
                                                    </div>
                                                </div>

                                                <div class="d-flex flex-column gap-1">
                                                    <small class="text-success">
                                                        <i class="bi bi-calendar2-check me-1"></i>
                                                        Bắt đầu: @voucher.StartDate.ToString("dd/MM/yyyy")
                                                    </small>
                                                    <small class="text-danger">
                                                        <i class="bi bi-calendar2-x me-1"></i>
                                                        Hết hạn: @voucher.EndDate.ToString("dd/MM/yyyy")
                                                    </small>
                                                </div>

                                                <div class="mt-2 d-flex gap-2 flex-wrap">
                                                    <span class="badge bg-success text-white">
                                                        <i class="bi bi-box-seam me-1"></i>
                                                        Còn lại: @voucher.Quantity
                                                    </span>
                                                    <span class="badge bg-light text-dark border">
                                                        @(voucher.IsPercentage ? "Giảm %" : "Giảm VND")
                                                    </span>
                                                    @if (voucher.IsPercentage && voucher.MaxDiscount.HasValue)
                                                    {
                                                        <span class="badge bg-light text-dark border">Tối đa @voucher.MaxDiscount.Value.ToString("N0")</span>
                                                    }
                                                   
                                                   
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        <script>
                            window.__voucherProducts = window.__voucherProducts || {};
                            @foreach (var voucher in Model)
                            {
                                var json = System.Text.Json.JsonSerializer.Serialize(voucher.SelectedProductIds ?? new List<int>());
                                @:window.__voucherProducts[@voucher.Id] = @Html.Raw(json);
                                //  ^^^^^^^^^^^^^^^^^^^^^^  KHÔNG đặt "@voucher.Id" trong dấu nháy!
                            }
                            // (optional) debug
                            console.log('voucherProducts', window.__voucherProducts);
                        </script>


                        @if (ViewBag.TotalPages > 1)
                        {
                            <div class="w-100 d-flex justify-content-end mt-4">
                                <nav aria-label="Page navigation">
                                    <ul class="pagination mb-0">
                                        <li class="page-item @(ViewBag.CurrentPage <= 1 ? "disabled" : "")">
                                            <a class="page-link border-danger text-danger" href="?page=@(ViewBag.CurrentPage - 1)&search=@ViewBag.Search&sort=@ViewBag.Sort">Previous</a>
                                        </li>
                                        @for (int i = 1; i <= ViewBag.TotalPages; i++)
                                        {
                                            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                                <a class="page-link @(i == ViewBag.CurrentPage ? "bg-danger text-white border-danger" : "text-danger border-danger")" href="?page=@i&search=@ViewBag.Search&sort=@ViewBag.Sort">@i</a>
                                            </li>
                                        }
                                        <li class="page-item @(ViewBag.CurrentPage >= ViewBag.TotalPages ? "disabled" : "")">
                                            <a class="page-link border-danger text-danger" href="?page=@(ViewBag.CurrentPage + 1)&search=@ViewBag.Search&sort=@ViewBag.Sort">Next</a>
                                        </li>
                                    </ul>
                                </nav>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- ===================== MODALS ===================== -->
<!-- Modal Thêm Voucher -->
<div class="modal fade" id="addVoucherModal" tabindex="-1" aria-labelledby="addVoucherModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form id="voucherForm" asp-area="Admin" asp-controller="Voucher" asp-action="Create" method="post">
                @Html.AntiForgeryToken()

                <!-- Header -->
                <div class="modal-header bg-danger">
                    <h5 class="modal-title text-white" id="addVoucherModalLabel">Thêm Voucher</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Đóng"></button>
                </div>

                <!-- Body -->
                <div class="modal-body">
                    <!-- Type -->
                    <div class="mb-3">
                        <label class="form-label d-block">Kiểu giảm giá</label>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="IsPercentage" id="reduceTypeMoney" value="false" checked>
                            <label class="form-check-label" for="reduceTypeMoney">Giảm theo số tiền (VND)</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="IsPercentage" id="reduceTypePercent" value="true">
                            <label class="form-check-label" for="reduceTypePercent">Giảm theo phần trăm (%)</label>
                        </div>
                        <div class="form-text">Nếu chọn %, có thể thiết lập “Giảm tối đa”.</div>
                    </div>

                    <!-- Reduce -->
                    <div class="mb-4" id="reduceWrapper">
                        <label class="form-label" for="discountAmount"><span id="reduceLabel">Mức Giảm Giá (VNĐ)</span></label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-cash-coin"></i></span>
                            <input type="number" class="form-control" id="discountAmount" name="Reduce" min="1000" required placeholder="Nhập số tiền giảm">
                            <span class="input-group-text" id="reduceSuffix">VND</span>
                        </div>
                        <div class="text-danger small mt-1" id="discountAmountError"></div>
                    </div>

                    <!-- Max Discount -->
                    <div class="mb-4 d-none" id="maxDiscountGroup">
                        <label class="form-label" for="maxDiscount">Giảm tối đa (VND) – tùy chọn</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-graph-down"></i></span>
                            <input type="number" class="form-control" id="maxDiscount" name="MaxDiscount" min="0" placeholder="VD: 50000">
                            <span class="input-group-text">VND</span>
                        </div>
                    </div>

                    <!-- Min / Qty -->
                    <div class="mb-4">
                        <label class="form-label" for="minOrder">Đơn Hàng Tối Thiểu (VNĐ)</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-bag-check"></i></span>
                            <input type="number" class="form-control" id="minOrder" name="MinOrder" min="0" required placeholder="Nhập giá trị đơn tối thiểu">
                        </div>
                        <div class="text-danger small mt-1" id="minOrderError"></div>
                    </div>
                    <div class="mb-4">
                        <label class="form-label" for="quantity">Số Lượng</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-list-ol"></i></span>
                            <input type="number" class="form-control" id="quantity" name="Quantity" min="1" required placeholder="Nhập số lượng voucher">
                        </div>
                        <div class="text-danger small mt-1" id="quantityError"></div>
                    </div>

                    <!-- Time -->
                    <div class="row">
                        <div class="col-md-6 mb-4">
                            <label class="form-label" for="startDate">Ngày Bắt Đầu</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-calendar-event"></i></span>
                                <input type="date" class="form-control" id="startDate" name="StartDate" required>
                            </div>
                        </div>
                        <div class="col-md-6 mb-4">
                            <label class="form-label" for="endDate">Ngày Hết Hạn</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-calendar-x"></i></span>
                                <input type="date" class="form-control" id="endDate" name="EndDate" required>
                            </div>
                        </div>
                    </div>

                    <div class="mb-4">
                        <label class="form-label" for="status">Trạng Thái</label>
                        <div class="input-group status-toggle">
                            <span class="input-group-text"><i id="statusIcon" class="bi bi-toggle-on"></i></span>
                            <select class="form-control" id="status" name="Status" onchange="updateStatusIcon()" required>
                                <option value="0">Còn hạn</option>
                                <option value="1">Hết hạn</option>
                            </select>
                        </div>
                    </div>


                    <!-- Apply all -->
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="ApplyAllProducts" name="ApplyAllProducts" value="true">
                            <input type="hidden" name="ApplyAllProducts" value="false">
                            <label class="form-check-label fw-bold" for="ApplyAllProducts">
                                Áp dụng tất cả sản phẩm
                            </label>
                        </div>
                    </div>

                    <!-- Selector row -->
                    <!-- Chọn nhóm sản phẩm (UI) -->
                    <div class="mb-3" id="addProductGroupSummary">
                        <div class="list-group scope-select">
                            <button type="button"
                                    class="list-group-item list-group-item-action d-flex justify-content-between align-items-center px-3 py-2 border rounded"
                                    data-bs-toggle="modal" data-bs-target="#productPickerModal">
                                <div>
                                    <div class="fw-semibold text-secondary">Áp dụng cho nhóm sản phẩm</div>
                                    <small class="text-muted">Nhấn để chọn sản phẩm</small>
                                </div>
                                <small id="addSelectedCount" class="text-muted">0 đã chọn</small>
                            </button>
                        </div>
                        <!-- Preview thumbnails dưới ô chọn -->
                        <div id="addSelectedPreview" class="mt-2 d-flex flex-wrap gap-2"></div>
                    </div>

                    <!-- Hidden inputs -->
                    <div id="addSelectedInputs"></div>

                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="ApplyAllCategories" name="ApplyAllCategories" value="true">
                            <input type="hidden" name="ApplyAllCategories" value="false" />
                            <label class="form-check-label fw-bold" for="ApplyAllCategories">
                                Áp dụng tất cả danh mục
                            </label>
                        </div>
                    </div>

                    <!-- Tabs phạm vi -->
                    <ul class="nav nav-tabs" id="addScopeTabs">
                        <li class="nav-item"><a class="nav-link active" data-bs-toggle="tab" href="#addTabCategory">Theo danh mục</a></li>
                    </ul>
                    <div class="tab-content border rounded-bottom p-3" id="addScopeTabsContent">
                        <div class="tab-pane fade show active" id="addTabCategory">
                            <div id="addCategoryBlock" class="mt-2">
                                <div class="demo-section">
                                    <label class="form-label fw-bold">Chọn nhiều danh mục sản phẩm:</label>

                                    <!-- MULTIPLE SELECT -->
                                    <select class="selectpicker form-control custom-select p-0"
                                            id="addCategoryIds"
                                            name="CategoryIds"
                                            multiple
                                            data-live-search="true"
                                            data-width="100%"
                                        @foreach (var cat in ViewBag.Categories)
                                        {
                                            <option value="@cat.Id" data-tokens="@cat.Name">@cat.Name</option>
                                        }
                                    </select>

                                    <!-- HỘP KẾT QUẢ -->
                                    <div class="result-box mt-2" id="addCategoryResult">
                                        <small class="text-muted">Kết quả sẽ hiển thị ở đây...</small>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="addTabProducts">
                            <!-- KHÔNG tạo addSelectedInputs lần 2 -->
                        </div>
                    </div>


                    <input type="hidden" name="Type" value="0" />
                    <input type="hidden" name="StoreId" value="@ViewBag.StoreId" />
                </div>

                <!-- Footer -->
                <div class="modal-footer">
                    <button type="button" class="btn btn-light btn-pill" data-bs-dismiss="modal">Đóng</button>
                    <button type="submit" class="btn btn-danger btn-pill">Thêm Voucher</button>
                </div>
            </form>
        </div>
    </div>
</div>


<!-- Modal Sửa Voucher (ĐÃ HOÀN THIỆN) -->
<div class="modal fade" id="editVoucherModal" tabindex="-1" aria-labelledby="editVoucherModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form id="editVoucherForm" asp-action="Edit" asp-controller="Voucher" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="Id" id="editVoucherId" />

                <div class="modal-header bg-danger">
                    <h5 class="modal-title text-white" id="editVoucherModalLabel">Sửa Voucher</h5>
                    <button type="button" class="close btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body">
                    <!-- Kiểu giảm -->
                    <div class="mb-3">
                        <label class="form-label d-block">Kiểu giảm giá</label>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="IsPercentage" id="editReduceTypeMoney" value="false">
                            <label class="form-check-label" for="editReduceTypeMoney">Giảm theo số tiền (VND)</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="IsPercentage" id="editReduceTypePercent" value="true">
                            <label class="form-check-label" for="editReduceTypePercent">Giảm theo phần trăm (%)</label>
                        </div>
                    </div>

                    <!-- Mức giảm -->
                    <div class="mb-4">
                        <label class="form-label" for="editDiscountAmount">
                            <span id="editReduceLabel">Mức Giảm Giá (VNĐ)</span>
                            <i class="bi bi-question-circle text-muted" data-bs-toggle="tooltip" title="Nếu %, nhập 1–100. Nếu VND, nhập số tiền giảm."></i>
                        </label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-cash-coin"></i></span>
                            <input type="number" name="Reduce" class="form-control" id="editDiscountAmount" placeholder="Nhập giá trị" required min="1">
                            <span class="input-group-text" id="editReduceSuffix">VND</span>
                        </div>
                        <div class="text-danger small mt-1" id="editDiscountAmountError"></div>
                    </div>

                    <!-- Max Discount -->
                    <div class="mb-4 d-none" id="editMaxDiscountGroup">
                        <label class="form-label" for="editMaxDiscount">Giảm tối đa (VND) – tùy chọn</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-graph-down"></i></span>
                            <input type="number" class="form-control" id="editMaxDiscount" name="MaxDiscount" min="0" placeholder="Ví dụ: 50000">
                            <span class="input-group-text">VND</span>
                        </div>
                    </div>

                    <!-- Min Order -->
                    <div class="mb-4">
                        <label class="form-label" for="editMinOrder">Đơn Hàng Tối Thiểu (VNĐ)</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-bag-check"></i></span>
                            <input type="number" name="MinOrder" class="form-control" id="editMinOrder" placeholder="Nhập giá trị đơn tối thiểu" required min="0">
                        </div>
                        <div class="text-danger small mt-1" id="editMinOrderError"></div>
                    </div>

                    <!-- Quantity -->
                    <div class="mb-4">
                        <label class="form-label" for="editQuantity">Số Lượng</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-list-ol"></i></span>
                            <input type="number" name="Quantity" class="form-control" id="editQuantity" placeholder="Nhập số lượng voucher" required min="1">
                        </div>
                        <div class="text-danger small mt-1" id="editQuantityError"></div>
                    </div>

                    <!-- Time -->
                    <div class="row">
                        <div class="col-md-6 mb-4">
                            <label class="form-label" for="editStartDate">Ngày Bắt Đầu</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-calendar-event"></i></span>
                                <input type="date" name="StartDate" class="form-control" id="editStartDate" required>
                            </div>
                        </div>
                        <div class="col-md-6 mb-4">
                            <label class="form-label" for="editEndDate">Ngày Hết Hạn</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-calendar-x"></i></span>
                                <input type="date" name="EndDate" class="form-control" id="editEndDate" required>
                            </div>
                        </div>
                    </div>

                    <!-- Status -->
                    <div class="mb-4">
                        <label class="form-label" for="editStatus">Trạng Thái</label>
                        <div class="input-group">
                            <span class="input-group-text"><i id="editStatusIcon" class="bi bi-toggle-on"></i></span>
                            <select class="form-control" name="Status" id="editStatus" onchange="updateEditStatusIcon()" required>
                                <option value="0">Còn hạn</option>
                                <option value="1">Hết hạn</option>
                            </select>
                        </div>
                    </div>

                    <!-- ====== PHẠM VI ÁP DỤNG (EDIT) ====== -->
                    <div class="mb-3">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="editApplyAllCategories" name="ApplyAllCategories" value="true">
                            <input type="hidden" name="ApplyAllCategories" value="false" />
                            <label class="form-check-label" for="editApplyAllCategories">Áp dụng tất cả danh mục</label>
                        </div>
                        <div class="form-check form-switch mt-2">
                            <input class="form-check-input" type="checkbox" id="editApplyAllProducts" name="ApplyAllProducts" value="true">
                            <input type="hidden" name="ApplyAllProducts" value="false" />
                            <label class="form-check-label" for="editApplyAllProducts">
                                Áp dụng tất cả sản phẩm
                                <small class="ms-2">• <a href="#" onclick="showProductsTab('edit'); openProductPicker('edit'); return false;">Chọn sản phẩm</a></small>
                            </label>
                        </div>
                    </div>

                    <!-- TÓM TẮT CHỌN SẢN PHẨM + PREVIEW (giống Add) -->
                    <div class="mb-3" id="editProductGroupSummary">
                        <div class="list-group scope-select">
                            <button type="button"
                                    class="list-group-item list-group-item-action d-flex justify-content-between align-items-center px-3 py-2 border rounded"
                                    onclick="openProductPicker('edit')">
                                <div>
                                    <div class="fw-semibold text-secondary">Áp dụng cho nhóm sản phẩm</div>
                                    <small class="text-muted">Nhấn để chọn sản phẩm</small>
                                </div>
                                <small id="editSelectedCount" class="text-muted">0 đã chọn</small>
                            </button>
                        </div>
                        <div id="editSelectedPreview" class="mt-2 d-flex flex-wrap gap-2"></div>
                    </div>
                    <!-- Hidden inputs để submit danh sách đã chọn -->
                    <div id="editSelectedInputs"></div>

                    <!-- Tabs phạm vi -->
                    <ul class="nav nav-tabs" id="editScopeTabs">
                        <li class="nav-item">
                            <a class="nav-link active" data-bs-toggle="tab" href="#editTabCategory">Theo danh mục</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-bs-toggle="tab" href="#editTabProducts">Theo sản phẩm</a>
                        </li>
                    </ul>

                    <div class="tab-content border rounded-bottom p-3" id="editScopeTabsContent">
                        <!-- SỬA id/for/sel đúng 'edit...' (không dùng 'add...' nữa) -->
                        <div class="tab-pane fade show active" id="editTabCategory">
                            <div id="editCategoryBlock" class="mt-2">
                                <label class="form-label fw-bold">Chọn nhiều danh mục sản phẩm:</label>

                                <select class="selectpicker form-control custom-select p-0"
                                        id="editCategoryIds"
                                        name="CategoryIds"
                                        multiple
                                        data-live-search="true"
                                        data-width="100%">
                                    @foreach (var cat in ViewBag.Categories)
                                    {
                                        <option value="@cat.Id" data-tokens="@cat.Name">@cat.Name</option>
                                    }
                                </select>

                                <div class="result-box mt-2" id="editCategoryResult">
                                    <small class="text-muted">Kết quả sẽ hiển thị ở đây...</small>
                                </div>
                            </div>
                        </div>


                        <!-- Tab sản phẩm (chỉ còn preview; chọn qua picker) -->
                        <div class="tab-pane fade" id="editTabProducts">
                            <div class="mt-2">
                                <label class="form-label d-block mb-1">Sản phẩm áp dụng</label>
                               
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-light btn-pill" data-bs-dismiss="modal">Đóng</button>
                    <button type="submit" class="btn btn-danger btn-pill">Lưu Thay Đổi</button>
                </div>
            </form>
        </div>
    </div>
</div>


<!-- Modal Xóa Voucher -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="deleteVoucherForm" method="post" asp-action="Delete">
                @Html.AntiForgeryToken()
                <div class="modal-header bg-danger">
                    <h5 class="modal-title text-white" id="deleteConfirmModalLabel">Thông Báo Xóa</h5>
                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Đóng"><span aria-hidden="true">&times;</span></button>
                </div>
                <div class="modal-body">
                    Bạn có chắc chắn muốn xóa không? Hành động này sẽ không thể hoàn tác.
                    <input type="hidden" name="id" id="deleteVoucherFormId" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-light btn-pill" data-bs-dismiss="modal" style="text-transform: capitalize;">Đóng</button>
                    <button type="submit" class="btn btn-danger btn-pill" style="text-transform: capitalize;">Xóa</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="productPickerModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg">
        <div class="modal-content">

            <!-- Header -->
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Thêm Sản Phẩm</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>

            <!-- Body -->
            <div class="modal-body">
                <!-- Ô tìm kiếm -->
                <div class="mb-3">
                    <input type="text" class="form-control" id="ppSearch" placeholder="Nhập từ khóa sản phẩm...">
                </div>

                <!-- Danh sách sản phẩm -->
                <div id="ppList" class="list-group list-group-flush" style="max-height:60vh; overflow:auto;">
                    @foreach (var p in ViewBag.Products)
                    {
                        var img = ResolveProductImage(p, Url);
                        <label class="list-group-item d-flex align-items-center">
                            <input class="form-check-input me-3 pp-item"
                                   type="checkbox"
                                   value="@p.Id"
                                   data-name="@p.Name"
                                   data-img="@img" />
                            <img src="@img" alt="@p.Name" loading="lazy"
                                 class="pp-thumb me-2"
                                 style="width:40px; height:40px; object-fit:cover; border-radius:4px;" />
                            <span>@p.Name</span>
                        </label>
                    }
                </div>
            </div>

            <!-- Footer -->
            <div class="modal-footer">
                <div class="me-auto"><span id="ppSelectedCount">0 đã chọn</span></div>
                <button type="button" class="btn btn-light" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-danger" id="ppAddBtn">Thêm</button>
            </div>
        </div>
    </div>
</div>


<script>
    /* ====================== Utilities ====================== */
    const $id = (s) => document.getElementById(s);

    function toggleReduceUI(isPercent, labelId, suffixId, maxGroupId, amountInputId) {
      const label = $id(labelId);
      const suffix = $id(suffixId);
      const maxGroup = $id(maxGroupId);
      const amountInput = $id(amountInputId);

      if (isPercent) {
        if (label) label.textContent = "Mức Giảm Giá (%)";
        if (suffix) suffix.textContent = "%";
        maxGroup?.classList.remove("d-none");
        amountInput?.setAttribute("min", "1");
        amountInput?.setAttribute("max", "100");
        if (amountInput) amountInput.placeholder = "Nhập phần trăm (1 - 100)";
      } else {
        if (label) label.textContent = "Mức Giảm Giá (VNĐ)";
        if (suffix) suffix.textContent = "VND";
        maxGroup?.classList.add("d-none");
        amountInput?.removeAttribute("max");
        amountInput?.setAttribute("min", "1000");
        if (amountInput) amountInput.placeholder = "Nhập số tiền giảm (>= 1000)";
      }
    }

    function setTabActive(anchorSelector){
      const el = document.querySelector(anchorSelector);
      if(!el) return;
      new bootstrap.Tab(el).show();
    }
    function showProductsTab(mode){ // 'add' | 'edit'
      if (mode === 'add') setTabActive('#addScopeTabs a[href="#addTabProducts"]');
      else setTabActive('#editScopeTabs a[href="#editTabProducts"]');
    }

    function wireAllProductsToggle(prefix){
      const chk = $id(prefix==='edit' ? 'editApplyAllProducts' : 'ApplyAllProducts');
      const summary = $id(prefix==='edit' ? 'editProductGroupSummary' : 'addProductGroupSummary');
      const inputs  = $id(prefix==='edit' ? 'editSelectedInputs' : 'addSelectedInputs');
      const preview = $id(prefix==='edit' ? 'editSelectedPreview' : 'addSelectedPreview');
      const counter = $id(`${prefix||'add'}SelectedCount`);
      const sync = () => {
        const all = chk?.checked ?? false;
        if (summary) summary.style.display = all ? 'none' : 'block';
        if (all) {
          if (inputs) inputs.innerHTML = '';
          if (preview) preview.innerHTML = '';
          if (counter) counter.textContent = '0 đã chọn';
        }
      };
      chk?.addEventListener('change', sync);
      sync();
    }

    function wireAllCategoriesToggle(prefix){
      const chk = $id(prefix==='edit' ? 'editApplyAllCategories' : 'ApplyAllCategories');
      const block = $id(prefix==='edit' ? 'editCategoryBlock' : 'addCategoryBlock');
      const sync = () => {
        const all = chk?.checked ?? false;
        if (block) block.style.display = all ? 'none' : 'block';
      };
      chk?.addEventListener('change', sync);
      sync();
    }

    /* ====================== Preview helpers (add/edit) ====================== */
    function buildPreviewFromIds(prefix, ids) {
      const container = $id(`${prefix}SelectedPreview`);
      if (!container) return;
      container.innerHTML = '';
      const map = new Map();
      document.querySelectorAll('#ppList .pp-item').forEach(cb => {
        map.set(cb.value, { img: cb.dataset.img, name: cb.dataset.name });
      });
      ids.forEach(id => {
        const m = map.get(id);
        const img = document.createElement('img');
        img.src = m?.img || '';
        img.alt = m?.name || '';
        container.appendChild(img);
      });
    }
    function buildPreviewFromPicker(prefix) {
      const container = $id(`${prefix}SelectedPreview`);
      if (!container) return;
      container.innerHTML = '';
      document.querySelectorAll('#ppList .pp-item:checked').forEach(cb => {
        const img = document.createElement('img');
        img.src = cb.dataset.img || '';
        img.alt = cb.dataset.name || '';
        container.appendChild(img);
      });
    }

    /* ====================== Debounce search ====================== */
    let searchTimeout;
    function submitSearch() {
      clearTimeout(searchTimeout);
      searchTimeout = setTimeout(() => {
        $id('searchForm')?.submit();
      }, 300);
    }

    /* ====================== Product Picker (shared) ====================== */
    let ppMode = 'add'; // 'add' | 'edit'
    function openProductPicker(mode) {
      ppMode = mode;
      // Prefill checkbox theo hidden inputs của form tương ứng
      const selected = new Set(
        [...document.querySelectorAll(`#${ppMode}SelectedInputs input[name="SelectedProductIds"]`)]
          .map(i => i.value)
      );
      document.querySelectorAll('#ppList .pp-item').forEach(cb => {
        cb.checked = selected.has(cb.value);
      });

      updatePPSelectedCount();
      const pickerEl = $id('productPickerModal');
      bootstrap.Modal.getOrCreateInstance(pickerEl, { backdrop: true, keyboard: true }).show();
    }
    function updatePPSelectedCount() {
      const n = document.querySelectorAll('#ppList .pp-item:checked').length;
      const label = $id('ppSelectedCount');
      if (label) label.textContent = `${n} đã chọn`;
      if (ppMode) buildPreviewFromPicker(ppMode); // chỉ xem nhanh khi đang mở picker
    }

    /* ====================== On Ready ====================== */
    document.addEventListener('DOMContentLoaded', function () {
      /* Tooltips */
      document.querySelectorAll('[data-bs-toggle="tooltip"]').forEach(el => {
        new bootstrap.Tooltip(el);
      });

      /* Bootstrap-select init toàn trang */
      if (window.jQuery) {
        $('.selectpicker').selectpicker();
      }

      /* Add: hiển thị kết quả danh mục */
      $('#addCategoryIds').on('changed.bs.select', function () {
        const selectedTexts = $(this).find('option:selected').map(function () {
          return $(this).text();
        }).get();
        $('#addCategoryResult').html(
          selectedTexts.length
            ? `<strong>Đã chọn:</strong> ${selectedTexts.join(', ')}`
            : '<small class="text-muted">Chưa chọn gì...</small>'
        );
      });

      /* Mở modal Add -> refresh selectpicker (tránh render lỗi) */
      $id('addVoucherModal')?.addEventListener('shown.bs.modal', function () {
        $('#addCategoryIds').selectpicker('render').selectpicker('refresh');
      });

      /* Sort persist */
      (function persistSort(){
        const sortSelect = $id("sortSelect");
        const currentSort = new URLSearchParams(window.location.search).get("sort");
        if (currentSort) sortSelect.value = currentSort;
        sortSelect?.addEventListener("change", function () {
          const url = new URL(window.location.href);
          const selectedSort = sortSelect.value;
          if (selectedSort) url.searchParams.set("sort", selectedSort);
          else url.searchParams.delete("sort");
          const searchValue = document.querySelector('input[name="search"]')?.value;
          if (searchValue) url.searchParams.set("search", searchValue);
          window.location.href = url.toString();
        });
      })();

      /* Auto-dismiss alerts */
      (function autoDismiss(){
        const closeAll = () => {
          document.querySelectorAll('.alert').forEach(function (alert) {
            setTimeout(() => {
              alert.style.transition = 'opacity 0.5s ease';
              alert.style.opacity = '0';
              setTimeout(() => { if (alert && alert.parentNode) alert.parentNode.removeChild(alert); }, 500);
            }, 2000);
          });
        };
        closeAll();
        const alertContainer = document.querySelector('div[style*="position: fixed"]');
        if (alertContainer) {
          const observer = new MutationObserver(m => { if (m.some(x => x.addedNodes.length)) closeAll(); });
          observer.observe(alertContainer, { childList: true });
        }
      })();

      /* ========== ADD modal behavior ========== */
      (function initAdd(){
        const rMoney = $id("reduceTypeMoney");
        const rPercent = $id("reduceTypePercent");
        const updateAddReduceUI = () => toggleReduceUI(rPercent?.checked, "reduceLabel", "reduceSuffix", "maxDiscountGroup", "discountAmount");
        if (rMoney && rPercent) {
          rMoney.addEventListener("change", updateAddReduceUI);
          rPercent.addEventListener("change", updateAddReduceUI);
          updateAddReduceUI();
        }

        const today = new Date().toISOString().split("T")[0];
        const startInput = $id("startDate");
        const endInput = $id("endDate");
        if (startInput) {
          startInput.setAttribute("min", today);
          startInput.addEventListener("change", function () {
            if (endInput) {
              endInput.setAttribute("min", this.value);
              if (endInput.value && endInput.value < this.value) endInput.value = this.value;
            }
          });
        }
        if (endInput) endInput.setAttribute("min", today);

        window.updateStatusIcon = function () {
          const statusVal = $id("status")?.value;
          const icon = $id("statusIcon");
          if (!icon) return;
          if (statusVal === "0") { icon.classList.remove("bi-toggle-off"); icon.classList.add("bi-toggle-on"); }
          else { icon.classList.remove("bi-toggle-on"); icon.classList.add("bi-toggle-off"); }
        };
        updateStatusIcon();

        // Basic validations
        $id('discountAmount')?.addEventListener('input', function(){
          const isPercent = $id('reduceTypePercent')?.checked;
          const v = Number(this.value);
          const el = $id('discountAmountError');
          if (!v) { if (el) el.textContent='Mức giảm giá không được để trống.'; return; }
          if (isPercent && (v < 1 || v > 100)) { if (el) el.textContent='Nếu %, giá trị phải trong 1–100.'; }
          else if (!isPercent && v < 1000) { if (el) el.textContent='Nếu VND, giá trị phải ≥ 1000.'; }
          else if (el) el.textContent='';
        });
        $id('minOrder')?.addEventListener('input', function(){
          const v = Number(this.value);
          const el = $id('minOrderError');
          if (el) el.textContent = (isNaN(v) || v < 0) ? 'Đơn hàng tối thiểu không nhỏ hơn 0.' : '';
        });
        $id('quantity')?.addEventListener('input', function(){
          const v = Number(this.value);
          const el = $id('quantityError');
          if (el) el.textContent = (isNaN(v) || v < 1) ? 'Số lượng phải từ 1 trở lên.' : '';
        });
      })();

      /* ========== EDIT modal behavior ========== */
      (function initEdit(){
        // status icon
        window.updateEditStatusIcon = function () {
          const statusVal = $id("editStatus")?.value;
          const icon = $id("editStatusIcon");
          if (!icon) return;
          if (statusVal === "0") { icon.classList.remove("bi-toggle-off"); icon.classList.add("bi-toggle-on"); }
          else { icon.classList.remove("bi-toggle-on"); icon.classList.add("bi-toggle-off"); }
        };

        // ngày
        const today = new Date().toISOString().split("T")[0];
        const es = $id('editStartDate');
        const ee = $id('editEndDate');
        if (es) {
          es.setAttribute('min', today);
          es.addEventListener('change', function () {
            if (ee) {
              ee.setAttribute('min', this.value);
              if (ee.value && ee.value < this.value) ee.value = this.value;
            }
          });
        }
        if (ee) ee.setAttribute('min', today);

        // MULTI-SELECT danh mục cho EDIT
        function renderEditCategoryResult() {
          const $sel = $('#editCategoryIds');
          const texts = $sel.find('option:selected').map(function(){ return $(this).text(); }).get();
          $('#editCategoryResult').html(
            texts.length ? `<strong>Đã chọn:</strong> ${texts.join(', ')}` : '<small class="text-muted">Chưa chọn gì...</small>'
          );
        }
        // mở modal -> refresh selectpicker
        $id('editVoucherModal')?.addEventListener('shown.bs.modal', function () {
          $('#editCategoryIds').selectpicker('render').selectpicker('refresh');
          renderEditCategoryResult();
        });
        // thay đổi -> cập nhật box
        $('#editCategoryIds').on('changed.bs.select', renderEditCategoryResult);

        // Bind nút Sửa từng voucher
        document.querySelectorAll('.btn-edit-voucher').forEach(function (btn) {
          btn.addEventListener('click', function () {
            // core fields
            $id('editVoucherId').value      = btn.dataset.id || '';
            $id('editDiscountAmount').value = btn.dataset.discount || '';
            $id('editMinOrder').value       = btn.dataset.minorder || '';
            $id('editQuantity').value       = btn.dataset.quantity || '';
            $id('editStartDate').value      = btn.dataset.start || '';
            $id('editEndDate').value        = btn.dataset.end || '';

            // status
            const editStatus = $id('editStatus');
            if (editStatus) editStatus.value = (btn.dataset.status ?? "0");
            updateEditStatusIcon();

            // type & max
            const isPercent = (btn.dataset.ispercentage === 'true');
            $id('editReduceTypePercent').checked = isPercent;
            $id('editReduceTypeMoney').checked   = !isPercent;
            toggleReduceUI(isPercent, "editReduceLabel", "editReduceSuffix", "editMaxDiscountGroup", "editDiscountAmount");
            const md = $id('editMaxDiscount');
            if (md) md.value = btn.dataset.maxdiscount || '';

            // ====== Danh mục (multi) ======
            const rawCats = btn.dataset.categoryids || btn.dataset.categoryid || '';
            const catIds = rawCats.split(',').map(s => s.trim()).filter(Boolean);
            const $sel = $('#editCategoryIds');
            // chọn option tương ứng
            $sel.find('option').each(function(){ this.selected = catIds.includes(this.value); });
            $sel.selectpicker('refresh');
            renderEditCategoryResult();

            // flags
            const chkCat  = $id('editApplyAllCategories');
            const chkProd = $id('editApplyAllProducts');
            if (chkCat)  chkCat.checked  = (btn.dataset.applyallcategories === 'true');
            if (chkProd) chkProd.checked = (btn.dataset.applyallproducts === 'true');
            wireAllCategoriesToggle('edit');
            wireAllProductsToggle('edit');

            // ==== selected products -> hidden inputs + counter + preview (có fallback) ====
            let ids = [];
            const raw = btn.dataset.selectedproductids || '';
            if (raw) {
              ids = raw.split(',').map(s => s.trim()).filter(Boolean);
            } else {
              const vid = btn.dataset.id || '';
              const arr = (window.__voucherProducts && window.__voucherProducts[vid]) ? window.__voucherProducts[vid] : [];
              ids = (arr || []).map(x => String(x));
            }

            const cont = $id('editSelectedInputs');
            if (cont) cont.innerHTML = ids.map(id => `<input type="hidden" name="SelectedProductIds" value="${id}">`).join('');
            const cnt = $id('editSelectedCount');
            if (cnt) cnt.textContent = `${ids.length} đã chọn`;
            buildPreviewFromIds('edit', ids);
          });
        });
      })();

      /* ====================== Scope UI init (both) ====================== */
      wireAllProductsToggle('');
      wireAllProductsToggle('edit');
      wireAllCategoriesToggle('');
      wireAllCategoriesToggle('edit');

      /* ====================== Picker events ====================== */
      $id('ppSearch')?.addEventListener('input', function(){
        const q = this.value.trim().toLowerCase();
        document.querySelectorAll('#ppList .list-group-item').forEach(li => {
          const name = li.querySelector('.pp-item')?.dataset.name?.toLowerCase() ?? '';
          li.style.display = name.includes(q) ? '' : 'none';
        });
      });

      $id('ppList')?.addEventListener('change', e => {
        if (e.target.classList.contains('pp-item')) updatePPSelectedCount();
      });

      $id('ppAddBtn')?.addEventListener('click', function () {
        const ids = [...document.querySelectorAll('#ppList .pp-item:checked')].map(cb => cb.value);
        const box = $id(`${ppMode}SelectedInputs`);
        if (box) {
          box.innerHTML = ids.map(id => `<input type="hidden" name="SelectedProductIds" value="${id}">`).join('');
        }
        const cnt = $id(`${ppMode}SelectedCount`);
        if (cnt) cnt.textContent = `${ids.length} đã chọn`;
        buildPreviewFromIds(ppMode, ids);
        const pickerEl = $id('productPickerModal');
        bootstrap.Modal.getOrCreateInstance(pickerEl).hide();
      });

      // Backdrop/scroll khi đóng picker lồng trong modal
      $id('productPickerModal')?.addEventListener('hidden.bs.modal', function () {
        const parentOpen = document.querySelector('#addVoucherModal.show, #editVoucherModal.show');
        if (parentOpen) {
          document.body.classList.add('modal-open');
        } else {
          document.body.classList.remove('modal-open');
          document.body.style.removeProperty('overflow');
          document.body.style.removeProperty('padding-right');
        }
        const backs = [...document.querySelectorAll('.modal-backdrop')];
        if (parentOpen && backs.length > 1) {
          for (let i = 1; i < backs.length; i++) backs[i].remove();
        }
        if (!parentOpen && backs.length > 0) backs.forEach(b => b.remove());
      });
    });
</script>
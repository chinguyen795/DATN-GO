<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Bootstrap 5 CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">

<!-- Bootstrap Select CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.14.0-beta3/dist/css/bootstrap-select.min.css">

<!-- Bootstrap JS Bundle (Bao gồm Popper.js) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<!-- Bootstrap Select JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.14.0-beta3/dist/js/bootstrap-select.min.js"></script>
@using DATN_GO.ViewModels

<div class="page-wrapper">
    <header class="main-header" id="header">
        <nav class="navbar navbar-expand-lg navbar-light" id="navbar">
            <button id="sidebar-toggler" class="sidebar-toggle">
                <span class="sr-only">Toggle navigation</span>
            </button>
            <span class="page-title">Trang chủ</span>
            <div class="navbar-right">
                <ul class="nav navbar-nav">
                    <li class="custom-dropdown">
                        <a class="notify-toggler custom-dropdown-toggler" asp-controller="Notification" asp-action="Index">
                            <i class="mdi mdi-bell-outline icon"></i>
                        </a>
                    </li>
                    <li class="dropdown user-menu">
                        <button class="dropdown-toggle nav-link" data-toggle="dropdown">
                            <img src="@(!string.IsNullOrEmpty(ViewBag.UserInfo?.Avatar) ? ViewBag.UserInfo.Avatar : "/images/avt-user.jpg")"
                                 width="32" height="32" style="object-fit: cover;" loading="lazy" />
                            <span class="d-none d-lg-inline-block">@ViewBag.UserInfo?.FullName</span>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-right">
                            <li>
                                <a class="dropdown-link-item" asp-controller="Profile" asp-action="Index" asp-area="">
                                    <i class="mdi mdi-account-outline"></i>
                                    <span class="nav-text">Hồ Sơ</span>
                                </a>
                            </li>
                            <li class="dropdown-footer">
                                <a class="dropdown-link-item" href="/Admin/Home/Logout">
                                    <i class="mdi mdi-logout"></i> Đăng Xuất
                                </a>
                            </li>
                        </ul>
                    </li>
                </ul>
            </div>
        </nav>
    </header>

    <div class="content-wrapper">
        <div class="content">
            <div class="row">
                <div class="col-xl-4 col-sm-6">
                    <div class="card card-default card-mini" style="height: calc(100% - 1rem)">

                        <div class="card-header">
                            <h2>Tổng cửa hàng</h2>
                            <div class="sub-title">
                                <span class="mr-1">Tất cả và đang hoạt động</span>
                            </div>
                        </div>

                        <div class="card-body d-flex align-items-center justify-content-between">

                            <div class="flex-grow-1 me-3">
                                <!-- Tự đẩy rộng, giữ khoảng cách -->
                                <p class="mb-1 fs-5 d-flex justify-content-between">
                                    Tổng cộng:
                                    <strong class="text-dark fs-4">@ViewBag.TotalShops</strong>
                                </p>
                                <p class="mb-0 fs-5 d-flex justify-content-between">
                                    Đang hoạt động:
                                    <strong class="text-success fs-4">@ViewBag.TotalActiveShops</strong>
                                </p>
                            </div>

                            <i class="mdi mdi-store text-primary" style="font-size: 3.5rem; opacity: 0.8;"></i>

                        </div>

                    </div>
                </div>


                <div class="col-xl-4 col-sm-6">
                    <div class="card card-default card-mini" style="height: calc(100% - 1rem)">
                        <div class="card-header">
                            <h2>Tổng sản phẩm</h2>
                            <div class="sub-title">
                                <span class="mr-1">Trên toàn hệ thống</span>
                            </div>
                        </div>
                        <div class="card-body d-flex align-items-center justify-content-between">
                            <h2 class="text-dark">@ViewBag.TotalProducts</h2>
                            <i class="mdi mdi-package-variant text-success" style="font-size: 3.5rem; opacity: 0.8"></i>
                        </div>
                    </div>
                </div>

                <div class="col-xl-4 col-sm-12">
                    <div class="card card-default card-mini"
                         style="height: calc(100% - 1rem)">
                        <div class="card-header">
                            <h2>Thống kê doanh thu</h2>
                            <div class="sub-title">
                                <span class="mr-1">Trong tháng này</span>
                            </div>
                        </div>
                        <div class="card-body">
                            <p class="mb-1">
                                Doanh thu gốc:
                                <strong id="originalRevenue" class="text-dark float-right">
                                    @string.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:N0}", ViewBag.TotalRevenue) ₫
                                </strong>
                            </p>
                            <p class="mb-1">
                                Phí nền tảng (5%):
                                <strong id="platformFee" class="text-danger float-right">
                                    @string.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:N0}", ViewBag.NetRevenue) ₫
                                </strong>
                            </p>

                            <hr class="my-2" />
                            <button id="btnSendReport" class="btn btn-primary">Gửi báo cáo tháng này</button>
                            <button type="button" class="btn btn-primary mt-1" data-bs-toggle="modal" data-bs-target="#pendingPaymentsModal">
                                Xem yêu cầu rút tiền chờ xử lý
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="row">
                <div class="col-xl-12">
                    <div class="card card-default">
                        <div class="card-header"></div>
                        <div class="card-body">
                            <div class="chart-wrapper">
                                <div class="d-flex justify-content-between mb-3">
                                    <h3>Thống kê số lượng cửa hàng theo tháng</h3>
                                    <select id="yearSelect" class="form-select w-auto">
                                        <!-- Sẽ thêm option động bằng JS -->
                                    </select>
                                </div>

                                <div id="mixed-chart-1"></div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <footer class="footer mt-auto">
        <div class="copyright bg-white">
            <p>&copy; <span id="copy-year"></span> Copyright Mono Dashboard</p>
        </div>
    </footer>
    <div id="custom-toast-container"
         class="toast-container position-fixed bottom-0 end-0 p-3"
         style="z-index: 1055;">
    </div>
</div>
<div class="modal fade" id="pendingPaymentsModal" tabindex="-1" role="dialog" aria-labelledby="pendingPaymentsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="pendingPaymentsModalLabel">Danh sách yêu cầu rút tiền (Chờ xử lý)</h5>
                <button type="button" class="close text-white" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @if (ViewBag.PendingPayments != null && ((List<TradingPaymentViewModel>)ViewBag.PendingPayments).Any())
                {
                    var list = (List<TradingPaymentViewModel>)ViewBag.PendingPayments;
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>StoreId</th>
                                <th>Ngày</th>
                                <th>Số tiền</th>
                                <th>Ngân hàng</th>
                                <th>Số TK</th>
                                <th>Chủ TK</th>
                                <th>Trạng thái</th>
                                <th>Hành động</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var p in list)
                            {
                                <tr>
                                    <td>@p.Id</td>
                                    <td>@p.StoreId</td>
                                    <td>@p.Date.ToString("dd/MM/yyyy")</td>
                                    <td>@string.Format("{0:N0} đ", p.Cost)</td>
                                    <td>@p.Bank</td>
                                    <td>@p.BankAccount</td>
                                    <td>@p.BankAccountOwner</td>
                                    <td>@p.Status</td>
                                    <td>
                                        <form asp-controller="Home" asp-action="ConfirmPayment" method="post" class="d-inline">
                                            <input type="hidden" name="id" value="@p.Id" />
                                            <button type="submit" class="btn btn-success btn-sm">✔ Xác nhận</button>
                                        </form>
                                        <form asp-controller="Home" asp-action="RejectPayment" method="post" class="d-inline">
                                            <input type="hidden" name="id" value="@p.Id" />
                                            <button type="submit" class="btn btn-danger btn-sm">✖ Từ chối</button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p>Không có yêu cầu rút tiền của nào đang chờ xử lý.</p>
                }
                @if (ViewBag.UserPendingPayments != null && ((List<UserTradingPayment>)ViewBag.UserPendingPayments).Any())
                {
                    var list = (List<UserTradingPayment>)ViewBag.UserPendingPayments;
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>UserId</th>
                                <th>Ngày</th>
                                <th>Số tiền</th>
                                <th>Ngân hàng</th>
                                <th>Số TK</th>
                                <th>Chủ TK</th>
                                <th>Trạng thái</th>
                                <th>Hành động</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var up in list)
                            {
                                <tr>
                                    <td>@up.Id</td>
                                    <td>@up.UserId</td>
                                    <td>@up.Date.ToString("dd/MM/yyyy")</td>
                                    <td>@string.Format("{0:N0} đ", up.Cost)</td>
                                    <td>@up.Bank</td>
                                    <td>@up.BankAccount</td>
                                    <td>@up.BankAccountOwner</td>
                                    <td>@up.Status</td>
                                    <td>
                                        <form asp-controller="Home" asp-action="UserConfirmPayment" method="post" class="d-inline">
                                            <input type="hidden" name="id" value="@up.Id" />
                                            <button type="submit" class="btn btn-success btn-sm">✔ Xác nhận</button>
                                        </form>
                                        <form asp-controller="Home" asp-action="UserRejectPayment" method="post" class="d-inline">
                                            <input type="hidden" name="id" value="@up.Id" />
                                            <button type="submit" class="btn btn-danger btn-sm">✖ Từ chối</button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p>Không có yêu cầu rút tiền nào đang chờ xử lý.</p>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

<script>
    const mixedChart1 = document.querySelector("#mixed-chart-1");
    const yearSelect = document.getElementById("yearSelect");
    let renderMixedChart1 = null;

    // Tạo danh sách năm (2020 đến hiện tại)
    const currentYear = new Date().getFullYear();
    for (let year = 2020; year <= currentYear; year++) {
        const option = document.createElement("option");
        option.value = year;
        option.textContent = year;
        if (year === currentYear) option.selected = true;
        yearSelect.appendChild(option);
    }

    // Hàm load biểu đồ theo năm
    function loadChartData(year) {
        const storeAPI = `/api/Stores/count/by-month/${year}`;
        const productAPI = `/api/Products/count/by-month/${year}`;

        Promise.all([
            fetch(storeAPI).then(res => res.json()),
            fetch(productAPI).then(res => res.json())
        ])
            .then(([storeData, productData]) => {
                const labels = ["Jan", "Feb", "Mar", "Apr", "May", "Jun",
                    "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];

                const storeCounts = Array.from({ length: 12 }, (_, i) => storeData[i + 1] || 0);
                const productCounts = Array.from({ length: 12 }, (_, i) => productData[i + 1] || 0);

                const chartOptions = {
                    chart: {
                        height: 370,
                        type: "bar",
                        toolbar: { show: false }
                    },
                    colors: ["#9e6de0", "#00c5dc"],
                    legend: {
                        show: true,
                        position: "top",
                        horizontalAlign: "right",
                        markers: { width: 20, height: 5, radius: 0 }
                    },
                    plotOptions: {
                        bar: {
                            horizontal: false,
                            columnWidth: "50%",
                        }
                    },
                    dataLabels: { enabled: false },
                    stroke: {
                        show: true,
                        width: 2,
                        curve: "smooth"
                    },
                    series: [
                        {
                            name: "Cửa hàng",
                            type: "column",
                            data: storeCounts
                        },
                        {
                            name: "Sản phẩm",
                            type: "column",
                            data: productCounts
                        }
                    ],
                    xaxis: {
                        categories: labels,
                        axisBorder: { show: false },
                        axisTicks: { show: false },
                        crosshairs: { width: 40 }
                    },
                    tooltip: {
                        shared: true,
                        intersect: false,
                        followCursor: true,
                        x: { show: false },
                        y: {
                            formatter: val => Math.round(val),
                            title: { formatter: name => name }
                        }
                    },
                    fill: { opacity: 1 }
                };

                if (renderMixedChart1) renderMixedChart1.destroy();
                renderMixedChart1 = new ApexCharts(mixedChart1, chartOptions);
                renderMixedChart1.render();
            })
            .catch(error => {
                console.error("Lỗi khi tải biểu đồ:", error);
            });
    }

    // Khởi chạy mặc định theo năm hiện tại
    loadChartData(currentYear);

    // Khi chọn năm khác
    yearSelect.addEventListener("change", function () {
        const selectedYear = parseInt(this.value);
        loadChartData(selectedYear);
    });


</script>
<script>
    document.getElementById("btnSendReport").addEventListener("click", function () {
        fetch("/Admin/SendReport", {
            method: "POST"
        })
            .then(res => res.json())
            .then(data => {
                showCustomToast('Gửi thành công', true);
            })
            .catch(err => {
                showCustomToast('Lỗi');
            });
    });
</script>
<script>
    function showCustomToast(message, isSuccess = false) {
        const container = document.getElementById('custom-toast-container');
        if (!container) return;

        const toastId = `toast-${Date.now()}`;

        const toastHTML = `
                    <div id="${toastId}" class="toast custom-toast shadow-lg"
                         role="alert" aria-live="assertive" aria-atomic="true"
                         data-bs-autohide="true" data-bs-delay="3000">
                        <div class="toast-header ${isSuccess ? "bg-success" : "bg-danger"} text-white">
                            <img src="${isSuccess ? "/icons/happy.gif" : "/icons/sad.gif"}" class="rounded me-2" width="24" height="24">
                            <strong class="me-auto">${isSuccess ? "Thành công" : "Lỗi"}</strong>
                            <small>Vừa xong</small>
                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast"></button>
                        </div>
                        <div class="toast-body">${message}</div>
                    </div>`;

        container.insertAdjacentHTML('beforeend', toastHTML);

        const toastEl = document.getElementById(toastId);
        const bsToast = new bootstrap.Toast(toastEl);
        bsToast.show();

        toastEl.addEventListener('hidden.bs.toast', () => {
            toastEl.remove();
        });
    }

</script>
<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>

@model List<DATN_GO.ViewModels.OrderViewModel>

@{
    ViewData["Title"] = "Order Page";
    ViewData["UseContainer"] = false;
}
<style>
    #aiChatBox {
        z-index: 2000 !important;
        position: fixed !important;
    }

    .modal-backdrop {
        z-index: 1040 !important;
    }


</style>
<div class="px-0">
    <div class="row">
        <div class="col-lg-3 col-xl-2 d-none d-lg-block sidebar bg-white border-end">
            <div class="position-sticky" style="top: 1rem;">
                <!-- Sidebar content như bạn đặt sẵn -->
                <div class="p-3 border-bottom">
                    <div class="d-flex align-items-center mb-3">
                        @{
                            var avatarUrl = Context.Session.GetString("Avatar");
                            if (string.IsNullOrWhiteSpace(avatarUrl))
                            {
                                avatarUrl = "https://i.pinimg.com/736x/f0/cd/c4/f0cdc47ddb7f9dd5e86c3e7915c8b337.jpg";
                            }
                        }
                        <img src="@avatarUrl" alt="User Avatar" class="rounded-circle me-2" style="width: 45px; height: 45px;" />

                        <div>
                            <h6 class="mb-0">@ViewBag.UserFullName</h6>
                            <small class="text-muted">@ViewBag.UserNickName</small>
                        </div>
                    </div>
                </div>

                <ul class="nav flex-column p-3">
                    <li class="nav-item mb-2">
                        <a asp-action="Index" asp-controller="Profile" class="nav-link text-dark">
                            <i class="bi bi-person-circle me-2"></i>
                            Thông tin cá nhân
                        </a>
                    </li>
                    <li class="nav-item mb-2">
                        <a asp-action="Index" asp-controller="Order" class="nav-link active text-crimson">
                            <i class="bi bi-box-seam me-2"></i>
                            Đơn hàng của tôi
                        </a>
                    </li>
                    <li class="nav-item mb-2">
                        <a asp-action="address" asp-controller="Address" class="nav-link text-dark">
                            <i class="bi bi-geo-alt me-2"></i>
                            Địa chỉ
                        </a>
                    </li>
                    <li class="nav-item mb-2">
                        <a asp-action="Voucher" asp-controller="Voucher" class="nav-link text-dark">
                            <i class="bi bi-ticket-perforated me-2"></i>
                            Voucher
                        </a>
                    </li>
                    <li class="nav-item mb-2">
                        <a asp-action="Index" asp-controller="Wallet" class="nav-link text-dark">
                            <i class="bi bi-wallet2 me-2"></i>
                            Ví của tôi
                        </a>
                    </li>
                    <li class="nav-item mb-2">
                        <a asp-action="ChangePassword" asp-controller="UserAuthentication" class="nav-link text-dark">
                            <i class="bi bi-bell me-2"></i>
                            Đổi mật khẩu
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="/Seller/Voucher/Logout" class="nav-link text-dark">
                            <i class="bi bi-box-arrow-right me-2"></i>
                            Đăng xuất
                        </a>
                    </li>
                </ul>
            </div>
        </div>

        <!-- Main content -->
        <div class="col-lg-9 col-xl-10 p-4">
            <div class="bg-white p-4 rounded shadow-lg">
                <div class="card mb-4">
                    <div class="card-header bg-danger bg-opacity-10 border-danger border-5 border-top-0 border-end-0 border-bottom-0">
                        <h4 class="card-title text-danger mb-0 py-2">
                            <i class="bi bi-bag-heart-fill me-2"></i> Đơn hàng của tôi
                        </h4>
                    </div>
                </div>

                <!-- Nav tabs -->
                <ul class="nav nav-tabs mb-4" id="orderTabs" role="tablist">
                    @{
                        // Các trạng thái hiển thị
                        var tabList = new[]
                        {
                                        new { Id = "all", Title = "Tất cả", Icon = "bi-collection", Badge = (int?)null },
                                        new { Id = "ChoXuLy", Title = "Chờ xác nhận", Icon = "bi-clock-history", Badge = (int?)Model.Count(o => o.Status == "ChoXuLy") },
                                        new { Id = "ChoLayHang", Title = "Chờ lấy hàng", Icon = "bi-box-seam", Badge = (int?)Model.Count(o => o.Status == "ChoLayHang") },
                                        new { Id = "DangGiao", Title = "Đang giao", Icon = "bi-truck", Badge = (int?)Model.Count(o => o.Status == "DangGiao") },
                                        new { Id = "DaHoanThanh", Title = "Đã giao", Icon = "bi-check-circle", Badge = (int?)Model.Count(o => o.Status == "DaHoanThanh") },
                                        new { Id = "DaHuy", Title = "Đã hủy", Icon = "bi-x-circle", Badge = (int?)Model.Count(o => o.Status == "DaHuy") },
                                        };


                        int tabIndex = 0;
                    }
                    @foreach (var tab in tabList)
                    {
                        var activeClass = tabIndex == 0 ? "active" : "";
                        var badgeHtml = (tab.Badge.HasValue && tab.Badge.Value > 0)
                        ? $"<span class=\"badge bg-warning rounded-pill\">{tab.Badge.Value}</span>"
                        : "";

                        <li class="nav-item" role="presentation">
                            <button class="nav-link position-relative @activeClass"
                                    id="@($"{tab.Id}-tab")"
                                    data-bs-toggle="tab"
                                    data-bs-target="#@tab.Id"
                                    type="button"
                                    role="tab"
                                    aria-controls="@tab.Id"
                                    aria-selected="@(tabIndex == 0 ? "true" : "false")">
                                <i class="bi @tab.Icon me-1"></i> @tab.Title
                                @Html.Raw(badgeHtml)
                            </button>
                        </li>

                        tabIndex++;
                    }
                </ul>


                <!-- Tab content -->
                <div class="tab-content" id="orderTabContent">
                    @foreach (var tab in tabList)
                    {
                        var isActive = tab.Id == "all" ? "show active" : "";
                        IEnumerable<DATN_GO.ViewModels.OrderViewModel> ordersToShow = tab.Id == "all"
                        ? Model
                        : Model.Where(o => o.Status == tab.Id);

                        <div class="tab-pane fade @isActive" id="@tab.Id" role="tabpanel" aria-labelledby="@($"{tab.Id}-tab")">
                            <div class="orders-list" id="orders-list-@tab.Id">
                                @if (!ordersToShow.Any())
                                {
                                    <p class="text-muted">Không có đơn hàng nào.</p>
                                }
                                else
                                {
                                    var orderIndex = 0;
                                    foreach (var order in ordersToShow)
                                    {
                                        var hiddenClass = orderIndex >= 5 ? "d-none more-order" : "";
                                        <div class="order-item border rounded p-3 mb-3 @hiddenClass" data-order-id="@order.Id" data-date="@order.CreatedAt.ToString("yyyy-MM-dd")">
                                            <div class="d-flex justify-content-between align-items-center mb-3">
                                                <div>
                                                    <h6 class="mb-0">Mã đơn hàng: #@order.Id</h6>
                                                    <small class="text-muted d-block">
                                                        Mã vận đơn: <span class="fw-bold">@(!string.IsNullOrEmpty(order.LabelId) ? order.LabelId : "Chưa có")</span>
                                                    </small>
                                                    <small class="text-muted">@order.CreatedAt.ToString("dd/MM/yyyy HH:mm")</small>
                                                </div>

                                                <span class="badge @GetBadgeClass(order.Status)">
                                                    @GetStatusDisplayName(order.Status)
                                                </span>
                                            </div>

                                            <div class="row mb-3">
                                                <div class="col-md-2">
                                                    <img src="@(order.OrderDetails != null && order.OrderDetails.Any()
                                            ? order.OrderDetails.First().ProductImage
                                            : "https://via.placeholder.com/80")"
                                                         alt="Product" class="img-fluid rounded" />
                                                </div>
                                                <div class="col-md-7">
                                                    <h6>
                                                        @(order.OrderDetails.Any()
                                                            ? (order.TotalQuantity == 1
                                                            ? order.OrderDetails[0].ProductName
                                                            : $"{order.OrderDetails[0].ProductName} + {order.TotalQuantity - 1} sản phẩm khác")
                                                            : "Không có sản phẩm")
                                                    </h6>
                                                    <p class="text-muted mb-0">Số lượng: @order.TotalQuantity</p>
                                                </div>
                                                <div class="col-md-3 text-end">
                                                    <h6 class="text-danger">@order.GrandTotal.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))</h6>
                                                </div>
                                            </div>

                                            <div class="d-flex justify-content-between align-items-center">
                                                <p class="mb-0">
                                                    Tổng tiền: <span class="text-danger fw-bold">@order.GrandTotal.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))</span>
                                                </p>
                                                <div>
                                                    <a href="@Url.Action("DetailOrder", "Order", new { id = order.Id })" class="btn btn-danger btn-sm">Chi tiết</a>
                                                    @if (order.Status == "ChoXuLy" || order.Status == "ChoLayHang")
                                                    {
                                                        <a href="@Url.Action("CancelOrderConfirm", "Order", new { id = order.Id })"
                                                           class="btn btn-outline-danger btn-sm ms-2">
                                                            Hủy đơn
                                                        </a>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                        orderIndex++;
                                    }

                                    if (ordersToShow.Count() > 5)
                                    {
                                        <div class="text-center mt-3">
                                            <button class="btn btn-outline-danger btn-sm load-more" data-tab="@tab.Id">Xem thêm</button>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    }
                </div>

            </div>
        </div>
    </div>
</div>
<script>
        document.addEventListener('DOMContentLoaded', function() {
        var chatBox = document.getElementById('aiChatBox');
        if(chatBox) {
            document.body.appendChild(chatBox);
        }
    });

</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.load-more').forEach(function (btn) {
            btn.addEventListener('click', function () {
                var tabId = btn.getAttribute('data-tab');
                var list = document.querySelector('#orders-list-' + tabId);
                var hiddenOrders = list.querySelectorAll('.more-order.d-none');

                // Hiện thêm 5 order
                for (let i = 0; i < 5 && i < hiddenOrders.length; i++) {
                    hiddenOrders[i].classList.remove('d-none');
                }

                // Nếu không còn đơn nào thì ẩn nút
                if (list.querySelectorAll('.more-order.d-none').length === 0) {
                    btn.style.display = 'none';
                }

                // Cuộn xuống để thấy order mới hiện
                if (hiddenOrders.length > 0) {
                    hiddenOrders[0].scrollIntoView({ behavior: 'smooth' });
                }
            });
        });
    });
</script>

@functions {
    // Chuyển tab Id sang trạng thái order tương ứng của bạn
    private string GetStatusDisplayName(string status)
    {
        return status switch
        {
            "ChoXuLy" => "Chờ xác nhận",
            "ChoLayHang" => "Chờ lấy hàng",
            "DangGiao" => "Đang giao",
            "DaHoanThanh" => "Đã giao",
            "DaHuy" => "Đã hủy",
            _ => "Không rõ"
        };
    }

    private string GetBadgeClass(string status)
    {
        return status switch
        {
            "ChoXuLy" => "bg-warning",
            "ChoLayHang" => "bg-info",
            "DangGiao" => "bg-success",
            "DaHoanThanh" => "bg-primary",
            "DaHuy" => "bg-danger",
            _ => "bg-secondary"
        };
    }
   
}

@model DATN_GO.ViewModels.SalesRegistrationViewModel
@{
    ViewData["Title"] = "SalesRegistration Page";
    ViewData["UseContainer"] = false;
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div>
            <a asp-controller="Profile" asp-action="Index" class="btn btn-outline-danger" style="text-transform: capitalize;">
                <i class="bi bi-arrow-left me-1"></i>Quay lại
            </a>
        </div>
        <div class="col-lg-8 mb-3">
            <div class="d-flex align-items-center justify-content-between pt-1 pb-2 mx-0">
                <div class="col-12 text-center">
                    <h3 class="text-danger m-0">ĐĂNG KÝ BÁN HÀNG</h3>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="mb-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card border border-2 rounded-3">
                <form action="/SalesRegistration/SalesRegistration" method="post" enctype="multipart/form-data">
                    @Html.AntiForgeryToken()
                    <div class="mb-4 mx-4 mt-2">

                        <label class="form-label">Ảnh đại diện</label>
                        <input type="file" asp-for="Avatar" class="filepond avatar-pond" name="Avatar" id="avatarInput"
                               accept="image/*" />

                        <label class="form-label">Ảnh bìa</label>
                        <input type="file" asp-for="CoverPhoto" class="filepond cover-pond" name="CoverPhoto" id="coverInput"
                               accept="image/*" />
                    </div>

                    <div class="p-4">

                        <!-- Tên cửa hàng -->
                        <div class="mb-4">
                            <label class="form-label">Tên cửa hàng  <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <span class="input-group-text text-danger">
                                    <i class="bi bi-shop"></i>
                                </span>
                                <input asp-for="Name" class="form-control " placeholder="Nhập tên cửa hàng" />
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>
                        </div>

                        <!-- Ảnh CCCD/CMND -->
                        <div class="mb-4">
                            <label class="form-label">Ảnh CCCD/CMND  <span class="text-danger">*</span></label>
                            <div class="border rounded p-3 text-center"
                                 onclick="document.getElementById('idFrontInput').click()">
                                <div id="idFrontPreview" class="id-preview position-relative">
                                    <img id="idFrontImg" src="" class="preview-image img-fluid d-none" alt="ID front preview">
                                    <div class="upload-prompt">
                                        <i class="bi bi-credit-card-2-front fs-1 text-danger"></i>
                                        <p class="mb-0 text-danger">Mặt trước CCCD/CMND</p>
                                    </div>
                                </div>
                                <input type="file" id="idFrontInput" accept="image/*" class="d-none"
                                       onchange="handleOcrImageChange(this)">
                            </div>
                        </div>

                        <!-- Người đại diện -->
                        <div class="mb-4">
                            <label class="form-label">Người đại diện <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <span class="input-group-text text-danger">
                                    <i class="bi bi-person-badge-fill"></i>
                                </span>
                                <input asp-for="RepresentativeName" class="form-control " id="representativeName" placeholder="Nhập tên người đại diện" readonly />
                                @Html.ValidationMessageFor(m => m.RepresentativeName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <!-- Số CCCD/CMND -->
                        <div class="mb-4">
                            <label class="form-label">Số CCCD/CMND <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <span class="input-group-text text-danger">
                                    <i class="bi bi-credit-card-2-front"></i>
                                </span>
                                <input asp-for="CitizenIdentityCard" class="form-control " id="citizenIdentityCard" placeholder="Nhập số CCCD/CMND" readonly />
                            </div>
                        </div>

                        <!-- Địa chỉ -->
                        <div class="mb-4">
                            <label class="form-label">Địa chỉ <span class="text-danger">*</span></label>
                            <div class="row g-3">
                                <div class="col-12">
                                    <div class="input-group">
                                        <span class="input-group-text text-danger">
                                            <i class="bi bi-house"></i>
                                        </span>
                                        <input asp-for="Address" class="form-control " id="address" placeholder="Địa chỉ" readonly />
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Tài khoản ngân hàng -->
                        <div class="mb-4">
                            <label class="form-label">Thông tin tài khoản ngân hàng <span class="text-danger">*</span></label>
                            <div class="row g-3">
                                <div class="col-md-6">
                                    <div class="input-group">
                                        <span class="input-group-text text-danger">
                                            <i class="bi bi-credit-card"></i>
                                        </span>
                                        <input asp-for="BankAccount" class="form-control " placeholder="Số tài khoản" />
                                        @Html.ValidationMessageFor(m => m.BankAccount, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="input-group">
                                        <span class="input-group-text text-danger">
                                            <i class="bi bi-person"></i>
                                        </span>
                                        <input asp-for="BankAccountOwner" class="form-control " placeholder="Tên chủ tài khoản" />
                                        @Html.ValidationMessageFor(m => m.BankAccountOwner, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-12">

                                    <div class="input-group">
                                        <select asp-for="Bank" class="selectpicker" data-live-search="true" data-width="100%">
                                            <option value="">-- Chọn ngân hàng --</option>
                                            @foreach (var bank in ViewBag.Banks as List<BankModel>)
                                            {
                                                <option value="@bank.Bin">@bank.Name (@bank.ShortName)</option>
                                            }
                                        </select>

                                        @Html.ValidationMessageFor(m => m.Bank, "", new { @class = "text-danger" })
                                    </div>


                                </div>
                            </div>
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-crimson" style="text-transform: capitalize;">
                                <i class="bi bi-shop me-2"></i>Đăng ký
                            </button>
                        </div>

                    </div>
                </form>
            </div>
        </div>
    </div>

</div>

<script>
    (function () {
      const provinceSelect = document.getElementById('provinceSelect');
      const districtSelect = document.getElementById('districtSelect');
      const wardSelect = document.getElementById('wardSelect');

      if (!provinceSelect || !districtSelect || !wardSelect) return;

      let LOCATIONS = [];

      // Helpers
      function clearSelect(sel, placeholder) {
        sel.innerHTML = '';
        const opt = document.createElement('option');
        opt.value = '';
        opt.textContent = placeholder || '-- Chọn --';
        sel.appendChild(opt);
      }

      function fillSelect(sel, items, textKey) {
        items.forEach(item => {
          const opt = document.createElement('option');
          const text = typeof item === 'string' ? item : item[textKey];
          opt.value = text;
          opt.textContent = text;
          sel.appendChild(opt);
        });
      }

      function findCityByName(name) {
        return LOCATIONS.find(c => c.CityName === name);
      }

      function findDistrictByName(city, name) {
        return (city?.Districts || []).find(d => d.DistrictName === name);
      }

      // Load JSON + hydrate 3 cấp
      async function initLocations() {
        try {
          const res = await fetch('/data/locations.json', { cache: 'no-store' });
          if (!res.ok) throw new Error('Failed to load locations.json');
          LOCATIONS = await res.json();

          // Province
          clearSelect(provinceSelect, '-- Chọn Tỉnh/Thành phố --');
          fillSelect(provinceSelect, LOCATIONS, 'CityName');

          // Preselect nếu model đã có value (Edit lại form)
          const preProvince = provinceSelect.value?.trim();
          const preDistrict = districtSelect.value?.trim();
          const preWard = wardSelect.value?.trim();

          // District
          clearSelect(districtSelect, '-- Chọn Quận/Huyện --');
          clearSelect(wardSelect, '-- Chọn Phường/Xã --');

          if (preProvince) {
            const city = findCityByName(preProvince);
            if (city) {
              fillSelect(districtSelect, city.Districts, 'DistrictName');
              if (preDistrict) {
                districtSelect.value = preDistrict;
                const district = findDistrictByName(city, preDistrict);
                if (district) {
                  clearSelect(wardSelect, '-- Chọn Phường/Xã --');
                  fillSelect(wardSelect, district.Wards, 'WardName');
                  if (preWard) wardSelect.value = preWard;
                }
              }
            }
          }
        } catch (err) {
          console.error('[locations] load error:', err);
        }
      }

      // Events
      provinceSelect.addEventListener('change', () => {
        const city = findCityByName(provinceSelect.value);
        clearSelect(districtSelect, '-- Chọn Quận/Huyện --');
        clearSelect(wardSelect, '-- Chọn Phường/Xã --');
        if (!city) return;
        fillSelect(districtSelect, city.Districts, 'DistrictName');
      });

      districtSelect.addEventListener('change', () => {
        const city = findCityByName(provinceSelect.value);
        const district = findDistrictByName(city, districtSelect.value);
        clearSelect(wardSelect, '-- Chọn Phường/Xã --');
        if (!district) return;
        fillSelect(wardSelect, district.Wards, 'WardName');
      });

      // Kickoff
      document.addEventListener('DOMContentLoaded', initLocations);
    })();
</script>


<script>
    function handleOcrImageChange(input) {
        if (input.files && input.files[0]) {
            // Hiển thị preview ảnh
            const reader = new FileReader();
            reader.onload = function (e) {
                const img = document.getElementById('idFrontImg');
                img.src = e.target.result;
                img.classList.remove('d-none');
            };
            reader.readAsDataURL(input.files[0]);

            // Gửi ảnh lên server để OCR
            var formData = new FormData();
            formData.append('ImageFile', input.files[0]);
            fetch('/SalesRegistration/ExtractOcr', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                console.log('OCR response:', data);
                if (data.success && data.data) {
                    document.getElementById('representativeName').value = data.data.representativeName || '';
                    document.getElementById('citizenIdentityCard').value = data.data.citizenIdentityCard || '';
                    document.getElementById('address').value = data.data.address || '';
                } else {
                    alert(data.message || 'Không nhận diện được thông tin.');
                }
            })
            .catch(() => alert('Lỗi khi gửi ảnh nhận diện.'));
        }
    }

</script>

<link href="https://unpkg.com/filepond/dist/filepond.min.css" rel="stylesheet" />
<link href="https://unpkg.com/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css"
      rel="stylesheet" />
<script src="https://unpkg.com/filepond/dist/filepond.min.js"></script>
<script src="https://unpkg.com/filepond-plugin-file-validate-type/dist/filepond-plugin-file-validate-type.min.js"></script>
<script src="https://unpkg.com/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.js"></script>
<!-- Bootstrap JavaScript Libraries -->
<style>
    .filepond--root.avatar-pond .filepond--item {
        border-radius: 50%;
        overflow: hidden;
        aspect-ratio: 1/1;
    }

    .filepond--root.avatar-pond {
        max-width: 180px;
        margin: 0 auto;
    }

    .filepond--root.cover-pond {
        max-width: 100%;
    }

        .filepond--root.cover-pond .filepond--item {
            width: 100%;
            border-radius: 12px;
            overflow: hidden;
        }

        .filepond--root.cover-pond .filepond--image-preview {
            object-fit: cover;
            height: 100%;
            width: 100%;
        }
</style>

<script>
    FilePond.registerPlugin(
        FilePondPluginImagePreview,
        FilePondPluginFileValidateType
    );

    FilePond.setOptions({
        labelIdle: 'Kéo & thả ảnh hoặc <span class="filepond--label-action">Chọn ảnh</span>',
        acceptedFileTypes: ['image/*'],
        instantUpload: false,
        storeAsFile: true // ✅ QUAN TRỌNG!
    });

    // Khởi tạo cho Avatar
    FilePond.create(document.querySelector('.avatar-pond'), {
        imagePreviewHeight: 130,
        stylePanelLayout: 'compact circle',
        styleLoadIndicatorPosition: 'center bottom',
        styleProgressIndicatorPosition: 'right bottom',
        styleButtonRemoveItemPosition: 'left bottom',
        styleButtonProcessItemPosition: 'right bottom'
    });

    // Khởi tạo cho Cover
    FilePond.create(document.querySelector('.cover-pond'), {
        imagePreviewHeight: 200,
        stylePanelLayout: 'compact'
    });
</script>
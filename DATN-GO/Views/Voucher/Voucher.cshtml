﻿@using DATN_GO.Models
@model Users
@{
    ViewData["Title"] = "Voucher Page";
    ViewData["UseContainer"] = false;
}

<!-- Offcanvas Sidebar for Mobile -->
<div class="offcanvas offcanvas-start" tabindex="-1" id="sidebarMenu" aria-labelledby="sidebarMenuLabel">
    <div class="offcanvas-header bg-crimson text-white">
        <h5 class="offcanvas-title" id="sidebarMenuLabel">Menu Tài Khoản</h5>
        <button type="button" class="btn-close text-white" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <div class="p-3 border-bottom">
            <div class="d-flex align-items-center mb-3">
                <img src="@(string.IsNullOrEmpty(Model.Avatar) ? "https://i.pinimg.com/736x/f0/cd/c4/f0cdc47ddb7f9dd5e86c3e7915c8b337.jpg" : Model.Avatar)"
                     alt="Profile" class="rounded-circle me-2" style="width: 45px; height: 45px;">
                <div>
                    <h6 class="mb-0">@Model.FullName</h6>
                    <small class="text-muted">@Model.Email</small>
                </div>
            </div>
        </div>

        <ul class="nav flex-column p-3">
            <li class="nav-item mb-2"><a asp-controller="Profile" asp-action="Index" class="nav-link text-dark"><i class="bi bi-person-circle me-2"></i>Thông tin cá nhân</a></li>
            <li class="nav-item mb-2"><a href="./Orders.html" class="nav-link text-dark"><i class="bi bi-box-seam me-2"></i>Đơn hàng của tôi</a></li>
            <li class="nav-item mb-2"><a asp-controller="Voucher" asp-action="Voucher" class="nav-link text-danger active"><i class="bi bi-ticket-perforated me-2"></i>Voucher của tôi</a></li>
            <li class="nav-item mb-2"><a href="./Address.html" class="nav-link text-dark"><i class="bi bi-geo-alt me-2"></i>Địa chỉ</a></li>
            <li class="nav-item mb-2"><a href="./Repassword.html" class="nav-link text-dark"><i class="bi bi-shield-lock me-2"></i>Đổi mật khẩu</a></li>
            <li class="nav-item"><a href="./Home.html" class="nav-link text-dark"><i class="bi bi-box-arrow-right me-2"></i>Đăng xuất</a></li>
        </ul>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        <div class="d-lg-none p-3">
            <button class="btn btn-outline-danger" type="button" data-bs-toggle="offcanvas" data-bs-target="#sidebarMenu">
                <i class="bi bi-list"></i>
            </button>
        </div>

        <div class="col-lg-3 col-xl-2 d-none d-lg-block sidebar bg-white border-end">
            <div class="position-sticky" style="top: 1rem;">
                <div class="p-3 border-bottom">
                    <div class="d-flex align-items-center mb-3">
                        <img src="@(string.IsNullOrEmpty(Model.Avatar) ? "https://i.pinimg.com/736x/f0/cd/c4/f0cdc47ddb7f9dd5e86c3e7915c8b337.jpg" : Model.Avatar)" alt="Profile" class="rounded-circle me-2" style="width: 45px; height: 45px;">
                        <div>
                            <h6 class="mb-0">@Model.FullName</h6>
                            <small class="text-muted">@Model.Email</small>
                        </div>
                    </div>
                </div>

                <ul class="nav flex-column p-3">
                    <li class="nav-item mb-2">
                        <a asp-action="Index" asp-controller="Profile" class="nav-link text-dark">
                            <i class="bi bi-person-circle me-2"></i>
                            Thông tin cá nhân
                        </a>
                    </li>
                    <li class="nav-item mb-2">
                        <a asp-action="Index" asp-controller="Order" class="nav-link text-dark">
                            <i class="bi bi-box-seam me-2"></i>
                            Đơn hàng của tôi
                        </a>
                    </li>
                    <li class="nav-item mb-2">
                        <a asp-action="address" asp-controller="Address" class="nav-link text-dark">
                            <i class="bi bi-geo-alt me-2"></i>
                            Địa chỉ
                        </a>
                    </li>
                    <li class="nav-item mb-2">
                        <a asp-action="Voucher" asp-controller="Voucher" class="nav-link active text-crimson">
                            <i class="bi bi-ticket-perforated me-2"></i>
                            Voucher
                        </a>
                    </li>
                    <li class="nav-item mb-2">
                        <a asp-action="Index" asp-controller="Wallet" class="nav-link active text-crimson">
                            <i class="bi bi-wallet2 me-2"></i>
                            Ví của tôi
                        </a>
                    </li>
                    <li class="nav-item mb-2">
                        <a asp-action="ChangePassword" asp-controller="UserAuthentication" class="nav-link text-dark">
                            <i class="bi bi-bell me-2"></i>
                            Đổi mật khẩu
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="/Voucher/Logout" class="nav-link text-dark">
                            <i class="bi bi-box-arrow-right me-2"></i>
                            Đăng xuất
                        </a>
                    </li>
                </ul>
            </div>
        </div>

        <div class="col-lg-9 col-xl-10 p-4">
            <div class="bg-white p-4 rounded shadow-lg">
                <div class="card mb-4">
                    <div class="card-header bg-danger bg-opacity-10 border-danger border-5 border-top-0 border-end-0 border-bottom-0">
                        <h4 class="card-title text-danger mb-0 py-2">
                            <i class="bi bi-ticket-perforated-fill me-2"></i>
                            Voucher của tôi
                        </h4>
                    </div>
                </div>

                <ul class="nav nav-tabs mb-4">
                    <li class="nav-item"><a class="nav-link active" href="#" data-tab-color="gray" data-voucher-tab="all">Tất cả</a></li>
                    <li class="nav-item"><a class="nav-link" href="#" data-tab-color="danger" data-voucher-tab="shop">Voucher Shop</a></li>
                    <li class="nav-item"><a class="nav-link" href="#" data-tab-color="success" data-voucher-tab="floor">Voucher Sàn</a></li>
                </ul>

                <div class="row mb-4">
                    <div class="col-12">
                        <div class="input-group">
                            <input type="text" id="voucherSearch" class="form-control" placeholder="Tìm kiếm voucher...">
                            <button class="btn btn-danger" type="button"><i class="bi bi-search"></i></button>
                        </div>
                    </div>
                </div>

                <div class="vouchers-content" id="voucherContent">
                    <div class="row g-3" id="voucherList">
                        <div class="col-12 text-center text-muted">Đang tải voucher...</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    let allVouchers = [];

    document.addEventListener("DOMContentLoaded", function () {
        fetch('/Voucher/AllApi')
            .then(res => res.json())
            .then(data => {
                allVouchers = data || [];
                renderVouchers("all");
            })
            .catch(error => {
                console.error('Error fetching vouchers:', error);
                document.getElementById("voucherList").innerHTML =
                    '<div class="col-12 text-center text-danger">Lỗi khi tải voucher</div>';
            });

        document.querySelectorAll('[data-voucher-tab]').forEach(tab => {
            tab.addEventListener("click", function (e) {
                e.preventDefault();
                document.querySelectorAll('[data-voucher-tab]').forEach(t => t.classList.remove('active'));
                this.classList.add('active');
                const type = this.getAttribute('data-voucher-tab');
                renderVouchers(type);
            });
        });

        document.getElementById("voucherSearch").addEventListener("input", function () {
            const keyword = this.value.toLowerCase();
            const type = document.querySelector('[data-voucher-tab].active').getAttribute('data-voucher-tab');
            renderVouchers(type, keyword);
        });
    });

    function renderVouchers(type = "all", search = "") {
        const container = document.getElementById("voucherList");
        container.innerHTML = "";

        let filtered = allVouchers;

        // Lọc theo type dựa trên voucher.voucher.storeId
        if (type === "shop") filtered = filtered.filter(v => v.voucher && v.voucher.storeId !== null);
        if (type === "floor") filtered = filtered.filter(v => v.voucher && v.voucher.storeId === null);

        if (search.trim() !== "") {
            filtered = filtered.filter(v =>
                (v.voucher && v.voucher.type && v.voucher.type.toLowerCase().includes(search)) ||
                (v.voucher && (v.voucher.reduce + '').includes(search)) ||
                (v.voucher && (v.voucher.minOrder + '').includes(search))
            );
        }

        if (filtered.length === 0) {
            container.innerHTML = `<div class="col-12 text-center text-muted">Không có voucher nào phù hợp.</div>`;
            return;
        }

        filtered.forEach(userVoucher => {
            const v = userVoucher.voucher;
            if (!v) return;

            const isShop = v.type === 'Shop' || v.type === 1;
            const isPlatform = v.type === 'Platform' || v.type === 0;

            const iconColor = isShop ? "text-danger" : "text-success";
            const btnColor = isShop ? "btn-outline-danger" : "btn-outline-success";

            // ✅ Dùng VoucherType hiển thị label
            const label = isShop
                ? `<i class="bi bi-shop"></i> Mã của shop`
                : `<i class="bi bi-cart4"></i> Mã của sàn`;

            const reduceValue = Number(v.reduce) || 0;
            const minOrderValue = Number(v.minOrder) || 0;

            // ✅ Format giảm giá theo kiểu mã
            let reduceText = isShop
                ? `Giảm ${reduceValue}%`
                : `Giảm ${reduceValue.toLocaleString('vi-VN')}₫`;

            const minOrder = minOrderValue.toLocaleString('vi-VN');

            // ✅ Format ngày tháng
            let endDate = 'N/A';
            let savedDate = 'N/A';

            try {
                if (v.endDate) {
                    const endDateObj = new Date(v.endDate);
                    if (!isNaN(endDateObj.getTime())) {
                        endDate = endDateObj.toLocaleDateString("vi-VN");
                    }
                }
            } catch (e) {
                console.error('Error parsing endDate:', v.endDate);
            }

            try {
                if (userVoucher.savedAt) {
                    const savedDateObj = new Date(userVoucher.savedAt);
                    if (!isNaN(savedDateObj.getTime())) {
                        savedDate = savedDateObj.toLocaleDateString("vi-VN");
                    }
                }
            } catch (e) {
                console.error('Error parsing savedAt:', userVoucher.savedAt);
            }

            const div = document.createElement("div");
            div.className = "col-12 col-md-6";
            div.innerHTML = `
                    <div class="border rounded p-3 d-flex align-items-center justify-content-between bg-light">
                        <div class="d-flex align-items-center gap-3">
                            <div class="${iconColor}" style="font-size: 2rem;">
                                <i class="bi bi-ticket-perforated-fill"></i>
                            </div>
                            <div>
                                <h6 class="mb-1">${reduceText}</h6>
                                <p class="text-muted small mb-0">Đơn tối thiểu ${minOrder} đ</p>
                                <small class="text-danger">HSD: ${endDate}</small>
                                <div class="text-muted small">${label}</div>
                                <small class="text-info">Đã lưu: ${savedDate}</small>
                            </div>
                        </div>
                        <button class="btn ${btnColor}">Sử dụng</button>
                    </div>
                `;
            container.appendChild(div);
        });
    }


</script>
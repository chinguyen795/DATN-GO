@model List<DATN_GO.ViewModels.Address.AddressViewModel>
@{
    ViewData["Title"] = "Địa chỉ Page";
}
<style>
    .btn {
        text-transform: none !important;
    }
</style>

<div class="container py-5">

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="bg-crimson text-white p-3 rounded-top d-flex align-items-center mb-4">
        <h5 class="mb-0">ĐỊA CHỈ CỦA TÔI</h5>
    </div>

    <div class="row align-items-center mb-4">
        <div class="col-md-6">
            <div class="input-group shadow-sm rounded">
                <input type="text" id="searchInput" class="form-control border-danger" placeholder="Tìm kiếm địa chỉ..." aria-label="Search">
                <button id="searchButton" class="btn btn-crimson" type="button">
                    <i class="bi bi-search"></i>
                </button>
            </div>
        </div>

        <div class="col-md-6 d-flex justify-content-md-end mt-3 mt-md-0">
            <a asp-action="Create" class="btn btn-crimson">
                <i class="bi bi-plus-lg me-1"></i>Thêm địa chỉ mới
            </a>
        </div>
    </div>
<div class="table-responsive pb-5">
    <table class="table table-hover table-bordered align-middle w-100 shadow-sm">
        <thead class="table-light">
            <tr>
                <th class="text-center">#</th>
                <th>Tên người nhận</th>
                <th>Số điện thoại</th>
                <th>Địa chỉ</th>
                <th>Mô tả</th>
                <th>Trạng thái</th>
                <th class="text-center">Thao tác</th>
            </tr>
        </thead>
        <tbody>
@{
    // Lọc: chỉ lấy địa chỉ có WardId và DistrictId (khác null và > 0)
    var addresses = (Model ?? new List<DATN_GO.ViewModels.Address.AddressViewModel>())
        .Where(a => (a.WardId ?? 0) > 0 && (a.DistrictId ?? 0) > 0)
        .OrderByDescending(a => a.Status == AddressStatus.Default)
        .ToList();

    if (addresses.Any())
    {
        int index = 1;
        foreach (var address in addresses)
        {
            <tr class="address-row">
                <td class="text-center">@index</td>
                <td><strong>@address.Name</strong></td>
                <td><strong>@address.Phone</strong></td>
                <td>
                    @{
                        var fullAddress = string.Join(", ", new[] {
                            address.WardName, address.DistrictName, address.CityName
                        }.Where(s => !string.IsNullOrWhiteSpace(s)));
                    }
                    @fullAddress
                </td>
                <td>@address.Description</td>
                <td>
                    @if (address.Status == AddressStatus.Default)
                    {
                        <span class="badge bg-success">Mặc định</span>
                    }
                    else
                    {
                        <span class="badge bg-secondary">Không mặc định</span>
                    }
                </td>
                <td class="text-center">
                    <div class="d-flex flex-column align-items-center gap-1">
                        <a asp-action="Edit" asp-route-id="@address.Id" class="btn btn-sm btn-outline-warning w-100" style="text-transform: capitalize;">
                            <i class="bi bi-pencil-square"></i> Sửa
                        </a>
                        <button type="button" class="btn btn-sm btn-outline-crimson w-100"
                                data-bs-toggle="modal"
                                data-bs-target="#deleteConfirmModal"
                                data-id="@address.Id" style="text-transform: capitalize;">
                            <i class="bi bi-trash3"></i> Xoá
                        </button>

                        @if (address.Status != AddressStatus.Default)
                        {
                            <button type="button" class="btn btn-sm btn-outline-success w-100"
                                    data-bs-toggle="modal"
                                    data-bs-target="#confirmSetDefaultModal"
                                    data-id="@address.Id" style="text-transform: capitalize;">
                                <i class="bi bi-bookmark-heart"></i> Mặc định
                            </button>
                        }
                    </div>
                </td>
            </tr>
            index++;
        }
    }
    else
    {
        <tr>
            <td colspan="7" class="text-center">Không có địa chỉ hợp lệ được tìm thấy.</td>
        </tr>
    }
}
        </tbody>
    </table>
</div>



    <!-- Modal xác nhận xoá -->
    <div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-crimson text-white">
                    <h5 class="modal-title">Xác nhận xoá</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">Bạn có chắc chắn muốn xoá địa chỉ này không?</div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-light" data-bs-dismiss="modal" style="text-transform: capitalize;">Đóng</button>
                    <a href="#" class="btn btn-crimson" id="confirmDeleteBtn" style="text-transform: capitalize;">Xoá</a>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal xác nhận đặt mặc định -->
    <div class="modal fade" id="confirmSetDefaultModal" tabindex="-1" aria-labelledby="confirmSetDefaultModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-success text-white">
                    <h5 class="modal-title">Xác nhận mặc định</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    Bạn có chắc chắn muốn đặt địa chỉ này làm <strong>mặc định</strong> không?
                </div>
                <div class="modal-footer">
                    <form id="setDefaultForm" method="post">
                        <button type="button" class="btn btn-light" data-bs-dismiss="modal" style="text-transform: capitalize;">Đóng</button>
                        <button type="submit" class="btn btn-success" style="text-transform: capitalize;">Đặt làm mặc định</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function removeVietnameseTones(str) {
        str = str.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
        str = str.replace(/đ/g, "d").replace(/Đ/g, "D");
        return str;
    }

    document.addEventListener('DOMContentLoaded', function () {
        const searchInput = document.getElementById('searchInput');
        if (searchInput) {
            searchInput.addEventListener('input', function () {
                const keyword = removeVietnameseTones(this.value.toLowerCase().trim());
                const rows = document.querySelectorAll('.address-row');

                rows.forEach(row => {
                    const rowText = removeVietnameseTones(row.innerText.toLowerCase());
                    row.style.display = rowText.includes(keyword) ? '' : 'none';
                });
            });
        }

        const deleteModal = document.getElementById('deleteConfirmModal');
        const confirmBtn = document.getElementById('confirmDeleteBtn');

        if (deleteModal && confirmBtn) {
            deleteModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                const addressId = button?.getAttribute('data-id');
                if (addressId) {
                    const deleteUrl = `/Address/Delete/${addressId}`;
                    confirmBtn.setAttribute('href', deleteUrl);
                }
            });
        }

        const defaultModal = document.getElementById('confirmSetDefaultModal');
        const defaultForm = document.getElementById('setDefaultForm');

        if (defaultModal && defaultForm) {
            defaultModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                const addressId = button?.getAttribute('data-id');
                if (addressId) {
                    defaultForm.setAttribute('action', `/Address/SetDefault/${addressId}`);
                }
            });
        }
    });
</script>
@model DATN_GO.ViewModels.Address.AddressCreateViewModel
@{
    ViewData["Title"] = "THÊM ĐỊA CHỈ MỚI";
}
<style>
    .btn {
        text-transform: none !important;
    }
</style>
<link href='https://api.mapbox.com/mapbox-gl-js/v2.15.0/mapbox-gl.css' rel='stylesheet' />

<div class="container">
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success text-center fade show" id="successMessage" role="alert">
            @TempData["Success"]
        </div>
    }
    @if (ViewBag.ShowDefaultModal == true)
    {
        <script>
            window.addEventListener('DOMContentLoaded', function () {
                var modal = new bootstrap.Modal(document.getElementById('defaultConfirmModalEdit'));
                modal.show();
            });
        </script>
    }

    <div class="row justify-content-center mb-4">
        <div class="col-12 col-md-10 col-lg-10 col-xl-10">

            <div class="card border border-2 rounded-3">

                <div class="card-body">
                    <h3 class="text-center mb-3">@ViewData["Title"]</h3>

                    <div class="mb-4">
                        <a asp-action="Address" class="btn btn-light">
                            <i class="bi bi-arrow-left"></i> Quay về danh sách
                        </a>
                    </div>

                    <form asp-action="Create" method="post">
                        <input type="hidden" asp-for="UserId" id="UserId" />
                        <span asp-validation-for="UserId" class="text-danger small"></span>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label asp-for="Name" class="form-label">Tên người nhận</label>
                                <input asp-for="Name" class="form-control" id="Name" placeholder="Nhập tên người nhận..." />
                                <span asp-validation-for="Name" class="text-danger small"></span>
                            </div>
                            <div class="col-md-6">
                                <label asp-for="Phone" class="form-label">Số điện thoại</label>
                                <input asp-for="Phone" class="form-control" id="Phone" placeholder="Nhập sđt..." />
                                <span asp-validation-for="Phone" class="text-danger small"></span>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label asp-for="Status" class="form-label">Trạng thái</label>
                                <select asp-for="Status" class="form-control" id="Status">
                                    <option value="@((int)AddressStatus.Default)">Mặc định</option>
                                    <option value="@((int)AddressStatus.NotDefault)">Không mặc định</option>
                                </select>
                                <span asp-validation-for="Status" class="text-danger small"></span>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label asp-for="CityName" class="form-label">Tỉnh / Thành phố</label>
                                <select asp-for="CityName" class="form-control" id="CityName">
                                    <option value="">-- Chọn tỉnh --</option>
                                    @foreach (var city in Model.Cities)
                                    {
                                        <option value="@city.CityName">@city.CityName</option>
                                    }
                                </select>
                                <span asp-validation-for="CityName" class="text-danger small"></span>
                            </div>

                            <div class="col-md-4">
                                <label asp-for="DistrictName" class="form-label">Quận / Huyện</label>
                                <select asp-for="DistrictName" class="form-control" id="DistrictName">
                                    <option value="">-- Chọn huyện --</option>
                                </select>
                                <span asp-validation-for="DistrictName" class="text-danger small"></span>
                            </div>

                            <div class="col-md-4">
                                <label asp-for="WardName" class="form-label">Phường / Xã</label>
                                <select asp-for="WardName" class="form-control" id="WardName">
                                    <option value="">-- Chọn xã --</option>
                                </select>
                                <span asp-validation-for="WardName" class="text-danger small"></span>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Description" class="form-label">Mô tả</label>
                            <input asp-for="Description" class="form-control" id="Description" placeholder="Nhập mô tả..." />
                            <span asp-validation-for="Description" class="text-danger small"></span>
                        </div>

                        <input type="hidden" asp-for="Latitude" id="Latitude" />
                        <span asp-validation-for="Latitude" class="text-danger small"></span>

                        <input type="hidden" asp-for="Longitude" id="Longitude" />
                        <span asp-validation-for="Longitude" class="text-danger small"></span>

                        <div class="d-flex justify-content-center mt-4">
                            <button id="submitBtn" type="submit" class="btn btn-outline-danger" style="text-transform: capitalize;">
                                <span class="spinner-border spinner-border-sm d-none" id="loadingSpinner" role="status" aria-hidden="true"></span>
                                <span id="btnText"><i class="bi bi-save"></i> Thêm địa chỉ</span>
                            </button>
                        </div>
                    </form>

                </div>
            </div>

            @*             <div id="map" style="height: 400px;" class="mt-4 border border-2 rounded-3"></div> *@
        </div>
    </div>
</div>

@* Modal xác nhận  *@
<div class="modal fade" id="defaultConfirmModal" tabindex="-1" aria-labelledby="defaultConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-dark">
                <h5 class="modal-title" id="defaultConfirmModalLabel">Xác nhận địa chỉ mặc định</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>
            <div class="modal-body">
                Người dùng đã có địa chỉ mặc định: <br />
                <strong>@ViewBag.ExistingDefault</strong> <br /><br />
                Bạn có muốn thay thế bằng địa chỉ mới không?
            </div>
            <div class="modal-footer">
                <form method="post" asp-action="ConfirmReplaceDefault">
                    <input type="hidden" name="confirm" value="true" />
                    <button type="submit" class="btn btn-primary">Có, thay thế</button>
                </form>

                <form method="post" asp-action="ConfirmReplaceDefault">
                    <input type="hidden" name="confirm" value="false" />
                    <button type="submit" class="btn btn-secondary">Không</button>
                </form>
            </div>

        </div>
    </div>
</div>

<!-- Scripts -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src='https://api.mapbox.com/mapbox-gl-js/v2.15.0/mapbox-gl.js'></script>

<script>
    // ==== State (no mapbox, no marker) ====
    let dataLoaded = false;

    // ==== Utils ====
    function resetDropdown(selector, placeholder) {
        $(selector).html(`<option value="">${placeholder}</option>`);
    }

    // bỏ dấu tiếng Việt + lowercase + trim (để so khớp "thanh pho ho chi minh" ~ "Thành phố Hồ Chí Minh")
    function vnNorm(s) {
        s = (s || '').toString().trim().toLowerCase();
        return s
            .normalize('NFD').replace(/[\u0300-\u036f]/g, '')
            .replace(/đ/g, 'd');
    }

    function like(a, b) {
        const A = vnNorm(a), B = vnNorm(b);
        return A === B || A.includes(B) || B.includes(A);
    }

    $(document).ready(function () {
        // (Tùy chọn) clear Lat/Lon ban đầu để tránh hiểu nhầm thành vị trí mặc định
        $('#Latitude').val('');
        $('#Longitude').val('');

        // ===== Load locations.json → đổ 3 select =====
        $.getJSON("/data/locations.json", function (data) {
            window.locationData = data || [];

            // Đổ Tỉnh
            resetDropdown('#CityName', '-- Chọn tỉnh --');
            data.forEach(city => {
                $('#CityName').append(`<option value="${city.CityName}">${city.CityName}</option>`);
            });

            // Khi chọn Tỉnh → đổ Huyện
            $('#CityName').on('change', function () {
                const selectedCityName = $(this).val();
                const city = data.find(c => vnNorm(c.CityName) === vnNorm(selectedCityName));

                resetDropdown('#DistrictName', '-- Chọn huyện --');
                resetDropdown('#WardName', '-- Chọn xã --');

                if (city?.Districts) {
                    city.Districts.forEach(d => {
                        $('#DistrictName').append(`<option value="${d.DistrictName}">${d.DistrictName}</option>`);
                    });
                }
            });

            // Khi chọn Huyện → đổ Xã
            $('#DistrictName').on('change', function () {
                const selectedCityName = $('#CityName').val();
                const selectedDistrictName = $(this).val();

                const city = data.find(c => vnNorm(c.CityName) === vnNorm(selectedCityName));
                const district = city?.Districts?.find(d => vnNorm(d.DistrictName) === vnNorm(selectedDistrictName));

                resetDropdown('#WardName', '-- Chọn xã --');

                if (district?.Wards) {
                    district.Wards.forEach(w => {
                        $('#WardName').append(`<option value="${w.WardName}">${w.WardName}</option>`);
                    });
                }
            });

            // Khi chọn Xã → geocode để cập nhật Lat/Lon (không hiện lỗi nếu không tìm thấy)
            $('#WardName').on('change', function () {
                const wardName = $('#WardName').val();
                const districtName = $('#DistrictName').val();
                const cityName = $('#CityName').val();

                if (wardName && districtName && cityName) {
                    const full = `${wardName}, ${districtName}, ${cityName}`;
                    const url = `https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(full)}&format=json`;

                    fetch(url)
                        .then(res => res.json())
                        .then(data => {
                            if (Array.isArray(data) && data.length > 0) {
                                const lat = parseFloat(data[0].lat);
                                const lon = parseFloat(data[0].lon);
                                $('#Latitude').val(isFinite(lat) ? lat : '');
                                $('#Longitude').val(isFinite(lon) ? lon : '');
                            } else {
                                // Không tìm thấy → giữ trống, không báo lỗi
                                $('#Latitude').val('');
                                $('#Longitude').val('');
                            }
                        })
                        .catch(() => {
                            // Lỗi mạng/API → giữ trống, không báo lỗi
                            $('#Latitude').val('');
                            $('#Longitude').val('');
                        });
                } else {
                    $('#Latitude').val('');
                    $('#Longitude').val('');
                }
            });

            dataLoaded = true;
        });

        // ===== Validation (REALTIME) =====
        $('span[data-valmsg-for]').hide();

        const nameRegex = /^[A-Za-zÀ-ỹăâêôơưđÀ-ỸĂÂÊÔƠƯĐ' -]{2,50}$/;
        const vnPhoneRegex = /^(0|\+84)(3[2-9]|5[2689]|7[06-9]|8[1-689]|9\d)\d{7}$/;

        function validDescription(v) {
            if (!v) return false;
            const s = v.trim();
            return s.length >= 5 && s.length <= 255 && /[A-Za-zÀ-ỹ0-9]/.test(s);
        }

        function msgFor(id) { return $(`span[data-valmsg-for="${id}"]`); }
        function setInvalid($el, msg) { $el.addClass('is-invalid').removeClass('is-valid'); msgFor($el.attr('id')).text(msg).show(); }
        function setValid($el) { $el.removeClass('is-invalid').addClass('is-valid'); msgFor($el.attr('id')).hide(); }

        function validateName() {
            const $el = $('#Name');
            const v = ($el.val() || '').trim();
            if (!v) { setInvalid($el, 'Vui lòng nhập tên người nhận'); return false; }
            if (!nameRegex.test(v)) { setInvalid($el, 'Tên không hợp lệ (2–50 ký tự, cho phép dấu, khoảng trắng, \' và -)'); return false; }
            setValid($el); return true;
        }

        function validatePhone() {
            const $el = $('#Phone');
            const v = ($el.val() || '').replace(/\s+/g, '');
            if (!v) { setInvalid($el, 'Vui lòng nhập số điện thoại'); return false; }
            if (!vnPhoneRegex.test(v)) { setInvalid($el, 'Số điện thoại Việt Nam không hợp lệ'); return false; }
            setValid($el); return true;
        }

        function validateDescription() {
            const $el = $('#Description');
            const v = ($el.val() || '');
            if (!v.trim()) { setInvalid($el, 'Vui lòng nhập mô tả'); return false; }
            if (!validDescription(v)) { setInvalid($el, 'Mô tả từ 5–255 ký tự, phải có chữ hoặc số'); return false; }
            setValid($el); return true;
        }

        function validateSelect(id, label) {
            const $el = $('#' + id);
            const v = ($el.val() || '').trim();
            if (!v) { setInvalid($el, `Vui lòng chọn ${label}`); return false; }
            setValid($el); return true;
        }

        // Realtime
        $('#Name').on('input blur', validateName);
        $('#Phone').on('input blur', validatePhone);
        $('#Description').on('input blur', validateDescription);
        $('#Status').on('change blur', () => validateSelect('Status', 'trạng thái'));
        $('#CityName').on('change blur', () => validateSelect('CityName', 'tỉnh/thành phố'));
        $('#DistrictName').on('change blur', () => validateSelect('DistrictName', 'quận/huyện'));
        $('#WardName').on('change blur', () => validateSelect('WardName', 'phường/xã'));

        // Prefill
        (function prefill() {
            validateName(); validatePhone(); validateDescription();
            validateSelect('Status', 'trạng thái');
            validateSelect('CityName', 'tỉnh/thành phố');
            validateSelect('DistrictName', 'quận/huyện');
            validateSelect('WardName', 'phường/xã');
        })();

        // Submit gate (đã bỏ validateLatLon)
        $('#submitBtn').on('click', function (e) {
            let ok = true;
            if (!validateName()) ok = false;
            if (!validatePhone()) ok = false;
            if (!validateDescription()) ok = false;
            if (!validateSelect('Status', 'trạng thái')) ok = false;
            if (!validateSelect('CityName', 'tỉnh/thành phố')) ok = false;
            if (!validateSelect('DistrictName', 'quận/huyện')) ok = false;
            if (!validateSelect('WardName', 'phường/xã')) ok = false;

            if (!ok) e.preventDefault();
        });
    });
</script>




